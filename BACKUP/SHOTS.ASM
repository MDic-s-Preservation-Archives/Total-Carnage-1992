	.FILE	'SHOTS.ASM'
	.TITLE	'PROJECTILES FROM PLAYERS STUFF'
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST
	
;
; INITIATED:		 AUG 30,1990
; MODIFIED:		 !
; SOFTWARE:		 MARK TURMELL
;
; COPYRIGHT (C) 1989 WILLIAMS ELECTRONICS GAMES, INC.
;
;
; GET THE SYSTEM STUFF

	.INCLUDE	"MPROC.EQU"		;MPROC EQUATES
	.INCLUDE	"DISP.EQU"		;DISPLAY PROC. EQUATES
	.INCLUDE	"\VIDEO\SYS\SYS.INC"	;Z UNIT SYSTEM EQUATES
	.INCLUDE	"\VIDEO\SYS\MACROS.HDR"	;MACROS DEFINITIONS
	.INCLUDE	"IMGTBL.GLO"
	.INCLUDE	"GAME.EQU"
;
;SOUNDS EXTERNAL
;
	.REF	EXP2HI,SHOT,TOTCARN,FLAMSND,SHOT2,FEET,SCASH,KEYSND,WOO1
	.REF	WOO2,GRNSND,THUMP,THUMP2,MTING,GETWPN,SEXP2HI,SALTXP4,TING
	.REF	SETDWN,GULP,TING2,TING3
	.REF	SCASH2
;
;SYMBOLS EXTERNALLY DEFINED
;
	.REF	PCNT,OUT_FLG,FRANIM,BCURRENT,CLEANUP,SHAKER,INHERE,RINGS
	.REF	SCRADD2,P1DATA,P2DATA,DO_EXTRA,FREETOT,KILL_H1,PEXIST,TBOMBD2
	.REF	KILL_F2,GETFPAL,BGDO,HALT,KILL_LY,COMEOUT,BLUEEXP
	.REF	WARPOUT,PLYRPRCS,GETUGH,CYCLEON
	.ref	slt_smartbomb,NEUTRONB,DOBINGO,HULK_CNT
;
;SYMBOLS DEFINED IN THIS FILE
;
	.DEF	BMBLTSON,ADDBMB,TINGSND
	.DEF	STRT_WPN,KILL_BULL,SPRAYON,NSTPON,EXPCNT
	.DEF	KEYON,RINGON,SMRTON,SHOEON,EXTRA,BMBON,DEL_BULL,TCSH,BOOMS
	.DEF	FIREON,GRENON,SPDGON,CLNICN,CHK_BULL,SBOMB,KILL_BULL2
	.def	SBSND,KILL_BULLG
;	.def	MAPON

;UNINITIALIZED RAM DEFINITIONS

;	.BSS	MAPON,16		;MAP PICKED UP, FLAG FOR MESSAGES
	.BSS	EXPCNT,16		;SMART BOMB EXP CNT

;EQUATES FIRST ORIGINATED IN THIS FILE

;PUT IN ANGLE VELOCITIES!
BLTYVEL		.EQU	072000H			;>164000
BLTXVEL		.EQU	072000H			;>164000
BL3YVEL		.EQU	032000H			;>164000
BL3XVEL		.EQU	039000H			;>164000
BLT5YVEL	.EQU	038000H			;>164000
BLT5XVEL	.EQU	040000H			;>164000
GRNYVEL		.EQU	000H
GRNXVEL		.EQU	2000H
;-18000 FOR FLATFACE
;GRNYVEL2		.EQU	-018000H
;
;GRNXVEL2		.EQU	-018000H

	.TEXT
RINGON:
;TURN RING ON AROUND PLAYER ICON PICKUP
;REDUCE MMTM!!!
	MMTM	SP,A1,A7,A9
	MOVE	*A0(OPLINK),A0,L
	MOVE	*A0(PNUM),A9
	MOVI	GULP,A0
	CALLA	ONESND
;	MOVE	@RINGTIME,A10
;IF ALREADY A RING FOR THIS PLYR
;KILL OLD PROC AND RESTART ANEW
	CMPI	1,A9
	JRZ	ONEP
	MOVI	RNG2PID,A0
	CLR	A1
	NOT	A1
	CALLA	EXISTP
	JRZ	STRT2
	CALLA	KILL
STRT2
	MOVI	50,A10				;TIME RINGS ARE ON
	CREATE	RNG2PID,RINGS			;PLACE RING AROUND PLAYER X
	JRUC	ROUT
ONEP
	MOVI	RNG1PID,A0
	CLR	A1
	NOT	A1
	CALLA	EXISTP
	JRZ	STRT1
	CALLA	KILL
STRT1
	MOVI	50,A10				;TIME RINGS ARE ON
	CREATE	RNG1PID,RINGS			;PLACE RING AROUND PLAYER X
ROUT	CALLR	CLNICN
	MMFM	SP,A1,A7,A9
	RETS

BMBLTSON
	MMTM	SP,A1,A7,A9,A11
	MOVE	*A0(OPLINK),A11,L
	MOVE	*A11(PNUM),A9
	CMPI	1,A9
	JRZ	ONEP4
	MOVI	BMBLT2PID,A0
	CLR	A1
	NOT	A1
	CALLA	EXISTP
	JRZ	STRT4
	CALLA	KILL
STRT4
	MOVK	10,A10				;# OF BOMBS TO DROP FOR PLYR
	CREATE	BMBLT2PID,DOBMBS
	JRUC	ADSHOE
ONEP4
	MOVI	BMBLT1PID,A0
	CLR	A1
	NOT	A1
	CALLA	EXISTP
	JRZ	STRT14
	CALLA	KILL
STRT14
	MOVK	10,A10	
	CREATE	BMBLT1PID,DOBMBS
ADSHOE
;TURN ON FAST SHOES ALSO
	MOVE	*A11(LEG_PRC),A9,L
;PICKED UP TENNIS SHOES!
	MOVI	08140H,A1
	MOVE	A1,*A9(SHOECNT),W
	CALLR	CLNICN
	MMFM	SP,A1,A7,A9,A11
	RETS
DOBMBS
;A9=1 OR 2 FOR PLYR #
;A10=# OF BOMBS TO DROP
	MOVE	A9,A1
	DEC	A1
	SLL	5,A1
	MOVI	PLYRPRCS,A11
	ADD	A1,A11
	MOVE	*A11,A11,L
DB2
	MOVE	@HALT,A0
	JRNZ	NOBM
	MOVE	@WARPOUT,A0
	JRNZ	NOBM
;PLACE TIME BOMB HERE
	MOVE	*A11(DEAD),A0
	JRNZ	DI
;PLACE BOMB ON GROUND
	CREATE	BMBPID,TBOMBD2
	MOVI	SETDWN,A0			;SET DOWN SND
	CALLA	ONESND
	DEC	A10
	JRZ	DI
NOBM	SLEEPK	25
	JRUC	DB2

EXTRA:
;A0=PLYR
;A8=ICON
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7
	MOVE	*A8(OIMG),A1,L
	CMPI	SPIN1,A1			;WARP
	JRZ	AWARP
	CMPI	MAPBUTN,A1
	JRNZ	EX1
;THIS IS A MAPBUTN
	MOVI	BGDO,A7
	MOVK	1,A0
	MOVE	A0,@HALT
EX2	MOVE	*A8(OPLINK),A0,L
	CALLA	XFERPROC
	MOVE	*A8(OFLAGS),A0
	ORI	M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	MOVK	1,A0
	MOVE	A0,@OUT_FLG
NOPE	MMFM	SP,A1,A2,A3,A4,A5,A6,A7
	RETS
AWARP	MOVI	COMEOUT,A7
	MOVE	A0,A9
	JRUC	EX2

EX1	CMPI	PLAYER,A1
	JRNZ	NOPE
;FREE MAN ICON TOUCHED
	MOVE	*A0(OPLINK),A10,L
	CREATE	0,FLASHME
	MOVE	*A10(PNUM),A10
	MOVI	P1DATA,A2
	CMPI	1,A10
	JRZ	TAG1
	MOVI	P2DATA,A2
TAG1	CALLA	DO_EXTRA

	MOVE	*A8(OYPOS),A0
;CHECK IF WARP LOCKDOWN FREE MAN
	CMPI	127+200+60,A0
	JRNZ	TAG1A
	MOVE	*A8(OXPOS),A0
	CMPI	180+200-3,A0
	JRZ	TAG2
	CMPI	220+200-3,A0
	JRZ	TAG2
TAG1A	MOVE	@FREETOT,A0
	INC	A0
	MOVE	A0,@FREETOT
	JRUC	FLYCONT
TAG2
	CLR	A11
	JRUC	FLYCONTA

KEYON:
;PLAYER NOW CARRIES KEY
;A0=PLYR
;A8=ICON
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7
	MOVE	*A0(OPLINK),A10,L
	CREATE	0,FLASHME
	MOVE	*A10(PNUM),A10
	MOVI	P1DATA,A2
;	MOVE	A2,@MAPON
	MOVI	KEYPT,A1
	CMPI	1,A10
	JRZ	KEY1
	MOVI	P2DATA,A2
KEY1
	MOVE	*A2(TKEYS),A0
	INC	A0
	MOVE	A0,*A2(TKEYS)

	CALLA	SCRADD2
	MOVI	KEYSND,A0		;KEY VOICE CALL
	CALLA	ONESND
FLYCONT
	MOVK	1,A11
FLYCONTA
	MOVI	CLSDEAD,A0
	MOVE	A0,*A8(OID)
	MOVI	DMAWNZ|M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	MOVI	300,A0
	MOVE	A0,*A8(OZPOS)
	MOVE	*A8(OPLINK),A0,L
	DEC	A10
FLYCONT2
	MOVI	ICONPID,A1
	MOVI	INHERE,A7		;FLOAT TOWARD SCORE BOARD
	CALLA	XFERPROC
	MOVK	1,A0
	MOVE	A0,@OUT_FLG
	MMFM	SP,A1,A2,A3,A4,A5,A6,A7
	RETS
TCSH:
;TOUCH CASH ON FLOOR
;A0=PLYR
;A8=BMB IMG
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7
	MOVE	*A0(OPLINK),A0,L
	MOVE	*A0(PNUM),A10
	MOVI	P1DATA,A1
	DEC	A10
	JRZ	X0
	CMPI	1,A10
	JRNZ	$
	MOVI	P2DATA,A1
X0 	MOVE	*A8(OIMG),A0,L
	CMPI	USFLG,A0
	JRNZ	X1
	MOVE	*A1(TFLAGS),A0		;TOTAL FLAGS PICKED UP
	INC	A0
	MOVE	A0,*A1(TFLAGS)
	JRUC	X2
X1	MOVE	*A1(CASHCNT),A0
	INC	A0
	MOVE	A0,*A1(CASHCNT)
X2
;SUBTRACT OUT TWPNS PICKED UP
	MOVE	*A1(TWPNS),A0
	DEC	A0
	MOVE	A0,*A1(TWPNS)
;	MOVE	@PCNT,A0
;	ANDI	07H,A0
;	SLL	5,A0
;	ADDI	CSHSND,A0
;	MOVE	*A0,A0,L
	MOVI	SCASH,A0		;GET CASH PICKUP SND
	CALLA	ONESND
	MOVI	CLSDEAD,A0
	MOVE	A0,*A8(OID)
	MOVI	DMAWNZ|M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	MOVI	500,A0			;300
	MOVE	A0,*A8(OZPOS)
;JEWEL ON GROUND JUMPS IN HERE
;A10=0 OR 1 FOR PLYR #
;A8=ICON IMG
;A11=1 IF FROM KEY FLOATING TO SCORE BOARD
	CLR	A11
	CREATE	FUTUREPID,INHERE
	MMFM	SP,A1,A2,A3,A4,A5,A6,A7
	RETS
;CSHSND	.LONG	SCASH1,SCASH2,SCASH3,SCASH4,SCASH5
;	.LONG	SCASH4,SCASH2,SCASH5

BMBON:
;PLAYER PICKED UP EXTRA BOMB
;A0=PLYR
;A8=BMB IMG
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7
	MOVE	*A0(OPLINK),A0,L
	MOVE	*A0(PNUM),A10
	MOVI	SCASH2,A0
	CALLA	ONESND
 	MOVI	P2DATA+BMB_CNT,A0
	CMPI	1,A10
	JRNZ	FLY
	MOVI	P1DATA+BMB_CNT,A0
FLY	CALLR	ADDBMB
	MOVI	CLSDEAD,A0
	MOVE	A0,*A8(OID)
	MOVI	DMAWNZ|M_FLIPH|M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	MOVI	300,A0
	MOVE	A0,*A8(OZPOS)
	MOVE	*A8(OPLINK),A0,L
	DEC	A10
	CLR	A11
	JRUC	FLYCONT2

ADDBMB	MOVE	*A0,A2,W		;@P1DATA+BMB_CNT,A2
	CMPI	20,A2			;CAN CARRY MAXIMUM OF 20 BMBS
	JRNC	NOADD
	INC	A2
	MOVE	A2,*A0,W		;@P1DATA+BMB_CNT
NOADD	RETS
FLASHME
;A10=PROC OF PLYR TO FLASH (TORSO STRUCTURE)
	MOVE	*A10(TSO_PTR),A8,L
	MOVE	*A10(LEG_PTR),A11,L
;	 MOVE	 *A8(OPAL),A10,W
;GIVE THESE IMAGES OTHER PAL
	MOVI	nup2a,A0
	CALLA	GETFPAL			;GET A COLOR MAP ASSIGNMENT
	MOVE	A0,*A8(OPAL),W		;STORE THE NEW PALETTE
	MOVE	A0,*A11(OPAL),W		;STORE THE NEW PALETTE
	SLEEPK	8
;GIVE THESE IMAGES OTHER PAL
	MOVI	nup1,A0
	MOVE	*A10(PNUM),A1
	CMPI	1,A1
	JRZ	XS
	MOVI	nup2,A0
XS	CALLA	GETFPAL			;GET A COLOR MAP ASSIGNMENT
	MOVE	A0,*A8(OPAL),W		;STORE THE NEW PALETTE
	MOVE	A0,*A11(OPAL),W
	DIE

SHOEON:
;A8=SHOE ICON
;FAST SHOES
;REDUCE MMTM!!!
	MMTM	SP,A1,A7,A9,A10
	MOVE	*A0(OPLINK),A10,L
	PUSH	A0
	CREATE	0,FLASHME
	PULL	A0
	MOVE	*A10(LEG_PRC),A9,L

	MOVE	*A8(OIMG),A10,L
	CMPI	SHOES,A10
	JRZ	BOOTS
;PICKED UP TENNIS SHOES!
	MOVI	08280H,A1
	JRUC	SH3
BOOTS 
	MOVE	*A9(SHOECNT),A1
	JRZ	SHOE2
	BTST	15,A1
	JRZ	SH2
;HAVE TENNIS SHOES ON! TAKE'EM OFF
SHOE2	MOVE	A0,A10
	CREATE	0,FLOAT
SH2	MOVI	0A0H,A1	    ;150		;TIME SHOES ARE ON
SH3	MOVE	A1,*A9(SHOECNT),W
	CALLR	CLNICN
	MOVI	FEET,A0
	CALLA	ONESND
	MMFM	SP,A1,A7,A9,A10
	RETS
FLOAT
;A10=LEG IMG
;A9=LEG PROCESS
	MOVE	*A9(TSO_PTR),A8,L
	MOVK	15,A11
FLT2
	SLEEPK	8
	MOVE	*A9(SHOECNT),A0
	JRZ	DI
	BTST	15,A0
	JRNZ	DI
	MOVE	*A10(OYPOS),A0
	XORI	1,A0
	MOVE	A0,*A10(OYPOS)
	DSJ	A11,FLT2
	MOVK	15,A11
	MOVE	A8,A0
	MOVE	A10,A8
	CALLA	GETANIXY
	MOVE	*A8(OFLAGS),A4,W
	ORI	M_NOCOLL,A4
	CALLA	GANISAG
	MOVE	A0,A8
;TURN BACK ON TORSO OBJECT
	JRUC	FLT2
DI	DIE

SMRTON:
;SMART BOMB EVERYTHING ON SCREEN
	MMTM	SP,A1,A7,A10
	MOVE	A0,A9
	MOVE	*A0(OPLINK),A10,L
	CREATE	0,DOBINGO
	CREATE	0,FLASHME
	MOVI	30,A10
	CALLA	SHAKER
	PUSH	A9
	CALLR	CLNICN
	PULL	A9
	CREATE	0,SBSND
	CREATE	0,SBOMB
	MMFM	SP,A1,A7,A10
	RETS
SBSND
	MOVI	SALTXP4,A0
	MOVK	2,A1		;REPEAT IT 3 TIMES
	CALLA	SNDLD		;GO DO IT

	JSRP	BOOMS
	MOVI	TOTCARN,A0	;SPEECH 
	CALLA	ONESND
	DIE
BOOMS
	MOVI	SEXP2HI,A0
	MOVK	1,A1		;REPEAT IT 3 TIMES
	CALLA	SNDLD		;GO DO IT
	SLEEPK	5
	MOVI	SEXP2HI,A0
	MOVK	1,A1		;REPEAT IT 3 TIMES
	CALLA	SNDLD		;GO DO IT
	SLEEPK	5
	MOVI	SEXP2HI,A0
	MOVK	1,A1		;REPEAT IT 3 TIMES
	CALLA	SNDLD		;GO DO IT
	SLEEPK	5
	MOVI	SEXP2HI,A0
	MOVK	1,A1		;REPEAT IT 3 TIMES
	CALLA	SNDLD		;GO DO IT
	SLEEPK	21
	RETP

SBOMB
;SMART BOMB
;A9=PLYR IMG PTR WHO GOT ME
	CLR	A0
	MOVE	A0,@EXPCNT		;SMART BOMB EXP CNT - MAX OUT AT 15!
	MOVE	*A9(OPLINK),A0,L
	MOVE	*A0(PNUM),A0
	MOVI	P1DATA,A9
	DEC	A0
	JRZ	BAD0
	MOVI	P2DATA,A9
;A9=P1 OR P2DATA FOR SCORING SMART BOMB POINTS
BAD0
	MOVI	CLSENMY|TYPHULK,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD10
;FOUND A HULK
	MOVE	A0,A8
	CALLA	KILL_H1			;KILL_HULK
	JRUC	BAD0
BAD10	CLR	A0
	MOVE	A0,@HULK_CNT
BAD1
	MOVI	CLSENMY|TYPFND,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD2
;FOUND A FIEND
	MOVE	A0,A8
	CALLA	KILL_F2			;KILL_FIEND
	JRUC	BAD1
BAD2
	MOVI	CLSENMY|TYPGOO,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD3
;FOUND A GOOB
	MOVE	A0,A8
	MOVE	*A8(OPLINK),A0,L
	CALLA	PEXIST
	JRZ	NOK
	CALLA	KILL
NOK	MOVE	A8,A0
	CALLA	DELOBJ
	JRUC	BAD2
BAD3
	MOVI	CLSENMY|TYPGRW,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD4
;FOUND A HULK GROWING
	MOVE	A0,A8
	CALLA	KILL_H1			;KILL_HULK
	JRUC	BAD3
BAD4
	MOVI	CLSENMY|TYPLAYR,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD5
;FOUND A MINE LAYER
	MOVE	A0,A8
	CALLA	KILL_LY			;KILL MINE LAYER TOO!
	JRUC	BAD4
BAD5
	MOVI	CLSPLYR|TYPHLPR|SUBLAY,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD6
	MOVE	*A0(OIMG),A8,L
	CMPI	T72TNK,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB T72 TANK!
	CMPI	BTR60,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB BTR60!
	CMPI	BTRECK,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB BTR60 WRECK!
	CMPI	JEEP,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB JEEP!
	CMPI	SCUD1,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB SCUD TRUCK!
	CMPI	NEUTRONB,A8
	JRZ	BAD6			;BR=DON'T SMART BOMB NEUTBONB!
;FOUND A MINE LAYER WITH CLSPLYR BIT SET FOR A MOMENT!
	MOVE	A0,A8
	CALLA	KILL_LY			;KILL MINE LAYER TOO!
	JRUC	BAD5
BAD6
	MOVI	CLSENMY|TYPAHMD,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD7
	MOVE	A0,A8
	CALLA	KILL_H1			;KILL HULK AS WELL AS AHMED
	JRUC	BAD6
BAD7
	MOVI	CLSENMY|TYPLAYR|SUBFLM,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BAD8
;FOUND A FLAME
	CALLA	DELOBJ
	JRUC	BAD7
BAD8
	movi	CLSENMY|TYPSL,a0
	movi	>ff00,a1
	calla	EXISTOBJ
	jrz	BAD9
	move	a0,a8
	calla	slt_smartbomb
	jruc	BAD8
BAD9
;
;INSERT OTHERS HERE
;
BADCLN
	MOVI	CLSENMY|TYPSHOT,A0
	MOVI	0FFFFH,A1
	CALLA	EXISTOBJ
	JRZ	BADO
;FOUND A CBALL/SHRAPNEL
;NO SCORE
	MOVE	A0,A8
;ALSO USED FOR SHRAPNEL FROM FAT MAN
	MOVE	*A8(OPLINK),A0,L
	JREQ	BADCLN
	CLR	A1
	MOVE	A1,*A8(OPLINK),L
	CALLA	KILL
	MOVE	A8,A0
	CALLA	DELOBJ
	JRUC	BADCLN
BADO
;RESET ALL CNTS!
	DIE
SNDA	
	MOVI	GETWPN,A0
	CALLA	ONESND
	SLEEPK	18H
	MOVI	WOO2,A0
	CALLA	ONESND
	DIE

NSTPON:
	MMTM	SP,A2,A7
	MOVK	SUBNOSTP,A2		;BULLET SUBTYPE
	CALLR	DO_CNT
	CREATE	0,SNDA
	JRUC	ICONIN
SPDGON:
	MMTM	SP,A2,A7
	MOVK	SUBSPDG1,A2		;BULLET SUBTYPE
	CALLR	DO_CNT
	CREATE	0,SNDA
	JRUC	ICONIN
GRENON:
	MMTM	SP,A2,A7
	MOVK	SUBGRND,A2		;BULLET SUBTYPE
	CALLR	DO_CNT
	CREATE	0,SNDA
	JRUC	ICONIN
FIREON:
	MMTM	SP,A2,A7
	MOVK	SUBFIRE1,A2		;BULLET SUBTYPE
	CALLR	DO_CNT
	CREATE	0,SNDA
	JRUC	ICONIN
SPRAYON:
	MMTM	SP,A2,A7
	MOVK	SUBSPRY,A2		;BULLET SUBTYPE
	CALLR	DO_CNT
	CREATE	0,SNDA
ICONIN
;A8=ICON IMAGE
;A0=PLAYER PROCESS WHO GOT ME
	MOVE	A2,*A10(WPN_TYP),W
	CALLR	CLNICN
	CREATE	0,FLASHME
	MMFM	SP,A2,A7
	RETS
DO_CNT	PUSH	A2
	SLL	4,A2
	ADDI	TIMERS,A2
	MOVE	*A2,A2
	MOVE	*A0(OPLINK),A10,L
	MOVE	A2,*A10(SHOTCNT),W
	PULL	A2
	RETS
	
;STUFF SHOT CNT FOR THIS WEAPON
;SUBLZR		.EQU	0001H		;REGULAR LAZER SHOTS
;SUBSPRY	.EQU	0002H		;SPRAY SUB TYPE
;SUBFIRE1	.EQU	0003H		;FIRE BALL WPN
;SUBGRND	.EQU	0004H		;GRENADE
;SUBNOSTP	.EQU	0005H		;NON STOPPING BULLET
;SUBSPDG1	.EQU	0006H		;MACHINE GUN TYP WPN

TIMERS:	.WORD	0,0,38,53,70,47,100

CLNICN
	MOVE	*A8(OFLAGS),A1
	ORI	M_NOCOLL,A1
	MOVE	A1,*A8(OFLAGS)
	MOVE	*A8(OPLINK),A0,L
	MOVE	*A0(PTIME),A9		;TIME IT STILL HAD LEFT TO SLEEP
	MOVI	CLEANUP,A7
	MOVI	ICONPID,A1
	CALLA	XFERPROC
	MOVK	1,A0
	MOVE	A0,@OUT_FLG
	RETS
DEL_BULL
;DEL BULLET OBJ
;NOW DELETE OBJECT FROM OBJLST
	MOVE	*A8(OPLINK),A0,L
;INC BULLET HIT TOTAL FOR THIS PLAYER
	MOVI	P1DATA,A2
	MOVE	*A0(MYPLYR),A1
	DEC	A1
	JRZ	ADB2
	MOVI	P2DATA,A2
ADB2	MOVE	*A2(THITS),A1
	INC	A1
	MOVE	A1,*A2(THITS)
	CALLA	KILL
	MOVE	A8,A0
	MOVE	A8,@OUT_FLG		;TELL SCANNER TO STOP
	CALLA	DELOBJ
	RETS
KILL_BULLG
	MOVE	@PCNT,A0
	ANDI	07H,A0
	JRNZ	KILL_BULL
	CALLA	GETUGH
KILL_BULL
; KILL BULLET WITH AN EXPLOSION
	MOVI	REGEXP,A7
KBL	MOVE	*A8(OPLINK),A0,L
;INC BULLET HIT TOTAL FOR THIS PLAYER
;MYPLYR		.EQU	PDATA+48	;UHW	PLAYER 1 OR 2 FIRED ME=1 OR 2
	MOVI	P1DATA,A2
	MOVE	*A0(MYPLYR),A1
	DEC	A1
	JRZ	DB5
	MOVI	P2DATA,A2
DB5	MOVE	*A2(THITS),A1
	INC	A1
	MOVE	A1,*A2(THITS)
	
	MOVE	A7,@OUT_FLG		;TELL SCANNER TO STOP
	MOVI	BULPID,A1
	CALLA	XFERPROC
	MOVE	*A8(OFLAGS),A0
	ORI	M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	RETS
KILL_BULL2
; KILL BULLET WITH AN EXPLOSION
	CALLR	TINGSND
	MOVI	REGEXP2,A7
	JRUC	KBL
TINGSND
	MOVE	@PCNT,A0
	SLL	32-2,A0
	SRL	32-7,A0			;*32
	ADDI	TINGLST,A0
	MOVE	*A0,A0,L
	JAUC	ONESND
TINGLST	.LONG	TING,TING2,TING3,TING

REGEXP2
	MOVI	FIREEXP,A9		;FRBALL
	JRUC	ONON
FIREEXP:
	.LONG	ABLST1
	.WORD	NEWPALET|3
	.LONG	TNKPAL
	.LONG	ABLST2
	.WORD	3
	.LONG	ABLST3
	.WORD	3
	.LONG	ABLST4
	.WORD	3
	.LONG	ABLST5
	.WORD	3
	.LONG	ABLST6
	.WORD	3
	.LONG	ABLST7
	.WORD	3
	.LONG	0
REGEXP
;REGULAR EXPLOSION HERE
	MOVI	FRBALL,A9		;FRBALL
	MOVI	180,A4
	MOVE	A4,*A8(OZPOS)
ONON
	MOVE	*A8(OXVEL),A4,L
	JRNN	RG1
	NEG	A4
	SRL	2,A4
	NEG	A4
	JRUC	RG2
RG1	SRL	2,A4
RG2	MOVE	A4,*A8(OXVEL),L
	MOVE	*A8(OYVEL),A4,L
	JRNN	RG3
	NEG	A4
	SRL	2,A4
	NEG	A4
	JRUC	RG4
RG3	SRL	2,A4
RG4	MOVE	A4,*A8(OYVEL),L

;EXPLODE BULLET NOW!
	MOVK	1,A1			;COMMAND PASSED TO FRANIM
	JSRP	FRANIM
;DELBL
;NOW DELETE OBJECT FROM OBJLST
	MOVE	A8,A0	
	CALLA	DELOBJ
	DIE

FRBALL	.LONG	FRBAL1			;BULLET FIRE BALL EXPLOSION
	.WORD	2
	.LONG	FRBAL2
	.WORD	2
	.LONG	FRBAL3
	.WORD	2
	.LONG	0
FRBL	.LONG	EXPb1
	.WORD	5
	.LONG	EXPb2
	.WORD	5
	.LONG	EXPb3
	.WORD	4
	.LONG	EXPb4
	.WORD	4
	.LONG	EXPb5
	.WORD	4
	.LONG	0


BULYV	.LONG	-BLTYVEL,-BLTYVEL,0,BLTYVEL,BLTYVEL,BLTYVEL,0,-BLTYVEL
BULXV	.LONG	0,BLTXVEL,BLTXVEL,BLTXVEL,0,-BLTXVEL,-BLTXVEL,-BLTXVEL
BUL3AYV	.LONG	-BL3YVEL,-BL3YVEL,0,BL3YVEL,BL3YVEL,BL3YVEL,0,-BL3YVEL
BUL3AXV	.LONG	0,BL3XVEL,BL3XVEL,BL3XVEL,0,-BL3XVEL,-BL3XVEL,-BL3XVEL
BUL5YV	.LONG	-BLT5YVEL,-BLT5YVEL,0,BLT5YVEL,BLT5YVEL,BLT5YVEL,0,-BLT5YVEL
BUL5XV	.LONG	0,BLT5XVEL,BLT5XVEL,BLT5XVEL,0,-BLT5XVEL,-BLT5XVEL,-BLT5XVEL
GRNYV	.LONG	-GRNYVEL,-GRNYVEL,0,GRNYVEL,GRNYVEL,GRNYVEL,0,-GRNYVEL
GRNXV	.LONG	0,GRNXVEL,GRNXVEL,GRNXVEL,0,-GRNXVEL,-GRNXVEL,-GRNXVEL
;GRNYV2	.LONG	-GRNYVEL2,-GRNYVEL2,0,GRNYVEL2,GRNYVEL2,GRNYVEL2,0,-GRNYVEL2
;GRNXV2	.LONG	0,GRNXVEL2,GRNXVEL2,GRNXVEL2,0,-GRNXVEL2,-GRNXVEL2,-GRNXVEL2

BUL2YV	.LONG	-BLTYVEL,-BLTYVEL,-(BLTYVEL/2),BLTYVEL/2,BLTYVEL
	.LONG	BLTYVEL,BLTYVEL/2,-BLTYVEL
BUL2XV	.LONG	-(BLTXVEL/2),BLTXVEL/2,BLTXVEL,BLTXVEL,BLTXVEL/2
	.LONG	-(BLTXVEL/2),-BLTXVEL,-(BLTXVEL/2)

BUL3YV	.LONG	-BLTYVEL,-(BLTYVEL/2),BLTYVEL/2,BLTYVEL,BLTYVEL
	.LONG	BLTYVEL/2,-(BLTYVEL/2),-(BLTYVEL/2)
BUL3XV	.LONG	BLTXVEL/2,BLTXVEL,BLTXVEL,BLTXVEL/2,-(BLTXVEL/2)
	.LONG	-BLTXVEL,-BLTXVEL,-BLTXVEL

BXL	.LONG	-010000H,008000H,0018000H,08000H,-010000H,-28000H,-30000H,-28000H
BXH	.LONG	0010000H,028000H,030000H,28000H,010000H,-08000H,-018000H,-08000H

BYL	.LONG	-028000H,-28000H,-010000H,08000H,018000H,008000H,-010000H,-28000H
BYH	.LONG	-018000H,-08000H,0010000H,28000H,28000H,028000H,0010000H,-08000H

WHICHXV	.LONG	BULXV,BUL2XV,BUL3XV
WHICHYV	.LONG	BULYV,BUL2YV,BUL3YV

;SUBLZR		.EQU	0001H		;REGULAR LAZER SHOTS
;SUBSPRY	.EQU	0002H		;SPRAY SUB TYPE
;SUBFIRE1	.EQU	0003H		;FIRE BALL WPN
;SUBGRND	.EQU	0004H		;GRENADE
;SUBNOSTP	.EQU	0005H		;NON STOPPING BULLET
;SUBSPDG1	.EQU	0006H		;MACHINE GUN TYP WPN
WPLIST	;SUB BULLET TYPES
	.LONG	NORM,NORM,SPRY,FIREB,GREND,NSTP,MGUN

********************************
* Starts a weapon, called from torso process

STRT_WPN	;A8=*Player obj, A9=Dir 1-8

	MOVE	*A13(WPN_TYP),A1,W
	JRZ	CONTA
	MOVE	*A13(SHOTCNT),A0	;NONSTANDARD WEAPON WILL DEC SHOTCNT
	DEC	A0
	MOVE	A0,*A13(SHOTCNT)
	JRNZ	CONTA
	MOVE	A0,*A13(WPN_TYP)

CONTA	SLL	5,A1
	ADDI	WPLIST,A1
	MOVE	*A1,A0,L
	MOVE	*A13(PNUM),A11		;A11=Player who fired me
	MOVE	A11,A2
	MOVI	P1DATA,A10
	DEC	A2
	JRZ	CONTB
	MOVI	P2DATA,A10
CONTB	MOVE	*A10(TSHOTS),A2
	INC	A2
	MOVE	A2,*A10(TSHOTS)
	JUMP	A0

**************************************************************************

NORM:
;WEAPON 1 - NORMAL FIRE POWER
	CREATE	BULPID,WPN1				;BULPID
;	MOVE	*A13(LSRPTR),A0,L		;HELPER ON FLAG 1=YES
;	JRZ	NOLASER
;	CREATE	BULPID,WPN1A
;NOLASER:
	MOVI	SHOT,A0				;RIFLE SHOT
	jauc	ONESND

NSTP	CREATE	BULPID,WPN5
	CREATE	BULPID,WPN5A
	MOVE	*A10(TSHOTS),A2
	INC	A2
	MOVE	A2,*A10(TSHOTS)
	MOVI	THUMP,A0
	jauc	ONESND

MGUN	;MACHINE GUN

	CREATE	BULPID,WPN6
	MOVI	THUMP2,A0
	jauc	ONESND

FIREB	;FIRE BALL WEAPON

	CREATE	BULPID,WPN3
	MOVI	FLAMSND,A0
	jauc	ONESND

GREND:
;WEAPON 4 - GRENADE WEAPON
	CREATE	BULPID,WPN4
	MOVI	GRNSND,A0
	jauc	ONESND
SPRY:
;SPRAY WEAPON
;WEAPON 2
	MOVE	*A10(TSHOTS),A2
	ADDK	2,A2
	MOVE	A2,*A10(TSHOTS)
	CLR	A10
	CREATE	BULPID,WPN2
	MOVK	1,A10
	CREATE	BULPID,WPN2
	MOVK	2,A10
	CREATE	BULPID,WPN2
	MOVI	SHOT2,A0			;SPRY
	jauc	ONESND


SHOT_INIT	;A6=*XVel_t, A7=*YVel_t, A9=Dir 1-8, A11=Player #1-2

	move	a11,*a13(MYPLYR)
	move	a9,*a13(BLTDIR)
	subk	1,a9
	sll	5,a9			;A9=(Dir-1)*32

	add	a9,a6
	move	*a6,a6,L		;A6=XVel
	add	a9,a7
	move	*a7,a7,L		;A7=YVel
	rets

;WEAPON 5 - NON STOPPING BULLET
;NOW STUFF CORRECT BULLET AND CORRECT FLIP INFO
WPN5
	MOVI	BUL5XV,A6
	MOVI	BUL5YV,A7
	CALLR	SHOT_INIT
	MOVE	*A8(OXVEL),A2,L		;ADD IN PLAYER VELOCITIES
	ADD	A2,A6
	MOVE	*A8(OYVEL),A2,L
	ADD	A2,A7

	move	a9,a2
	addi	B5_TYP,a2
	move	*a2,a2,L		;A2=*Img

	srl	1,a9			;/2
	move	a9,a4
	addi	B1_INFO,a4		;Has PIXSCAN
	move	*a4,a4			;A4=FLAGS

	move	*a8(OXVAL),a0,L		;A8=*Torso for player that fired me
	move	*a8(OYVAL),a1,L
	addi	XYOFFSET5,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal

	MOVI	CLSPLYR|TYPPLBL|SUBNOSTP,A5
	JRUC	DO_IT

;WEAPON 5A - WITH NON STOPPING BULLET
;NOW STUFF CORRECT BULLET AND CORRECT FLIP INFO
WPN5A
	MOVI	BULXV,A6
	MOVI	BULYV,A7
	CALLR	SHOT_INIT

	MOVI	BALL6,A2		;A2=*IMG
	MOVI	DMAWNZ,A4		;FLAGS IN A4
	move	*a8(OXVAL),a0,L		;A8=*Torso for player that fired me
	move	*a8(OYVAL),a1,L
	srl	1,a9			;/2
	addi	XYOFFSET5,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal
       	JRUC	SPDCONT

;WEAPON 2 - 3 BULLETS SPRAYED OUT
;NOW STUFF CORRECT BULLET AND CORRECT FLIP INFO
WPN2
	SLL	5,A10			;GET VELS FOR THIS PROJECTILE
	MOVI	WHICHXV,A6
	ADD	A10,A6
	MOVE	*A6,A6,L
	MOVI	WHICHYV,A7
	ADD	A10,A7
	MOVE	*A7,A7,L
	CALLR	SHOT_INIT

	MOVI	CNNBLL,A2
	MOVI	DMAWNZ,A4
;	MOVI	DMAWNZ+M_PIXSCAN,A4	;TAKE OUT PIXSCAN?

;SPDCONT
	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	srl	1,a9			;/2
	addi	XYOFFSET2,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal
SPDCONT

	MOVI	CLSPLYR|TYPPLBL|SUBSPRY,A5
	JRUC	DO_IT

;FIRE BALL
WPN3
	MOVI	BUL3AXV,A6
	MOVI	BUL3AYV,A7
	CALLR	SHOT_INIT
;ADD IN PLAYERS XY VEL TO FLAMES
	MOVE	*A8(OXVEL),A2,L
	ADD	A2,A6
	MOVE	*A8(OYVEL),A2,L
	ADD	A2,A7

	MOVI	FIRE1,A2		;A2=*IMG
	MOVI	DMAWNZ,A4		;A4=FLAGS, NO PIXSCAN

	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	srl	1,a9			;/2
	addi	XYOFFSET3,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal

	MOVI	CLSPLYR|TYPPLBL|SUBNOSTP,A5	;A5=ID

	MOVI	159,A3			;A3=ZPOS

;XVEL IN A6
;YVEL IN A7
	CALLA	BEGINOBJ2
	MOVI	FRBL,A9
W3_TP
	CALLR	CHK_BULL		;CHECK RECTANGLES
	JRNC	NOH
	CLR	A0			;HIT
	MOVE	A0,*A8(OXVEL),L
	MOVE	A0,*A8(OYVEL),L
	MOVK	1,A1
	JSRP	FRANIM
C32X	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
NOH	CLR	A1
	JSRP	FRANIM
	JRC	C32X
	JRUC	W3_TP

;WEAPON 6 - MACHINE GUN
WPN6
	MOVI	BULXV,A6
	MOVI	BULYV,A7
	CALLR	SHOT_INIT
	MOVE	*A8(OXVEL),A2,L
	ADD	A2,A6
	MOVE	*A8(OYVEL),A2,L
	ADD	A2,A7
	MOVI	SPDBL,A2		;A2=*IMG
	MOVI	DMAWNZ|M_PIXSCAN,A4	;A4=FLAGS

	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	srl	1,a9			;/2
	addi	XYOFFSET6,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal

	MOVI	CLSPLYR|TYPPLBL|SUBSPDG1,A5
	JRUC	DO_IT

WPN4:
;WEAPON 4 - GRENADE
	MOVI	GRNXV,A6
	MOVI	GRNYV,A7
	CALLR	SHOT_INIT
	MOVE	*A8(OXVEL),A2,L
;XVEL IN A6
	ADD	A2,A6
	MOVE	*A8(OYVEL),A2,L
;YVEL IN A7
	ADD	A2,A7
;FLAGS IN A4
	MOVI	DMAWNZ,A4
;IMG IN A2
	MOVI	BALL1,A2		;GRND1

	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L

	MOVI	TOSSDIR,A11
	ADD	A9,A11
	MOVE	*A11,A11,L	;LIST OF OFFSET BYTES!
	MOVI	TOSS2DIR,A10
	ADD	A9,A10
	MOVE	*A10,A10,L	;LIST OF OFFSET BYTES!

	srl	1,a9			;/2
	addi	XYOFFSET4,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
;YVAL IN A1
	add	a5,a1			;A1=YVal
;ID IN A5
	MOVI	CLSDEAD,A5
;ZPOS IN A3
	MOVI	253,A3
	PUSH	A0
	CALLA	BEGINOBJ2
	PULL	A0
	PUSH	A8
	ADDI	0180000H,A1
	MOVI	GSHAD1,A2
	MOVI	58,A3
	CALLA	BEGINOBJ2
	MOVE	A8,A9
	PULL	A8

	CLR	A7
	MOVE	A7,*A13(GTMP)
W4_TP:
	MOVE	*A13(GTMP),A7
	MOVE	A7,A1
	SLL	5,A1
	ADDI	TOSSG,A1
	MOVE	*A1,A1,L
	JRZ	BLWUP
	CMPI	15,A7	;19
	JRNZ	V1
;SET OID
;TURN ON COLLISIONS ALSO!
;	MOVI	CLSPLYR|TYPPLBL|SUBGRND,A5
;	MOVE	A5,*A8(OID),W
V1
	MOVI	DMAWNZ,A4		;GET NEW FLAGS (SAME!)
	CALLA	ANI
	
	MOVB	*A11,A0			;GET X OFFSET
	ADDI	8,A11
	MOVB	*A10,A2			;GET X OFFSET
	ADDI	8,A10
	MOVE	*A8(OXPOS),A1,W
	ADD	A0,A1
	MOVE	A1,*A8(OXPOS),W
	MOVE	*A9(OXPOS),A1,W
	ADD	A2,A1
	MOVE	A1,*A9(OXPOS),W
	MOVB	*A11,A0
	ADDI	8,A11
	MOVB	*A10,A2
	ADDI	8,A10
	MOVE	*A8(OYPOS),A1,W
	ADD	A0,A1
	MOVE	A1,*A8(OYPOS),W
	MOVE	*A9(OYPOS),A1,W
	ADD	A2,A1
	MOVE	A1,*A9(OYPOS),W
	INC	A7
	MOVE	A7,*A13(GTMP)

	SLEEPK	1
	JRUC	W4_TP

BLWUP:
	MOVI	MTING,A0 		;AUDIO BOMB EXPLODE
	CALLA	ONESND			;GRENADE LANDING ON GROUND
BLW2:
	CLR	A0
	MOVE	A0,*A8(OXVEL),L
	MOVE	A0,*A8(OYVEL),L
	MOVE	A9,A0			;DELETE SHADOW
	CALLA	DELOBJ
	MOVI	170,A0			;EXPLOSION OF GRENADE AT IMPACT
	MOVE	A0,*A8(OZPOS)
	MOVI	CLSPLYR|TYPPLBL|SUBGRND,A5
	MOVE	A5,*A8(OID),W
	MOVI	BLUEEXP,A9
	JAUC	FRQDELDIE

;WEAPON 1 - NORMAL BULLET
WPN1
	MOVI	BULXV,A6
	MOVI	BULYV,A7
	CALLR	SHOT_INIT

	move	a9,a2
	addi	B1_TYP,a2
	move	*a2,a2,L		;A2=*IMG

	srl	1,a9			;/2
	move	a9,a4
	addi	B1_INFO,a4
	move	*a4,a4			;A4=FLAGS

	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	addi	XYOFFSET,a9
	move	*a9,a5
	sll	16,a5
	add	a5,a0			;A0=XVal

	move	*a9(8*16),a5
	sll	16,a5
	add	a5,a1			;A1=YVal

	MOVI	CLSPLYR|TYPPLBL|SUBLZR,A5	;A5=ID

DO_IT
	MOVI	159,A3			;A3=ZPOS
;XVEL IN A6
;YVEL IN A7
	CALLA	BEGINOBJ2
LP_TP
;REGULAR BULLETS
;COULD DO THIS SCRTST LESS FREQUENTLY!
	MOVE	*A13(AGE),A0
	INC	A0
	MOVE	A0,*A13(AGE)
	ANDI	03,A0
	JRNZ	C1
	MOVI	[>0,>0],A2	;21,20
	MOVI	[>FF,>1A3],A3	 ;FC,173
	CALLA	SCRTSTG
	JRZ	C1

;A0=1,2,3 OR 4 WHICH IS RETURNED FROM SCRTSTG!

	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
C1
	CALLR	CHK_BULL
	JRNC	NXT
	CLR	A4
	MOVE	A4,*A8(OXVEL),L
	MOVI	FRBALL,A9		;FRBALL
	JRUC	RG4
NXT	SLEEPK	4			;SLEEP 2 MAYBE?
	JRUC	LP_TP

	
;CHECK FOR RECTANGLE COLLISIONS!
CHK_BULL
	MOVE	*A8(OXPOS),A4
	MOVE	*A8(OYPOS),A6
	MOVE	@BCURRENT,A0,L		;CURRENT RECT LIST
	JRZ	OUT
	JRUC	NEXT0
NEXT3	ADDK	16,A0
NEXT2	ADDK	16,A0
NEXT1	ADDK	16,A0
NEXT0	MOVE	*A0+,A1
	JRZ	OUT
	CMP	A1,A4
	JRLT	NEXT3			;IF BRNCH RECT LFT EDGE > PLYR X
	MOVE	*A0+,A1
	CMP	A1,A6			
	JRLT	NEXT2			;IF BRNCH RECT TOP EDGE > PLYR Y
	MOVE	*A0+,A1
	CMP	A1,A4
	JRGT	NEXT1			;IF BRNCH RECT RGT EDGE < PLYR X
	MOVE	*A0+,A1
	CMP	A1,A6
	JRGT	NEXT0			;IF BRNCH RECT BOT EDGE < PLYR Y
	SETC				;HIT
	RETS

OUT	CLRC
	RETS


B1_TYP		;NORMAL WEAPON (1)
	.long	BULUP,BULUPLFT,BULLFT,BULUPLFT
	.long	BULUP,BULUPLFT,BULLFT,BULUPLFT
B5_TYP		;NON STOPPING BULLET
	.long	B2UP,B245,B2SIDE,B245
	.long	B2UP,B245,B2SIDE,B245

B1_INFO		;NORMAL WEAPON (1), PIXSCAN!
	.WORD	DMAWNZ+M_PIXSCAN,	DMAWNZ+M_FLIPH+M_PIXSCAN
	.WORD	DMAWNZ+M_FLIPH+M_PIXSCAN, DMAWNZ+M_FLIPH+M_FLIPV+M_PIXSCAN
	.WORD	DMAWNZ+M_FLIPV+M_PIXSCAN, DMAWNZ+M_FLIPV+M_PIXSCAN
	.WORD	DMAWNZ+M_PIXSCAN,	DMAWNZ+M_PIXSCAN

;SUBLZR		.EQU	0001H		;REGULAR LAZER SHOTS
;SUBSPRY	.EQU	0002H		;SPRAY SUB TYPE
;SUBFIRE1	.EQU	0003H		;FIRE BALL WPN
;SUBGRND	.EQU	0004H		;GRENADE
;SUBNOSTP	.EQU	0005H		;NON STOPPING BULLET
;SUBSPDG1	.EQU	0006H		;MACHINE GUN TYP WPN

XYOFFSET		;NORMAL WEAPON (1)
	.word	15,16,25,23,5,3,1,4	;X
	.word	0,5,10,22,25,22,10,5	;Y
XYOFFSET2		;SPRAY WEAPON
	.word	14,16,25,21,5,5,3,4	;X
	.word	5,5,10,22,25,22,10,5	;Y
XYOFFSET3		;FLAME THROWER
	.word	15,19,33,24,5,2,1,2	;X
	.word	0,1,10,26,32,26,9,1	;Y
XYOFFSET4		;GRENADE LAUCHER
	.word	15,10,25,25,5,1,1,11	;X
	.word	0,3,1,3,10,3,2,3	;Y
XYOFFSET5		;NON STOP WEAPON
	.word	15,16,33,24,5,3,1,6	;X
	.word	0,5,4,22,25,22,4,5	;Y
XYOFFSET6		;MACHINE GUN WEAPON
	.word	16,20,25,23,7,9,1,4	;X
	.word	3,5,10,22,25,20,10,5	;Y

;		1
;	8		5
;7				4	OLD CRAP!!!
;	9		6
;		2



TOSSDIR	.LONG	TSUP,TSUPRT,TSRT,TSDNRT,TSDN,TSDNLT,TSLT,TSUPLT
TOSS2DIR
	.LONG	TSUP2,TSUPRT2,TSRT2,TSDNRT2,TSDN2,TSDNLT2,TSLT2,TSUPLT2
TOSSG	.LONG	BALL1,BALL2,BALL3,BALL3,BALL4,BALL5,BALL5,BALL6
	.LONG	BALL6,BALL7,BALL7,BALL6,BALL6,BALL5,BALL5,BALL4
	.LONG	BALL4,BALL3,BALL3,BALL2,BALL2,BALL1,0

TSRT	.BYTE	3		;X
	.BYTE	-2		;Y ADJUST

	.BYTE	4
	.BYTE	-2

	.BYTE	4
	.BYTE	-2

	.BYTE	5
	.BYTE	-3

	.BYTE	5
	.BYTE	-3

	.BYTE	6
	.BYTE	-3

	.BYTE	6
	.BYTE	-2

	.BYTE	6
	.BYTE	-2

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	2 

	.BYTE	6
	.BYTE	2 

	.BYTE	6
	.BYTE	3 

	.BYTE	6
	.BYTE	3 

	.BYTE	6
	.BYTE	4 

	.BYTE	6
	.BYTE	5 

	.BYTE	5
	.BYTE	5 

	.BYTE	4
	.BYTE	5 

	.BYTE	4
	.BYTE	4 

	.BYTE	4
	.BYTE	4 

	.BYTE	3
	.BYTE	4 

	.BYTE	2
	.BYTE	3 

	.BYTE	2
	.BYTE	3 

TSLT	.BYTE	-3
	.BYTE	-2

	.BYTE	-4
	.BYTE	-2

	.BYTE	-4
	.BYTE	-2

	.BYTE	-5
	.BYTE	-3

	.BYTE	-5
	.BYTE	-3

	.BYTE	-6
	.BYTE	-3

	.BYTE	-6
	.BYTE	-2

	.BYTE	-6
	.BYTE	-2

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	2 

	.BYTE	-6
	.BYTE	2 

	.BYTE	-6
	.BYTE	3 

	.BYTE	-6
	.BYTE	3 

	.BYTE	-6
	.BYTE	4 

	.BYTE	-6
	.BYTE	5 

	.BYTE	-5
	.BYTE	5 

	.BYTE	-4
	.BYTE	5 

	.BYTE	-4
	.BYTE	5 

	.BYTE	-4
	.BYTE	4 

	.BYTE	-3
	.BYTE	4 

	.BYTE	-2
	.BYTE	3 
	
	.BYTE	-2
	.BYTE	3 
	
TSUPLT	.BYTE	0
	.BYTE	-5

	.BYTE	-1
	.BYTE	-6

	.BYTE	-2
	.BYTE	-6

	.BYTE	-2
	.BYTE	-6

	.BYTE	-3
	.BYTE	-6

	.BYTE	-3
	.BYTE	-6

	.BYTE	-4
	.BYTE	-6

	.BYTE	-4
	.BYTE	-6

	.BYTE	-4
	.BYTE	-5

	.BYTE	-5
	.BYTE	-5

	.BYTE	-5
	.BYTE	-4

	.BYTE	-6
	.BYTE	-3

	.BYTE	-6
	.BYTE	-3

	.BYTE	-6
	.BYTE	-2

	.BYTE	-6
	.BYTE	-2

	.BYTE	-5
	.BYTE	-2

	.BYTE	-5
	.BYTE	-1

	.BYTE	-4
	.BYTE	-1

	.BYTE	-4
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-3
	.BYTE	0 

	.BYTE	-3
	.BYTE	0 

TSUPRT	.BYTE	0
	.BYTE	-5

	.BYTE	1
	.BYTE	-6

	.BYTE	2
	.BYTE	-6

	.BYTE	2
	.BYTE	-6

	.BYTE	3
	.BYTE	-6

	.BYTE	3
	.BYTE	-6

	.BYTE	4
	.BYTE	-6

	.BYTE	4
	.BYTE	-6

	.BYTE	4
	.BYTE	-5

	.BYTE	5
	.BYTE	-5

	.BYTE	5
	.BYTE	-4

	.BYTE	6
	.BYTE	-3

	.BYTE	6
	.BYTE	-3

	.BYTE	6
	.BYTE	-2

	.BYTE	6
	.BYTE	-2

	.BYTE	5
	.BYTE	-2

	.BYTE	5
	.BYTE	-1

	.BYTE	4
	.BYTE	-1

	.BYTE	4
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	3
	.BYTE	0 

	.BYTE	3
	.BYTE	0 

TSDNLT	.BYTE	-1
	.BYTE	0 

	.BYTE	-2
	.BYTE	0 

	.BYTE	-3
	.BYTE	1 

	.BYTE	-4
	.BYTE	1 

	.BYTE	-5
	.BYTE	2 

	.BYTE	-5
	.BYTE	2 

	.BYTE	-6
	.BYTE	2 

	.BYTE	-6
	.BYTE	3 

	.BYTE	-6
	.BYTE	3 

	.BYTE	-6
	.BYTE	4 

	.BYTE	-5
	.BYTE	4 

	.BYTE	-5
	.BYTE	5 

	.BYTE	-4
	.BYTE	5 

	.BYTE	-3
	.BYTE	6 

	.BYTE	-3
	.BYTE	6 

	.BYTE	-2
	.BYTE	6 

	.BYTE	-2
	.BYTE	6 

	.BYTE	-1
	.BYTE	6 

	.BYTE	-1
	.BYTE	6 

	.BYTE	-1
	.BYTE	6 

	.BYTE	0
	.BYTE	5 

	.BYTE	0
	.BYTE	5 

TSDNRT	.BYTE	1
	.BYTE	0 

	.BYTE	2
	.BYTE	0 

	.BYTE	3
	.BYTE	1 

	.BYTE	4
	.BYTE	1 

	.BYTE	5
	.BYTE	2 

	.BYTE	5
	.BYTE	2 

	.BYTE	6
	.BYTE	2 

	.BYTE	6
	.BYTE	3 

	.BYTE	6
	.BYTE	3 

	.BYTE	6
	.BYTE	4 

	.BYTE	5
	.BYTE	4 

	.BYTE	5
	.BYTE	5 

	.BYTE	4
	.BYTE	5 

	.BYTE	3
	.BYTE	6 

	.BYTE	3
	.BYTE	6 

	.BYTE	2
	.BYTE	6 

	.BYTE	2
	.BYTE	6 

	.BYTE	1
	.BYTE	6 

	.BYTE	1
	.BYTE	6 

	.BYTE	1
	.BYTE	6 

	.BYTE	0
	.BYTE	5 

	.BYTE	0
	.BYTE	5 

TSUP	.BYTE	0 
	.BYTE	-4

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-6

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-5

	.BYTE	0 
	.BYTE	-4

	.BYTE	0 
	.BYTE	-3

	.BYTE	0 
	.BYTE	-2

	.BYTE	0 
	.BYTE	-1

	.BYTE	0 
	.BYTE	0 

	.BYTE	0 
	.BYTE	0 

	.BYTE	0 
	.BYTE	0 

TSDN	.BYTE	0 
	.BYTE	0 

	.BYTE	0 
	.BYTE	1 

	.BYTE	0 
	.BYTE	2 

	.BYTE	0 
	.BYTE	3 

	.BYTE	0 
	.BYTE	4 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	6 

	.BYTE	0 
	.BYTE	6 

	.BYTE	0 
	.BYTE	6 

	.BYTE	0 
	.BYTE	6 

	.BYTE	0 
	.BYTE	6 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	5 

	.BYTE	0 
	.BYTE	4 

	.BYTE	0 
	.BYTE	4 

	.BYTE	0 
	.BYTE	4 


TSRT2	.BYTE	3 
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	5
	.BYTE	0 

	.BYTE	5
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	6
	.BYTE	0 

	.BYTE	5
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	4
	.BYTE	0 

	.BYTE	3
	.BYTE	0 

	.BYTE	2
	.BYTE	0 

	.BYTE	2
	.BYTE	0 

TSLT2	.BYTE	-3
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-5
	.BYTE	0 

	.BYTE	-5
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-6
	.BYTE	0 

	.BYTE	-5
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-4
	.BYTE	0 

	.BYTE	-3
	.BYTE	0 

	.BYTE	-2
	.BYTE	0 
	
	.BYTE	-2
	.BYTE	0 
	
TSUPLT2	.BYTE	-5+5
	.BYTE	-1-10

	.BYTE	-3
	.BYTE	-3

	.BYTE	-4-5
	.BYTE	-4+10

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-4
	.BYTE	-4

	.BYTE	-4
	.BYTE	-5

	.BYTE	-2
	.BYTE	-4

TSUPRT2	.BYTE	5+5
	.BYTE	-1-10

	.BYTE	3
	.BYTE	-3

	.BYTE	4-5
	.BYTE	-4+10

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	4
	.BYTE	-4

	.BYTE	4
	.BYTE	-5

	.BYTE	2
	.BYTE	-4

TSDNLT2	.BYTE	-3
	.BYTE	11

	.BYTE	-3
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-4
	.BYTE	3

	.BYTE	-3
	.BYTE	3

	.BYTE	-4
	.BYTE	3

	.BYTE	-3
	.BYTE	3

	.BYTE	-4
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	3

	.BYTE	-3
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-4
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-4
	.BYTE	3

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	2

	.BYTE	-3
	.BYTE	2

TSDNRT2	.BYTE	3
	.BYTE	11

	.BYTE	3
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	4
	.BYTE	3

	.BYTE	3
	.BYTE	3

	.BYTE	4
	.BYTE	3

	.BYTE	3
	.BYTE	3

	.BYTE	4
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	3

	.BYTE	3
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	4
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	4
	.BYTE	3

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	2

	.BYTE	3
	.BYTE	2

TSUP2	.BYTE	0
	.BYTE	-4

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-6

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-5

	.BYTE	0
	.BYTE	-4

	.BYTE	0
	.BYTE	-4

TSDN2	.BYTE	0
	.BYTE	0

	.BYTE	0
	.BYTE	1

	.BYTE	0
	.BYTE	2

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	4

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	5

	.BYTE	0
	.BYTE	4

	.BYTE	0
	.BYTE	4

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	3

	.BYTE	0
	.BYTE	2

	.BYTE	0
	.BYTE	1

	.BYTE	0
	.BYTE	1

	.EVEN

	.END

