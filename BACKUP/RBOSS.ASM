	.TITLE	'FROGFACE MODULE'
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST
;
; INITIATED:		 7/12/91 FROM RBOSS SMASH TV
; MODIFIED:		 FOREVER....
; SOFTWARE:		 EUGENE JARVIS
;
; COPYRIGHT (C) 1991 WILLIAMS ELECTRONICS GAMES, INC.
;
; GET THE SYSTEM STUFF

	.INCLUDE	"MPROC.EQU"				;MPROC EQUATES
	.INCLUDE	"DISP.EQU"				;DISPLAY PROC. EQUATES
	.INCLUDE	"\VIDEO\SYS\SYS.INC"		;Z UNIT SYSTEM EQUATES
	.INCLUDE	"\VIDEO\SYS\MACROS.HDR"	;MACROS DEFINITIONS
	.INCLUDE	"IMGTBL.GLO"
	.INCLUDE	"FROGFACE.TBL"
	.INCLUDE	"GAME.EQU"
;
;SYMBOLS EXTERNALLY DEFINED
;
	.REF	SUCIDE,GANIOF,BEGINOBJ2,PLYROBJS,RANDOM,RANDPER,RAND
	.REF	PLYRPRCS
	.REF	RANDU,SRAND,FLASHME,KILALL,KILL,SCRADD2,P1DATA,P2DATA
	.REF	FRANIM,GETFPAL,HALT,PSTOP
	.REF	CYCLE_TABLE,START_PJ,DOIT
*
*SYMBOLS DEFINED IN THIS FILE
*
	.DEF	BOSS,FACBUL
*
*EQUATES
*
*PROCESS SUBTYPES
*
SUBLGUN	.EQU	01	;LEFT GUN CONTROLLER	
SUBRGUN	.EQU	02	;RIGHT GUN CONTROLLER
SUBPFLAM	.EQU	03	;FLAME JETS
SUBPBURN	.EQU	04	;BLOTORCH
SUBANI	.EQU	05	;EYE/MOUTH ANIMATION
SUBSHAD	.EQU	06	;SHADOWS DUDE...
SUBLHEAD	.EQU	07	;LITTLE HEAD ANIMATOR
*
ZACC	EQU	>00001000 	;Z ACCEL CONSTANT

*RAM ALLOCATION
	.BSS	BOSSRAM,0
	.BSS	FACEY,32	;Y COORD
	.BSS	FACEZ,32	;Z COORD (HT.)
	.BSS	FACEZV,32	;Z VELOCITY
	.BSS	FACEXV,32	;XVEL,YVEL
	.BSS	FACEYV,32
	.BSS	FACEXACC,32	;ACCELERATIONS
	.BSS	FACEYACC,32
	.BSS	FACSTOR,35*16*4	;FACE POINTER AREA
	.BSS	HDANIFLG,32   	;HEAD ANIMATION IN PROGRESS
	.BSS	IANIFLG,32	;EYE ANIMATION IN PROGRESS
	.BSS	MANIFLG,32	;MOUTH ANIMATION IN PROGRESS
	.BSS	ARMANIFLG,32	;ARM ANIMATION IN PROGRESS
	.BSS	LGUNDIR,16	;LEFT GUN ANGLE
	.BSS	RGUNDIR,16	;RIGHT GUN ANGLE
	.BSS	LGUNMODE,16	;LEFT GUN SHOOTING MODE
	.BSS	RGUNMODE,16	;RIGHT GUN SHOOTING MODE
				;0=RANDOM;1=SHOOT AT PLAYERS
				;2=DOWN;3=CROSSED;4=SIDEWAYS;5=SWEEP
	.BSS	LSHTRATE,16	;LFT GUN SHOOTING RATE X 16MSEC.
	.BSS	RSHTRATE,16	;RT GUN SHOOTING RATE X 16MSEC.
	.BSS	LGSWFLG,16	;LFT GUN SWEEP DIRECTION FLAG 0=DOWN, NE=UP
	.BSS	RGSWFLG,16	;RT GUN SWEEP DIRECTION FLAG 0=DOWN, NE=UP
	.BSS	RTARMFLG,16,W	;NE=RT ARM BLOWN OUT
	.BSS	LFTARMFLG,16,W	;NE=LFT ARM BLOWN OUT
	.BSS	RTEYEFLG,16,W	;NE=RT EYE BLOWN OUT
	.BSS	LFTEYEFLG,16,W	;NE=LFT EYE BLOWN OUT
	.BSS	HDBLOFLG,16,W	;HEAD BLOWN OUT
	.BSS	TOPBLOFLG,16,W	;SHOULDERS BLOWN OUT
	.BSS	TOTBLOFLG,16,W	;EVERYTHING BLOWN OUT
	.BSS	PUMLCNT,16,W	;PUMMEL RATE
	.BSS	BOSSMODE,16,0	;BOSS MODE  0=STATIONARY,1=HOPPING
	.BSS	BMTIMER,16,0	;BOSS MODE TIMER
	.BSS	BMINDEX,32,0	;BOSS MODE INDEX TABLE
	.BSS	BLOFLG,16,0	;BLOW-UP EFFECT ON, NO NEW BLOWS
	.BSS	BOSSRAMEND,0
*
*BOSS ENEMY DATA OBJECT BLOCK STRUCT
*
OBJPTR	.SET	>0   	;IMAGE OBJECT POINTER
HITCNT	.SET	>20	;IMAGE HIT COUNTER
AFRAME	.SET	>28	;CURRENT ANIMATION FRAME
DAMAGEL	.SET	>30	;DAMAGE LEVEL
*>040=IMAGE 1 ETC.
*
* ROBOT BOSS PROCESS
* A8=OBJECT BLOCK CONTAINING OBJECT POINTERS
* A9=ANIMATION SCRIPT FLAG
* A11=PLAYER TO SEEK
* A13=PROCESS
* PDATA+>40=XACC
* PDATA+>50=YACC
*
BOSS
	SLEEP	15	
*CLEAR OUT BOSS VARIABLES
	CLR	A0
	MOVE	A0,*A13(PDATA),W	;CLEAR ANIMATION POINTER
	MOVI	BOSSRAM,A1
BOSSCLR
	MOVE	A0,*A1+
	CMPI	BOSSRAMEND,A1
	JRLO	BOSSCLR

	MOVK	1,A0
	MOVE 	A0,@LGUNDIR,W		;INIT RIGHT/LEFT GUN ANGLES ST. DOWN
	MOVE 	A0,@RGUNDIR,W

	MOVE	@WORLDTLX,A0,L		;GET STARTING COORD
	ADDI	>0C00000,A0
	MOVE	@WORLDTLY,A1,L
	SUBI	>600000,A1
	CLR	A11			;DAMAGE LEVEL
	CALLR	RBINIT	   		;INITIALIZE FACE

	CREATE	TYPFACE,EYECOL
	CREATE	TYPFACE|SUBPBURN,BURNPRC
;	CREATE	TYPFACE|SUBLHEAD,LILHEAD
	CREATE	TYPFACE|SUBLGUN,LEFTGUN
	CREATE	TYPFACE|SUBRGUN,RIGHTGUN
*SET GUN RATE
	MOVI	2,A0	
	MOVE	A0,@LSHTRATE,W	;SHOOTING RATE
	MOVI	2,A0	
	MOVE	A0,@RSHTRATE,W	;SHOOTING RATE
;	MOVI	BMTAB,A0
;	MOVE	A0,@BMINDEX,L

	MOVI	200,A0
	MOVI	100,A1
	MOVE	@WORLDTLX+16,A2,W
	MOVE	@WORLDTLY+16,A3,W
	ADD	A2,A0
	ADD	A3,A1
	MOVI	90,A2			;TIME
	CALLR	BJUMP			;JUMP THE DUDE ON SCREEN
	MOVI	260,A0
	MOVE	A0,@BMTIMER
RBLP:
*CHANGE BOSS MODE?
	DECW	@BMTIMER
	JRNE	RB000

	MOVI	8,A0
	CALLA	RANDU
	DEC	A0
	SLL	3,A0
	ADDI	BMODTAB,A0
	MOVB	*A0,A0
	MOVE	A0,@BOSSMODE
	MOVI	200,A0
	CALLA	RANDU
	ADDI	60,A0
	MOVE	A0,@BMTIMER,W
RB000
*ANIMATE EYES
	MOVE	@TOTBLOFLG,A0,W	;TOTALLY BLOWN ?
	JRNE	RBOSSZZ		;YES SKIP THIS

	MOVE	@HALT,A0,W	;HALTED  ?
	JREQ	RBLP0
	CLR	A0		;YES, AVOID EVERYTHING
	MOVE	A0,@FACEXV,L
	MOVE	A0,@FACEYV,L
	MOVE	A0,@FACEZV,L
	JRUC	RBZ3
RBLP0
	MOVE	@IANIFLG,A0,L	;EYES ROLLING?
	JRNE	RBOSS01		;YES, DO NOT DISTURB
	MOVI	30,A0
	CALLA	RANDPER
	JRNC	RBOSS00
	MOVI	IANITB,A1
	MOVI	IANIFLG,A2
	CALLR	RANDANI
RBOSS00
	MOVI	150,A0		;FOLLOW WITH EYES?
	CALLA	RANDPER
	JRNC	RBOSS03		;NO
 	CALLR 	FOLOEYE		;FOLLOW HIS EYES!!!!
*LITTLE HEAD ANIMATION PROCESS
RBOSS01
	MOVE	@HDBLOFLG,A0,W
	JRNE	RBOSS03		;HEAD IS BLOWN, FORGET THIS JIVE
	MOVE	@HDANIFLG,A0,L	;HEAD GOING?
	JRNE	RBOSS03		;YES, DO NOT DISTURB

	MOVE	@PLYRPRCS,A0,L
	JREQ	RBS01
	MOVE	*A0(DEAD),A0,W
	JRNE	RBS11		;PLAYER ONE IS DEAD, LAUGH...
RBS01
	MOVE	@PLYRPRCS+32,A0,L
	JREQ	RBS02
	MOVE	*A0(DEAD),A0,W
	JREQ	RBS02		;PLAYER TWO IS NOT DEAD...
RBS11
	MMTM	SP,A8,A11
	MOVI	GRINNER,A8
	MOVI	HDANIFLG,A11
	CREATE	TYPFACE|SUBANI,ANISEQQ
	MMFM	SP,A8,A11
RBS02
	MOVI	30,A0
	CALLA	RANDPER
	JRNC	RBOSS02
	MOVI	HDSEQTB,A1
	MOVI	HDANIFLG,A2
	CALLR	RANDSEQ
RBOSS02
;	MOVI	150,A0		;FOLLOW WITH HEAD?
;	CALLA	RANDPER
;	JRNC	RBOSS03		;NO
; 	CALLR 	FOLOHD		;FOLLOW WITH HEAD
*ANIMATE MOUTH AND TONGUE
RBOSS03
	MOVE	@TOTBLOFLG,A0,W	;TOTALLY BLOWN ?
	JRNE	RBOSSZZ		;
	MOVE	@MANIFLG,A0,L	;MOUTH GOING?
	JRNE	RBOSS04		;YES, DO NOT DISTURB
	MOVI	30,A0
	CALLA	RANDPER
	JRNC	RBOSS04
	MOVI	MANITB,A1
	MOVI	MANIFLG,A2
	CALLR	RANDANI
RBOSS04
	MOVI	5,A0  		;GET NEW GUN MODE?
	CALLA	RANDPER
	JRNC	RBOSS05		;NO
	MOVK	8,A0
	CALLA	RANDU
	DEC	A0
	SLL	8,A0
	ADDI	GMODTAB,A0
	MOVB	*A0,A0
	MOVE	A0,@LGUNMODE,W
	MOVE	A0,@RGUNMODE,W
RBOSS05
 	MOVE	@FACEZ,A0,L  	;JUMP GOING?
	MOVE	@FACEZV,A1,L
	OR	A0,A1
	JRNE	RBOSS06		;YES FORGET IT

	CALLR	RBOSSON	   	;IF OFF JUMP BACK ON DUDES !!!
	JRNE	JUMPNOW

	MOVE	@BOSSMODE,A0,W 	;SIT STILL MODE ?
	JREQ	RBOSS06		;YES...

	MOVI	30,A0
	CALLA	RANDPER
	JRNC	RBOSS06

*DO A JUMP DUDES
JUMPNOW
	MOVI	100,A0	 			;GO FOR PLAYER
	CALLA	RANDPER
	JRNC	JN0				;NO

	MOVI	40,A0		   		;X RANDOM FACTOR
	CALLA	SRAND
	MOVE	A0,A6

	MOVI	40,A0				;Y RANDOM FACTOR
	CALLA	RANDU
	MOVE	A0,A7

	CALLR	GETPLYR
	MOVE	*A0(OYPOS),A1,W			;GET PLAYER COORD..
	MOVE	*A0(OXPOS),A0,W
	ADD	A6,A0				;ADD IN RANDOM FACTOR
	ADD	A7,A1
	MOVE	@WORLDTLX+16,A4,W
	MOVE	@WORLDTLY+16,A5,W		;MAKE SURE ITS IN BOUNDS
	SUB	A0,A4
	SUB	A1,A5
	NEG	A4
	NEG	A5

	CMPI	370,A4				;X MAX
	JRLS	JN00
	SUBI	370,A4
	SUB	A4,A0
JN00
	CMPI	30,A4				;X MIN
	JRHS	JN01
	SUBI	30,A4
	NEG	A4
	ADD	A4,A0
JN01
	CMPI	-20,A5
	JRGE	JN011
	ADDI	20,A1
	JRUC	JN02
JN011
	CMPI	200,A5				;CHECK Y OUT OF RANGE
	JRLS	JN02
	SUBI	200,A5
	SUB	A5,A1
JN02
	JRUC	JN5
JN0
	MOVE	@BOSSMODE,A3,W
	CMPI	3,A3
	JRNE	JN1
	MOVI	60,A1
	JRUC	JN2
JN1
	MOVI	50,A0
	CALLA	SRAND
	ADDI	125,A0
	MOVE	A0,A1
JN2
	CMPI	2,A3
	JRNE	JN3
	MOVI	200,A0
	JRUC	JN4
JN3
	MOVI	75,A0
	CALLA	SRAND
	ADDI	200,A0
JN4
	MOVE	@WORLDTLX+16,A2,W
	MOVE	@WORLDTLY+16,A3,W
	ADD	A2,A0
	ADD	A3,A1
JN5
	MMTM	SP,A0
	CALLR	GETDMGE	      		;FASTER TIME WITH MORE DAMAGE
	SRL	5,A0
	ANDI	>1F,A0
	SLL	4,A0
	ADDI	JTIMTAB,A0
	MOVE	*A0,A2			;GET JUMP TIME DUDE
	MMFM	SP,A0
	CALLR	BJUMP			;JUMP THE DUDE
RBOSS06
RBOSSZZ
	MOVI	ZACC,A2			;GRAVITY ACCEL
	MOVE	@FACEZ,A1,L
	JRNE	RBZ1			;NO GRAVITY ACCEL IF ON GROUND
	CLR	A2
RBZ1
	MOVE	@FACEZV,A0,L		;UPDATE Z HEIGHT
	ADD	A2,A0
	MOVE	A0,@FACEZV,L
	JREQ	RBZ3
	ADD	A0,A1	
	JRN	RBZ2
	SUB	A1,A0
	CLR	A1	    		;WE HIT THE GROUND
	MOVE	A1,@FACEZV,L	   	;CLEAR VELS DUDES
	MOVE	A1,@FACEXV,L
	MOVE	A1,@FACEYV,L
RBZ2
	MOVE	A1,@FACEZ,L
	CALLR	STFZVEL
RBZ3
	MOVE	@FACEXV,A0,L
	MOVE	@FACEYV,A1,L	 	;ADD IN ACCELS
	MOVI	FACSTOR,A8
	CALLR	STFVEL			;STUFF VELOCITY IN ALL PARTS
	SLOOP	1,RBLP

*GUN MODE PROB TABLE
*0=RANDOM;1=SHOOT AT PLAYERS;2=DOWN;3=CROSSED;4=SIDEWAYS;5=SWEEP
GMODTAB
	.BYTE	0,1,0,1,5,5,0,1
*
*BOSS MODE TABLE
*0=SIT STILL
*1=RANDOM JUMP
*2=JUMP L-R  (TOP OF SCREEN)
*3=JUMP UP DOWN (CENTER OF SCREEN)
BMODTAB
	.BYTE	0,1,2,1,1,1,1,3
*
*JUMP TIME TABLE
*
JTIMTAB
	.WORD	60,57,54,51,48,45,42,40
	.WORD	38,36,34,32,31,30,30,30
	.WORD	29,28,27,26,25,24,23,22
	.WORD	21,20,20,20,20,20,20,20
*BOSS JUMP
*A0=DEST XPOS
*A1=DEST YPOS
*A2=TIME
BJUMP
	MMTM	SP,A0,A1,A2,A3,A7,A8,A10
	MOVE	@FACSTOR,A8,L	 	;GET FIRST PART POINTER
	MOVE	*A8(OXPOS),A3,W
	ADDI	43,A3			;GET CENTER POINT
	SUB	A0,A3
	SLL	16,A3
	DIVS	A2,A3			;GET X VEL
	NEG	A3
	MOVE	A3,@FACEXV,L
	MOVE	*A8(OYPOS),A3,W
	SUB	A3,A1
	SLL	16,A1
	DIVS	A2,A1			;GET Y VEL
	MOVE	A1,@FACEYV,L
	MOVI	ZACC,A1
	NEG	A1
	SRA	1,A2
	MPYS	A2,A1			;GET Z VEL
	MOVE	A1,@FACEZV,L

	MOVE	@FACEXV,A6,L
	ABS	A6
	MOVE	@FACEYV,A7,L
	ABS	A7
	ADD	A6,A7
	CMPI	>3C000,A7
	JRLS	BJ0
	MOVE	@FACEXV,A6,L
	SRA	1,A6
	MOVE	@FACEYV,A7,L
	SRA	1,A7
	MOVE	@FACEZV,A1,L
	SLL	1,A1
	MOVE	A6,@FACEXV,L
	MOVE	A7,@FACEYV,L
	MOVE	A1,@FACEZV,L
BJ0
	MOVK	3,A10
	CREATE	TYPFACE|SUBPFLAM,FLAMPROC
	MMFM	SP,A0,A1,A2,A3,A7,A8,A10
	RETS
*
*PLAYER SCORE
*A0=BULLET OBJECT THAT KILLED
*A1=AMOUNT TO ADD (8 DIGIT BCD)
*
SCORPLAY
	MMTM	SP,A0,A2,A4,A7		;SCRADD2 IS DIRTY, SAVE THESE
	MOVE	*A0(OPLINK),A0,L
	MOVB	*A0(MYPLYR),A0 		;A0=PLAYER NUMBER
*FIND A2=P1DATA OR P2DATA
	MOVI	P1DATA,A2
	DEC	A0
	JREQ	SCPL1
	MOVI	P2DATA,A2
SCPL1
	CALLA	SCRADD2			;DO IT!
	MMFM	SP,A0,A2,A4,A7
	RETS
*
*BULLET SUBTYPE SHIFT TABLE
*SUBLZR   01 	;REGULAR LAZER SHOTS
*SUBSPRY  02	;SPRAY SUB TYPE
*SUBFIRE1 03	;FIRE BALL WPN
*SUBGRND  04	;GRENADE
*SUBNOSTP 05	;NON STOPPING BULLET
*SUBSPDG1 06	;MACHINE GUN TYP WPN
BULSHTAB
	.WORD	>400,>400,>304,>204,>20A,>208,>206,>300 ;SHIFT COUNT:RANDOM FACTOR
	.WORD	1,1,1,4,6,4,1,1		 	  	;DAMAGE LEVEL
	.WORD	1,1,1,1,1,1,1,1		 		;SCORE LEVEL
*
*PART OF BOSS MONSTER TAKES A HIT
*A8=OBJECT
*A0=WHAT HIT HIM
*
FACBUL
	MMTM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVE	A0,A11			;SAVE BULLET JIVE
	MOVE	@TOTBLOFLG,A2,W	 	;ALREADY BLOWN
	JRNE	FACBULX			;YES, OUTAHERE
	MOVE	*A0(OXVEL),A1,L		;GIVE IT A PUSH
	MOVE	*A0(OYVEL),A2,L
	MOVE	*A0(OID),A10,W  	;ISOLATE SUBTYPE
	SLL	28,A10
	SRL	24,A10
	ADDI	BULSHTAB,A10		;VARIABLE SHIFT BASED ON SUBTYPE
	MOVB	*A10(8),A9 		;GET SHIFT COUNT
	NEG	A9			;TI BRAIN DAMAGE
	SRA	A9,A1
	SRA	A9,A2
	CALLR 	POPFACE

	MOVB	*A10,A0	 		;GET SHAKE COUNT
;	CREATE	0,SHAKME

	SLL	16,A0
	CALLA	SRAND
	MOVE	A0,A1
	MOVB	*A10,A0	 		;GET SHAKE COUNT
	SLL	16,A0
	CALLA	SRAND
	MOVE	A0,A2
	CALLR 	POPFACE
	

	MOVI	990,A0
	CALLA	RANDPER	
	JRNC	BOSSHIT2		;NO FLASH, NO DAMAGE !!!

	MMTM	SP,A0,A1,A7,A9
	MOVI	1F1F0000H,A9
	CREATE	0,FLASHME
	MMFM	SP,A0,A1,A7,A9
	MOVE	*A8(OPLINK),A9,L	;GET HIS POINTER TO MASTER STRUCTURE
	MOVE	*A9(DAMAGEL),A3,W	;INCREMENT DAMAGE LEVEL
	MOVE	*A10(80H),A2,W		;GET DAMAGE DEGREE
	CALLR	DAMREACT
	ADD	A2,A3
	CALLR	CKBLO			;CHECK FOR BLOW UPS
	CMPI	47,A3			;MAX OUT HIT CNT
	JRLS	BOSSHIT1
	CALLR	PUMMEL			;PUMMEL UNDAMAMGED STUFF ON DEAD BANGING
	MOVI	47,A3
BOSSHIT1
	CALLR	DAMASUB
BOSSHIT2
	MOVE	A11,A0
	MOVE	*A10(100H),A1,W		;GET SCORE
	CALLR	SCORPLAY
FACBULX
	MMFM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	RETS
*
*REACT TO DAMAGE
*
*A3=DAMAGE LEVEL	MOVE  
*A2=DAMAGE INCREMENT
*
DAMREACT
	MOVE	A2,A0
	SLL	3,A0
	CALLA	RANDPER
	JRNC	DAMRX
	MOVE	@HDBLOFLG,A0,W			;HEAD BLOWN ?
	JRNE	DAMR2				;DO OTHER ANIMATION
DAMR0
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVE	@HDANIFLG,A0,L			;HEAD GOING?
	JREQ	DAMR1				;NO
	CALLA	KILL				;YES, KILL IT
	CLR	A0
	MOVE	A0,@HDANIFLG,L
DAMR1
	MOVI	HDDAMTB,A1
	MOVI	HDANIFLG,A2
	CALLR	RANDSEQ
	MMFM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
DAMR2
	CALLR	DAMEYE	
	RETS
DAMRX
	RETS
*
*EYE REACTS TO DAMAGE
*
DAMEYE
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVE	@IANIFLG,A0,L				;HEAD GOING?
	JREQ	DAMEYE1					;NO
	CALLA	KILL					;YES, KILL IT
	CLR	A0
	MOVE	A0,@IANIFLG,L
DAMEYE1
	MOVI	IDAMTB,A1
	MOVI	IANIFLG,A2
	CALLR	RANDSEQ
	MMFM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	RETS

*CHECK BLOW UPS
*A3=DAMAGE LEVEL
*A8=OBJECT HIT
*A9=STRUCT INDEX
*
CKBLO
	MMTM	SP,A0,A1,A2
	CMPI	31,A3
	JRLS	CKBX
	MOVE	@BLOFLG,A0,W   				;BLOW IN PROGRESS?
	JRNE	CKBX					;YES, CAN IT...
	MOVE	*A8(OID),A2,W
	ZEXT	A2,W
	CMPI	CLSENMY|TYPFACE|SUBARMR,A2 	;RT ARM BLOW ?
	JRNE	CKB1					;NO
	MOVE	@RTARMFLG,A2,W				;ALREADY BLOWN ?
	JREQ	RTARMBLO				;NOPE
CKB1
	CMPI	CLSENMY|TYPFACE|SUBARML,A2 	;LFT ARM BLOW ?
	JRNE	CKB2					;NO
	MOVE	@LFTARMFLG,A2,W				;ALREADY BLOWN ?
	JREQ	LFTARMBLO				;NOPE
CKB2
	CMPI	CLSENMY|TYPFACE|SUBEL,A2	 	;LFT EYE BLOW ?
	JRNE	CKB3					;NO
	MOVE	@LFTEYEFLG,A2,W				;ALREADY BLOWN ?
	JREQ	LFTEYEBLO				;NOPE...
CKB3
	CMPI	CLSENMY|TYPFACE|SUBER,A2	 	;RT EYE BLOW ?
	JRNE	CKB4					;NO
	MOVE	@RTEYEFLG,A2,W				;ALREADY BLOWN ?
	JREQ	RTEYEBLO				;NOPE...
CKB4
	CMPI	CLSENMY|TYPFACE|SUBHD,A2	 	;HEAD BLOW ?
	JRNE	CKB5					;NO
	MOVE	@HDBLOFLG,A2,W				;ALREADY BLOWN ?
	JREQ	HDBLO					;NOPE...
CKB5
	CMPI	CLSENMY|TYPFACE|SUBSHLDL,A2 	;TOP RIP ?
	JREQ	CKB6A					;YES...
CKB6
	CMPI	CLSENMY|TYPFACE|SUBSHLDR,A2 	;TOP RIP ?
	JRNE	CKB7					;NO
CKB6A
	MOVE	@HDBLOFLG,A2,W				;HEAD MUST BLOW FIRST
	JREQ	CKB7					;NOPE...
	MOVE	@TOPBLOFLG,A2,W				;ALREADY BLOWN ?
	JREQ	TOPBLO					;NOPE...
CKB7
	MOVE	@HDBLOFLG,A2,W				;HEAD MUST BLOW FIRST
	JREQ	CKBX					;NOPE...
	MOVE	@TOPBLOFLG,A2,W				;ALREADY BLOWN ?
	JREQ	CKBX					;NOPE...
	MOVE	@LFTEYEFLG,A2,W				;ALREADY BLOWN ?
	JREQ	CKBX					;NOPE...
	MOVE	@RTEYEFLG,A2,W				;ALREADY BLOWN ?
	JREQ	CKBX					;NOPE...
	MOVE	@RTARMFLG,A2,W				;ALREADY BLOWN ?
	JREQ	CKBX					;NOPE
	MOVE	@LFTARMFLG,A2,W				;ALREADY BLOWN ?
	JREQ	CKBX					;NOPE
	CALLR	GETDMGE					;GET TOTAL DAMAGE
	CMPI	550,A0
	JRHS	TOTBLO	
CKBX
	MMFM	SP,A0,A1,A2
	RETS
*
*SET AND CLEAR BLOFLG
*A2=TIME
SETBLOFLG
	CALLR	DAMASUB
	MMTM	SP,A0,A1,A7
	MOVK	1,A0
	MOVE	A0,@BLOFLG,W
	CREATE	0,BLOKIL
	MOVE	A2,*A0(PTIME),W		;SET DELAY TIME
	MMFM	SP,A0,A1,A7
	RETS
BLOKIL
	CLR	A0
	MOVE	A0,@BLOFLG
	DIE

*BLOW LEFT ARM
LFTARMBLO
	MOVI	60,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@LFTARMFLG				;SET BLOWN FLAG
	MOVI	TYPFACE|SUBLGUN,A0			;KILL CONTROLLING PROCESS
	CLR	A1
	NOT	A1
	CALLA	KILALL
	MOVE	@LGUNDIR,A2,W
	CALLR	ARMBLO
	JRUC	CKBX
*BLOW RIGHT ARM
RTARMBLO
	MOVI	60,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@RTARMFLG				;SET BLOWN FLAG
	MOVI	TYPFACE|SUBRGUN,A0			;KILL CONTROLLIMG PROCESS
	CLR	A1
	NOT	A1
	CALLA	KILALL
	MOVE	@RGUNDIR,A2,W
	CALLR	ARMBLO
	JRUC	CKBX
*BLOW RIGHT EYE
RTEYEBLO
	MOVI	90,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@RTEYEFLG				;SET BLOWN FLAG
	MMTM	SP,A0,A1,A7
	CREATE	TYPFACE,EYEBOIL
	MMFM	SP,A0,A1,A7
	MOVI	30,A6
	CALLR	BLOWEYE
	MOVI	15,A6
	CALLR	BLOWEYE
	CLR	A6
	CALLR	BLOWEYE
	JRUC	CKBX
*BLOW LEFT EYE
LFTEYEBLO
	MOVI	90,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@LFTEYEFLG				;SET BLOWN FLAG
	MMTM	SP,A0,A1,A7
	CREATE	TYPFACE,EYEBOIL
	MMFM	SP,A0,A1,A7
	MOVI	30,A6
	CALLR	BLOWEYE
	MOVI	15,A6
	CALLR	BLOWEYE
	CLR	A6
	CALLR	BLOWEYE
	JRUC	CKBX
*BLOW LIL HEAD
HDBLO
	MOVI	120,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@HDBLOFLG				;SET BLOWN FLAG
	MOVE	@HDANIFLG,A0,L				;HEAD GOING?
	JREQ	HDBLO1					;NO
	CALLA	KILL					;YES, KILL IT
	CLR	A0
	MOVE	A0,@HDANIFLG,L
HDBLO1
	MMTM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVI	HDBLOA,A9
	MOVI	20,A8
	CREATE	TYPFACE,DELANI
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	ADDI	>300000,A2
	MOVY	A2,A9
	SRL	16,A3
	MOVX	A3,A9
	MOVI	60,A8
	CALLR	BURSTBL
	CALLR	BURSTHD	 			;DIRECT HEAD BURST
	CREATE	TYPFACE,BHDEL			;DELAYED HEAD BURST
	MOVI	12,A1
	MOVE	A1,*A0(PTIME),W
	CREATE	TYPFACE,BHDEL
	MOVI	24,A1
	MOVE	A1,*A0(PTIME),W
	CLR	A0	 			;ZERO OUT VELOCITIES
	MOVE	A0,@FACEXV,L
	MOVE	A0,@FACEYV,L
	MMFM	SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	JRUC	CKBX	
*BLOW SHOULDERS
TOPBLO
	MOVI	120,A2		;SET EFFECT LOCKOUT FLAG
	CALLR	SETBLOFLG
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@TOPBLOFLG				;SET BLOWN FLAG
	MOVE	@HDANIFLG,A0,L				;HEAD GOING?
	JREQ	TOPBLO1					;NO
	CALLA	KILL					;YES, KILL IT
	CLR	A0
	MOVE	A0,@HDANIFLG
TOPBLO1
	MMTM	SP,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVI	TOPBLOA,A9
	MOVI	20,A8
	CREATE	TYPFACE,DELANI
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	ADDI	>300000,A2
	MOVY	A2,A9
	SRL	16,A3
	MOVX	A3,A9
	MOVI	120,A8
	CALLR	BURSTBL

	MOVI	SHLDR,A10
	MOVI	DMAWNZ,A4
	CALLR	BURST8

	MOVI	SHLDR,A10
	MOVI	DMAWNZ|M_FLIPH,A4
	CALLR	BURST8

	MOVI	TOPRIP,A10
	MOVI	DMAWNZ,A4
	CALLR	BURST8
	CLR	A0	 			;ZERO OUT VELOCITIES
	MOVE	A0,@FACEXV,L
	MOVE	A0,@FACEYV,L

	MMFM	SP,A3,A4,A5,A6,A7,A8,A9,A10,A11
	JRUC	CKBX	
*
*B L O W   I T   I N   M E   B A B Y  ! ! 
*
TOTBLO
	MOVE	A11,A0
	MOVI	50,A1		;GET SCORE
	CALLR	SCORPLAY
	MOVK	1,A2
	MOVE	A2,@TOTBLOFLG,W			;SET BLOWN FLAG
	MOVI	TYPFACE|SUBPFLAM,A0		;KILL THRUSTER PROCESS
	CLR	A1
	NOT	A1
	CALLA	KILALL

	MOVI	TYPFACE|SUBANI,A0		;KILL THRUSTER PROCESS
	CLR	A1
	NOT	A1
	CALLA	KILALL

	MOVI	TYPFACE|SUBPBURN,A0	    	;KILL NOSE BURNERS PROCESS
	CLR	A1
	NOT	A1
	CALLA	KILALL
	MMTM	SP,A3,A4,A5,A6,A7,A8,A9,A10,A11

	MOVI	TOTBLOA,A9
	MOVI	20,A8
	CREATE	TYPFACE,DELANI

	CREATE	TYPFACE,TOTBLOP
	MMFM	SP,A3,A4,A5,A6,A7,A8,A9,A10,A11
	CLR	A0	 			;ZERO OUT VELOCITIES
	MOVE	A0,@FACEXV,L
	MOVE	A0,@FACEYV,L
	JRUC	CKBX	
*
*TOTAL BLOW PROCESS
*
TOTBLOP
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	ADDI	>500000,A2
	MOVY	A2,A9
	SRL	16,A3
	MOVX	A3,A9
	MOVI	30,A8
	CALLR	BURSTBL

	MOVI	32,A8				;CHUNKS
	CALLR	BLOCHUNK

	SLEEP	20
	MOVI	32,A8				;CHUNKS
	CALLR	BLOCHUNK

	SLEEP	20
	MOVI	32,A8				;CHUNKS
	CALLR	BLOCHUNK
	
	SLEEP	20
	MOVI	32,A8				;CHUNKS
	CALLR	BLOCHUNK

	MOVI	90,A8
	CALLR	BURSTBL
	DIE
*
*DELAYED ANIMATION PROCESS
*A8=TIME,A9=ANIMATION
*
DELANI	
	MOVE	A8,A0
	CALLA	PRCSLP
	CALLR	ANIBOSS	 	;ANIMATE INTO PLACE
	DIE
*
*BLOW OFF YOUR ARM DUDES
*A2=ANIMATION #
*A8=ARM OBJECT
*A11=BULLET THAT HIT
*
ARMBLO
	MMTM	SP,A0,A1,A2,A3,A5,A7,A8,A9,A10,A11
	MOVK	3,A3
	MOVE	A2,A10
	MOVE	A11,A5
ARMBLO1
	MOVE	*A5(OXVEL),A9,L
	MOVE	*A5(OYVEL),A11,L
	SRA	1,A9
	SRA	1,A11
	MOVI	>80000,A0
	CALLA	SRAND
	ADD	A0,A9
	MOVI	>80000,A0
	CALLA	SRAND
	ADD	A0,A11
	CREATE	0,ARMBLOP
	DSJ	A3,ARMBLO1     		;BLOW OUT A LOT OF 'EM

	MOVE	@HDBLOFLG,A0,W	    	;HEAD BLOWN NO REACTION
	JRNE	ARMBLOX
	CALLR	DAMR0			;MAKE A REACTION DUDES
ARMBLOX
	MMFM	SP,A0,A1,A2,A3,A5,A7,A8,A9,A10,A11
	RETS
*
*ARM BLOW PROCESS
*A8=ARM OBJECT
*A9=X VEL
*A10=ANIMATION
*A11=Y VEL
*
ARMBLOP
	MOVE	A11,A7				;Y VEL
	MOVE	A9,A6				;X VEL
	DEC	A10
	CMPI	5,A10
	JRLO	ARMBL1
	CLR	A10
ARMBL1
	SLL	6,A10
	MOVI	GUNFLY,A9

	MOVE	*A8(OFLAGS),A5,W
	BTST	B_FLIPH,A5
	JREQ	ARMBL1A
	NEG	A10
	JREQ	ARMBL1A				;DONT FLIP ZERO CASE
       	MOVI	GUNFLYF,A9			;FOR FLIPPED CASE
ARMBL1A
	ADD	A10,A9				;GET STARTING ADDRESS
	CALLA	GETANIXY       			;GET COORD TO START
	MOVE	A3,A0
	MOVE	A2,A1
	MOVI	GOFFTAB,A5
	ABS	A10				;CORRECT NEGATIVE CASE
	SRL	1,A10
	ADD	A10,A5
	MOVE	*A5+,A2,W 	  		;GET YOUR OFFSET
	MOVE	*A5,A3,W
	MOVE	*A8(OFLAGS),A5,W
	BTST	B_FLIPH,A5
	JREQ	ARMBL2
	NEG	A2				;NEGATE OFFSET FOR FLIP CASE
ARMBL2
	SLL	16,A2
	SLL	16,A3
	ADD	A2,A0
	ADD	A3,A1
	
	MOVE	*A9,A2,L			;GET ANIMATION
	MOVI	CLSDEAD,A5
	MOVI	DMAWNZ|M_NOCOLL,A4		;FLAGS
	MOVI	170,A3	       
	SRA	2,A6				;SLOW DOWN VELOCITY
	SRA	2,A7
	CALLA	BEGINOBJ2
	MOVI	90,A10	   			;TIME OUT VALUE
ARMBLP
	CLR	A1
	JSRP	FRANIM
	JRNC	ARMBLP1
	MOVI	GUNFLY,A9
ARMBLP1
	CALLA	SCRTST
	JRNE	ARMBLP2
	DSJ	A10,ARMBLP			;TIME OUT CHECK
ARMBLP2
	MOVE	A8,A0		  		;WE QUIT, CLEAN UP...
	CALLA	DELOBJ
	DIE
*
*GOFFTAB
*X OFFSET, Y OFFSET
*
GOFFTAB
	.WORD	-70,107
	.WORD	-78,98
	.WORD	-84,94
	.WORD	-85,81
	.WORD	-90,74
	.WORD	-51,100
	
*GUN FLYING OFF
GUNFLY
	.LONG	GUNRIP1
	.WORD	3|>4000,0
	.LONG	GUNRIP2
	.WORD	3|>4000,0
	.LONG	GUNRIP3
	.WORD	3|>4000,0
	.LONG	GUNRIP4
	.WORD	3|>4000,0
	.LONG	GUNRIP5
	.WORD	3|>4000,0
	.LONG	GUNRIP4
	.WORD	3|>4000,M_FLIPV
	.LONG	GUNRIP3
	.WORD	3|>4000,M_FLIPV
	.LONG	GUNRIP2
	.WORD	3|>4000,M_FLIPV
	.LONG	GUNRIP1
	.WORD	3|>4000,M_FLIPV
	.LONG	GUNRIP2
	.WORD	3|>4000,M_FLIPV+M_FLIPH
	.LONG	GUNRIP3
	.WORD	3|>4000,M_FLIPV+M_FLIPH
	.LONG	GUNRIP4
	.WORD	3|>4000,M_FLIPV+M_FLIPH
	.LONG	GUNRIP5
	.WORD	3|>4000,M_FLIPV+M_FLIPH
	.LONG	GUNRIP4
	.WORD	3|>4000,M_FLIPH
	.LONG	GUNRIP3
	.WORD	3|>4000,M_FLIPH
	.LONG	GUNRIP2
	.WORD	3|>4000,M_FLIPH
GUNFLYF
	.LONG 	0
*
*BOIL BLOOD FROM THE EYES
*A8=EYEBALL
EYEBOIL
	MOVI	20,A11
BOILP0
	MOVI	5,A9
BOILP
	MOVE	*A8(OYPOS),A1,W
	ADDI	14,A1
	SLL	16,A1
	MOVE	*A8(OXPOS),A10,W
	ADDI	>10,A10
	MOVE	*A8(OFLAGS),A0,W
	BTST	B_FLIPH,A0
	JREQ	BOILP00
	ADDI	>8,A10
BOILP00
	MOVY	A1,A10			;SAVE Y:X POS IN A10
	CREATE	0,BOIL			;BOIL YOUR BLOOD
	DSJS	A9,BOILP
	SLEEP	2	
	DSJ	A11,BOILP0
*
*BOIL BLOOD AT FIXED SPOT
*A10=Y:X COORD
*
BOIL
	MOVI	>8000,A0
	CALLA	SRAND
	MOVE	A0,A6
	MOVI	>8000,A0
	CALLA	SRAND
	MOVE	A0,A7

	MOVX	A10,A0
	SLL	16,A0
	MOVY	A10,A1

	MOVI	bldclt1,A2 		;(OIMG)
	MOVI	230,A3			;(OZPOS)
	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
	MOVI	CLSNEUT,A5		;(OID) INITIALLY HARMLESS
	CALLA	BEGINOBJ2

	MOVI	OVALBLD2,A9		;DO IT
	MOVK	1,A1
	JSRP	FRANIM
	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
*
*BLOW OUT THE EYE
*A11=WHAT HIT ME
*A8=EYE LOCATION
*A6=PTIME
*
BLOWEYE
	MMTM	SP,A0,A1,A2,A3,A6,A7,A8,A9,A10,A11
	MOVI	12,A9
BLOILP
	MOVE	A9,A4
	SLL	5,A4
	ADDI	IVEL->20,A4
	MOVE	*A4+,A10,W
	SLL	8,A10
	MOVE	*A4+,A11,W
	SLL	8,A11
	CREATE	0,BLOEYEP
	MOVE	A6,*A0(PTIME),W		;WAKEUP DELAY
	DSJ	A9,BLOILP	
	MMFM	SP,A0,A1,A2,A3,A6,A7,A8,A9,A10,A11
	RETS
*
*BLOW EYE PROCESS
*MAKE A BLOW EYE DUDE
*SPIN OF AT CONSTANT VEL AND DIE
*A8=EYE OBJECT
*A10=XV 
*A11=YV 
*
BLOEYEP:
;	MOVI	15,A0 			;RANDOM SLEEP TIME
;	CALLA	RANDU
;	CALLA	PRCSLP
	MOVE	A10,A6
	MOVE	A11,A7
	SRA	1,A6
	SRA	1,A7
	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	MOVE	*A8(OID),A9,W
	ZEXT	A9,W
	CMPI	CLSENMY|TYPFACE|SUBER,A9
	JREQ	BLOE1
	ADDI	>F0000,A0		;ADJUST START COORD X ,Y
	JRUC	BLOE2
BLOE1
	ADDI	>180000,A0
BLOE2
	ADDI	>E0000,A1
	MOVI	EYEFLY,A9
BLOE2A
	MOVI	I1,A2			;(OIMG)
	MOVI	231,A3			;(OZPOS)
	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
	MOVI	CLSDEAD,A5		;(OID)
	CALLA	BEGINOBJ2
	MOVK	1,A1
	JSRP	FRANIM			;ANIMATE THE SUCKER
	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
*
*EYEBALL VELOCITY TABLE
*XV,YV
IVEL
	.WORD	>230,>000	
	.WORD	>200,>100
	.WORD	>100,>200
	.WORD	>000,>230
	.WORD	->100,>200
	.WORD	->200,>100
	.WORD	->230,>000	
	.WORD	->200,->100
	.WORD	->100,->200
	.WORD	>000,->230
	.WORD	>100,->200
	.WORD	>200,->100
*
*EYEBALL FLYING THROUGH THE AIR
*
EYEFLY
	.LONG	I1	
	.WORD	4
	.LONG	I2
	.WORD	6
	.LONG	I3
	.WORD	8
	.LONG	I4
	.WORD	10
	.LONG	I5
	.WORD	12
	.LONG	I6
	.WORD	12
	.LONG	I6
	.WORD	FLIPBITS|12,M_FLIPH
	.LONG	I5
	.WORD	12
	.LONG	I4
	.WORD	10
	.LONG	I3
	.WORD	8
	.LONG	I2	
	.WORD	6
	.LONG	I1
	.WORD	4
	.LONG	0
;*
;*SHOOT A SPINNING HEAD
;*
;HDSHOOT
;	CALLR	GETPLYR	   		;A0=PLAYER
;	MOVE	A0,A11			;TARGET=A11
;
;	MOVI	FACSTOR,A8
;	MOVE	*A8,A8,L		;GET OBJ POINTER TO FIRST PART
;	CALLA	GETANIXY		;A2=Y, A3=X ANIMATION POINT
;	MOVE	A3,A0			;X
;	MOVE	A2,A1			;Y
;
;	MOVE	*A11(OXVAL),A6,L
;	MOVE	*A11(OYVAL),A7,L
;
;	SUB	A0,A6			;FIND DELTA
;	SUB	A1,A7
;	SRA	5,A6			;SHIFT TO CALC VELOCITY
;	SRA	5,A7
;
;	MMTM	SP,A0
;	MOVI	>60000,A0     		;LIMIT VELOCITIES
;	CALLR	VMAX
;	MMFM	SP,A0
;
;	MOVI	FLYHD1,A2 		;(OIMG)
;	MOVI	180,A3			;(OZPOS)
;	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
;	MOVI	CLSENMY|TYPGOO,A5	;(OID)
;	CALLA	BEGINOBJ2
;	CREATE	0,FLYHP			;FLY HEAD PROCESS
;	MOVE	A0,*A8(OPLINK),L	;FIX PROCESS LINK
;	RETS
;*
;*FLY HEAD PROCESS
;*
;FLYHP
;	MOVK	4,A10
;	MOVI	FLYHEAD,A9
;	MOVI	1F1FH,A2
;	MOVE	A2,*A8(OCONST),W
;FLYHP0
;
;	MOVE	*A8(OFLAGS),A0,W	
;	ORI	M_WRNONZ,A0
;	ANDNI	M_CONNON,A0
;	DSJS	A10,FLYHP00
;	MOVK	4,A10
;	XORI	M_CONNON+M_WRNONZ,A0
;FLYHP00	
;	MOVE	A0,*A8(OFLAGS),W
;	MOVK	4,A1	      			;KEEP IT SPINNING
;	JSRP	FRANIM
;	JRNC	FLYHP1
;	MOVI	FLYHEAD1,A9    			;STOP ON SMALLEST HEAD
;	JRUC	FLYHP0
;FLYHP1
;	SLEEP	2
;	CALLA	SCRTST
;	JREQ	FLYHP0
;
;	MOVE	A8,A0		  		;WE QUIT, CLEAN UP...
;	CALLA	DELOBJ
;	DIE
*
*LIMIT VELOCITIES
*CALLING PARAMS: A0=LIMIT,A6=XV,A7,YV
*RET A6,A7 UNDER LIMIT A6+A7 < A0
VMAX
	MMTM	SP,A2,A3,A4,A5
	MOVE	A7,A5
	MOVE	A6,A4
	SRA	3,A5
	SRA	3,A4
VMAXL
	MOVE	A6,A2
	MOVE	A7,A3
	ABS	A2
	ABS	A3
	ADD	A2,A3	
	CMP	A3,A0
	JRHS	VMAXX
	SUB	A4,A6
	SUB	A5,A7
	JRUC	VMAXL
VMAXX
	MMFM	SP,A2,A3,A4,A5
	RETS
*
*HEAD SPINNING ANIMATION
*
FLYHEAD
	.LONG	FLYHD1
	.WORD	1
	.LONG	FLYHD2
	.WORD	1
	.LONG	FLYHD3
	.WORD	1
	.LONG	FLYHD4
	.WORD	1
	.LONG	FLYHD5
	.WORD	2
	.LONG	FLYHD6
	.WORD	2
	.LONG	FLYHD6
	.WORD	FLIPBITS|2,M_FLIPH
	.LONG	FLYHD5
	.WORD	2
	.LONG	FLYHD4
	.WORD	1
	.LONG	FLYHD3
	.WORD	1
	.LONG	FLYHD2
	.WORD	1
	.LONG	FLYHD1
	.WORD	1
	.LONG	0


;	.LONG	FLYHD1A
;	.WORD	FLIPBITS|1,0
;	.LONG	FLYHD2A
;	.WORD	1
;	.LONG	FLYHD3A
;	.WORD	1
;	.LONG	FLYHD4A
;	.WORD	1
;	.LONG	FLYHD5A
;	.WORD	2
;	.LONG	FLYHD6A
;	.WORD	2
;	.LONG	FLYHD6A
;	.WORD	FLIPBITS|2,M_FLIPH
;	.LONG	FLYHD5A
;	.WORD	2
;	.LONG	FLYHD4A
;	.WORD	1
;	.LONG	FLYHD3A
;	.WORD	1
;	.LONG	FLYHD2A
;	.WORD	1
;FLYHEAD1
;	.LONG	FLYHD1B
;	.WORD	FLIPBITS|1,0
;	.LONG	FLYHD2B
;	.WORD	1
;	.LONG	FLYHD3B
;	.WORD	1
;	.LONG	FLYHD4B
;	.WORD	1
;	.LONG	FLYHD5B
;	.WORD	2
;	.LONG	FLYHD6B
;	.WORD	2
;	.LONG	FLYHD6B
;	.WORD	FLIPBITS|2,M_FLIPH
;	.LONG	FLYHD5B
;	.WORD	2
;	.LONG	FLYHD4B
;	.WORD	1
;	.LONG	FLYHD3B
;	.WORD	1
;	.LONG	FLYHD2B
;	.WORD	1
;	.LONG	0
*
*BURST O'BLOOD BALLS
*A9=Y:X COORD
*A8=QUANTITY
*
BURSTBL
	CLR	A0	 	;COOL THE VELOCITY OF THE DUDE
	MOVE	A0,@FACEXV,L
	MOVE	A0,@FACEYV,L
	MOVE	A0,@FACEZV,L
	MOVE	A8,A3
BURSTBLL
	MOVK	3,A0
	CALLA	RANDU
	MOVE	A0,A8		;RANDOM SLEEP TIME
	MOVI	>200,A0
	CALLA	SRAND
	MOVE	A0,A10
	MOVI	>200,A0
	CALLA	SRAND
	MOVE	A0,A11
	MOVE	A11,A5
	MOVE	A10,A7
	MPYS	A7,A7
	MPYS	A5,A5
	ADD	A7,A5
	CMPI	>40000,A5
	JRLS	BURSTBL1
	SRA	1,A10		;CUT DOWN FOR CIRCLE
	SRA	1,A11
BURSTBL1
	SLL	8,A10 		;ADJUST VELOCITIES
	SLL	8,A11
	CREATE	0,BADBLOOD
	MOVE	A0,A1
	MOVI	32,A0
	CALLA	RANDU
	MOVE	A0,*A1(PTIME),W	;INITIAL SLEEP DELAY
	DSJ	A3,BURSTBLL
	RETS
*
*BLOOD BALL DELAY
*

*
*BLO CHUNK DELAY
*
BLOCHDEL
	CALLR	BLOCHUNK
	DIE
*
*BLOW CHUNKS
*A9=Y:X COORD
*A8=QUANTITY
*
BLOCHUNK
	MOVE	A8,A3
BLOCHNKL
	MOVK	4,A0
	CALLA	RANDU
	ADDK	2,A0
	MOVE	A0,A8		;RANDOM SLEEP TIME
	MOVI	>200,A0
	CALLA	SRAND
	MOVE	A0,A10
	MOVI	>200,A0
	CALLA	SRAND
	MOVE	A0,A11
	MOVE	A11,A5
	MOVE	A10,A7
	MPYS	A7,A7
	MPYS	A5,A5
	ADD	A7,A5
	CMPI	>40000,A5
	JRLS	BLOCHNKL1
	SRA	1,A10		;CUT DOWN FOR CIRCLE
	SRA	1,A11
BLOCHNKL1
	SLL	10,A10 		;ADJUST VELOCITIES
	SLL	10,A11
	CREATE	0,BLOCHU
	MOVE	A0,A1
	MOVI	32,A0
	CALLA	RANDU
	MOVE	A0,*A1(PTIME),W	;INITIAL SLEEP DELAY
	DSJ	A3,BLOCHNKL
	RETS
*
*BLOW OUT 8 THINGS
*A10=OIMG
*A4=OFLAGS
*
BURST8
	MMTM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVI	BRST8TB,A9
	MOVK	8,A11
BURST8L
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	MOVE	A3,A0	
	MOVE	A2,A1
	MOVE	A10,A2			;OIMG
	MOVE	*A9+,A6,W		;OXVEL
	SLL	9,A6
	MOVE	*A9+,A7,W		;OYVEL
	SLL	9,A7
	MOVI	231,A3			;(OZPOS)
	MOVI	CLSDEAD,A5		;(OID)
	CALLA	BEGINOBJ2
	CREATE	0,HDBP
	MOVE	A0,*A8(OPLINK),L	;FIX PROCESS LINK
	DSJ	A11,BURST8L

	MMFM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	RETS
BRST8TB
	.WORD	>230,>000	
	.WORD	>180,>180
	.WORD	>000,>230
	.WORD	->180,>180
	.WORD	->230,>000	
	.WORD	->180,->180
	.WORD	>000,->230
	.WORD	>180,->180
*
*DELAYED HEAD BURST
*
BHDEL
	CALLR	BURSTHD
	DIE
*
*BLOW OUT A BUNCH O' HEADS
*
BURSTHD
	MMTM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	MOVI	HDBTAB,A9
HDBRSTL
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	MOVE	A3,A0	
	MOVE	A2,A1
	MOVE	*A9+,A2,L		;OIMG
	JREQ	HDBRSTLX
	MOVE	*A9+,A4,W		;OFLAGS
	MOVE	*A9+,A6,W		;OXVEL
	SLL	9,A6
	MOVE	*A9+,A7,W		;OYVEL
	SLL	9,A7
	MOVI	231,A3			;(OZPOS)
	MOVI	CLSDEAD,A5		;(OID)
	CALLA	BEGINOBJ2
	CREATE	0,HDBP
	MOVE	A0,*A8(OPLINK),L	;FIX PROCESS LINK
	JRUC	HDBRSTL
HDBRSTLX
	MMFM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
	RETS
*
*HEAD BURST PROCESS
*
HDBP
	SLEEP	2
	CALLA	SCRTST
	JREQ	HDBP
	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
*
*HEAD BURST TABLE
*ANIMATION, OFLAGS,XVEL,YVEL
*
HDBTAB

	.LONG	FLYHD1
	.WORD	DMAWNZ
	.WORD	>000,>230

	.LONG	FLYHD2
	.WORD	DMAWNZ
	.WORD	->100,>200

	.LONG	FLYHD3
	.WORD	DMAWNZ
	.WORD	->200,>100

	.LONG	FLYHD4
	.WORD	DMAWNZ
	.WORD	->230,>000	

	.LONG	FLYHD5
	.WORD	DMAWNZ
	.WORD	->200,->100

	.LONG	FLYHD6
	.WORD	DMAWNZ
	.WORD	->100,->200

	.LONG	FLYHD1
	.WORD	DMAWNZ
	.WORD	>000,->230

	.LONG	FLYHD6
	.WORD	DMAWNZ|M_FLIPH
	.WORD	>100,->200

	.LONG	FLYHD5
	.WORD	DMAWNZ|M_FLIPH
	.WORD	>200,->100

	.LONG	FLYHD4
	.WORD	DMAWNZ|M_FLIPH
	.WORD	>230,>000	

	.LONG	FLYHD3
	.WORD	DMAWNZ|M_FLIPH
	.WORD	>200,>100

	.LONG	FLYHD2
	.WORD	DMAWNZ|M_FLIPH
	.WORD	>100,>200

	.LONG	0		;END OF TABLE
*
*LAUNCH A BLOOD BALL
*A8=SLEEP TIME
*A9=Y:X COORD
*A10=XV 
*A11=YV 
*
BADBLOOD
	MOVE	@FACEXV,A6,L
	MOVE	@FACEYV,A7,L
	ADD	A10,A6
	ADD	A11,A7
	MOVE	A8,A11
	MOVX	A9,A0
	SLL	16,A0
	MOVY	A9,A1
	MOVI	BLDBAL,A9
	MOVI	BLD1,A2			;(OIMG)
	MOVI	231,A3			;(OZPOS)
	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
	MOVI	CLSDEAD,A5		;(OID)
	CALLA	BEGINOBJ2
BLOOP
	MOVE	A11,A0
	CALLA	PRCSLP
	MOVK	4,A1
	JSRP	FRANIM			;ANIMATE THE SUCKER
	JRNC	BLOOP	
	
	CALLA	PSTOP

	MOVI	BLDSPLT,A9		;SPLAT IT... WERE DONE
	MOVK	1,A1
	JSRP	FRANIM			;ANIMATE THE SUCKER
	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
BLDBAL
	.LONG	BLD1	
	.WORD	4
	.LONG	BLD2
	.WORD	6
	.LONG	BLD3
	.WORD	8
	.LONG	BLD4
	.WORD	10
	.LONG	BLD5
	.WORD	12
	.LONG	BLD6
	.WORD	12
	.LONG	BLD6
	.WORD	FLIPBITS|12,M_FLIPH
	.LONG	BLD5
	.WORD	12
	.LONG	BLD4
	.WORD	10
	.LONG	BLD3
	.WORD	8
	.LONG	BLD2	
	.WORD	6
	.LONG	BLD1
	.WORD	4
	.LONG	0
*
*BLOW A CHUNK
*A8=SLEEP TIME
*A9=Y:X COORD
*A10=XV 
*A11=YV 
*
*
BLOCHU
	MOVE	@FACEXV,A6,L
	MOVE	@FACEYV,A7,L

	ADD	A10,A6
	ADD	A11,A7
	MOVE	A8,A11
	MOVX	A9,A0
	SLL	16,A0
	MOVY	A9,A1
	MOVE	A0,A3
	MOVK	16,A0
	CALLA	RANDU
	DEC	A0
	SLL	6,A0
	ADDI	CHNKTAB,A0		;RANDOM CHUNK TABLE
	MOVE	*A0+,A9,L		;GET PIECE
	MOVE	*A0+,A2,L
 	MOVE	A3,A0

;	MOVI	CHUNKA,A9
;	MOVI	OFLESH1,A2		;(OIMG)

	MOVI	231,A3			;(OZPOS)
	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
	MOVI	CLSDEAD,A5		;(OID)
	CALLA	BEGINOBJ2
CHUNKL
	MOVE	A11,A0
	CALLA	PRCSLP
	MOVK	4,A1
	JSRP	FRANIM			;ANIMATE THE SUCKER
	JRNC	CHUNKL

	MOVE	A8,A0
	CALLA	DELOBJ
	DIE
*
*RANDOM CHUNK TABLE
*
CHNKTAB
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	CHUNKA,OFLESH1
	.LONG	EYEFLY,I1
	.LONG	EYEFLY,I1
	.LONG	TUNGA,TUNG1A
	.LONG	TUNGA,TUNG1A
	.LONG	TUNGA,TUNG1A
	.LONG	FLYHEAD,ORCHD1
	.LONG	FLYHEAD,ORCHD1
	.LONG	FLYHEAD,ORCHD1 
TUNGA
	.LONG	TUNG1D
	.WORD	4
	.LONG	TUNG1C
	.WORD	4
	.LONG	TUNG1B
	.WORD	4
	.LONG	TUNG1A
	.WORD	4
	.LONG	TUNG1
	.WORD	4
	.LONG	TUNG2
	.WORD	4
	.LONG	TUNG1
	.WORD	4
	.LONG	TUNG3
	.WORD	4
	.LONG	TUNG1
	.WORD	4
	.LONG	TUNG2
	.WORD	4
	.LONG	TUNG1
	.WORD	4
	.LONG	TUNG3
	.WORD	4
	.LONG	TUNG1
	.WORD	4
	.LONG	TUNG1A
	.WORD	4
	.LONG	TUNG1B
	.WORD	4
	.LONG	TUNG1C
	.WORD	4
	.LONG	TUNG1D
	.WORD	4
	.LONG	0

CHUNKA
	.LONG	OFLESH1	
	.WORD	4
	.LONG	OFLESH1A
	.WORD	6
	.LONG	OFLESH1B
	.WORD	8
	.LONG	OFLESH1C
	.WORD	10
	.LONG	OFLESH1D
	.WORD	12
	.LONG	OFLESH1E
	.WORD	12
	.LONG	OFLESH1F
	.WORD	FLIPBITS|12,M_FLIPH
	.LONG	OFLESH1F
	.WORD	12
	.LONG	OFLESH1E
	.WORD	10
	.LONG	OFLESH1D
	.WORD	8
	.LONG	OFLESH1C	
	.WORD	6
	.LONG	OFLESH1B
	.WORD	4
	.LONG	OFLESH1A
	.WORD	4
	.LONG	OFLESH1
	.WORD	4
	.LONG	0

BLDSPLT
	.LONG	BLDSPLT1	
	.WORD	6
	.LONG	BLDSPLT2
	.WORD	6
	.LONG	BLDSPLT3
	.WORD	6
	.LONG	0

;OVAL BLOOD EXPLOSION
OVALBLD2
	.LONG	bldclt1
	.WORD	1
	.LONG	bldclt2
	.WORD	1
	.LONG	bldclt3
	.WORD	1
	.LONG	bldclt4
	.WORD	1
	.LONG	bldclt5
	.WORD	1
	.LONG	bldclt6
	.WORD	1
	.LONG	bldclt7
	.WORD	1
	.LONG	bldclt8
	.WORD	1
	.LONG	0
*
*DAMAGE ANIMATION SUB
*A3=DAMAGE LEVEL
*A8=OBJECT HIT
*A9=STRUCT INDEX
DAMASUB
	MMTM	SP,A0,A1,A2,A3,A4
	CMPI	31,A3
	JRLS	DAMAS1
	MOVE	@BLOFLG,A0,W   		;BLOW IN PROGRESS?
	JRNE	DAMAX			;YES, CAN IT...

	MOVE	*A8(OID),A0,W				;MOUTH KLUDGE CHECK...
	ZEXT	A0,W
	CMPI	CLSENMY|TYPFACE|SUBMTHL,A0
	JREQ	DAMAS0

	CMPI	CLSENMY|TYPFACE|SUBMTHR,A0
	JRNE	DAMAS1
DAMAS0
	MOVE	@FACSTOR+DAMAGEL,A1,W		;CHECK MOUTH TRANSISTION
	MOVE	@FACSTOR+DAMAGEL+64,A2,W
	ADD	A1,A2
	CMPI	62,A2
	JRLO	DAMAS00

	MOVK	32,A3
	MOVE	A3,@FACSTOR+DAMAGEL,W
	MOVE	A3,@FACSTOR+DAMAGEL+64,W
	JRUC	DAMAS1
DAMAS00
	MOVK	31,A3		
DAMAS1
	MOVE	A3,*A9(DAMAGEL),W
	MOVB	*A9(AFRAME),A1		;GET FRAME POINTER
	DEC	A1
	CMPI	LSTANI,A1
	JRHS	DAMAX			;OUT OF RANGE
DAMA1	
	MOVI	RBANITB1-RBANITB,A2
	MPYU	A2,A1			;ADJUST FOR LENGTH OF ENTRY
	ADDI	RBANITB,A1			;ADD TABLE BASE
	MOVE	*A8(OFLAGS),A4,W	;GET FLAGS
	SRL	4,A3			; 1/16 OF DAMAGE COUNT
	SLL	5,A3			;ADJUST FOR LONG WORD
	ADD	A3,A1	
	MOVE	*A1,A1,L		;GET OIMG
	CALLA	ANI
DAMAX
	MMFM	SP,A0,A1,A2,A3,A4
	RETS
*
*PUMMEL THE DUDE: DAMAGE OTHER SHIT EVENTUALLY ON DEAD BANGING
*A2= DAMAGE AMOUNT DOWN
*
PUMMEL
	MMTM	SP,A1,A2,A3,A4,A8,A9
	MOVE	@PUMLCNT,A1,W
	ADDK	1,A1
	MOVE	A1,@PUMLCNT,W
	SLL	28,A1		;1 OF 16
	JRNE	PUMMLX
	MOVI	FACSTOR,A9	
PUMLL
	MOVE	*A9,A8,L
	JREQ	PUMMLX
	MOVE	*A9(DAMAGEL),A3,W
	CMPI	47,A3
	JRHS	PUMLLP
	ADD	A2,A3
	CALLR	CKBLO		;CHECK FOR A BLOW UP
	CMPI	47,A3
	JRLS	PUMLL0
	MOVI	47,A3
PUMLL0
	CALLR	DAMASUB
	JRUC	PUMMLX
PUMLLP
	ADDI	>40,A9
	JRUC	PUMLL
PUMMLX
	MMFM	SP,A1,A2,A3,A4,A8,A9
	RETS
*
*POP FACE
*A1=DELTA X
*A2=DELTA Y
*
POPFACE
	MMTM	SP,A1,A2,A3,A4,A8
	MOVI	FACSTOR,A8
POPFACP
	MOVE	*A8,A3,L
	JREQ	POPFACX		;ALL DONE, NULL POINTER
	MOVE	*A3(OXVAL),A4,L
	ADD	A1,A4
	MOVE	A4,*A3(OXVAL),L
	MOVE	*A3(OYVAL),A4,L
	ADD	A2,A4
	MOVE	A4,*A3(OYVAL),L
	ADDI	>40,A8
	JRUC	POPFACP
POPFACX
	MMFM	SP,A1,A2,A3,A4,A8
	RETS
*
*RETURN EQ IF RBOSS ON SCREEN
*
RBOSSON
	MMTM	SP,A0,A2,A3,A8
	CLR	A0
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	MOVE	@WORLDTLX,A4,L
	MOVE	@WORLDTLY,A5,L
	SUB	A4,A3
	SUB	A5,A2
	SRA	16,A2
	SRA	16,A3
	CMPI	370,A3
	JRHS	RBOSSOF
	CMPI	30,A3
	JRLS	RBOSSOF
	CMPI	-20,A2
	JRLT	RBOSSOF
	CMPI	180,A2
	JRLS	RBOSON		;WE'RE ALL RIGHT
RBOSSOF
	MOVK	1,A0
RBOSON
	MOVE	A0,A0
	MMFM	SP,A0,A2,A3,A8
	RETS
*
*SHOOT OUT A TONGUE
*
TNGSHT

*OPEN MOUTH
*MAKE TONGUE
*THROW IT OUT
	MOVE	@FACSTOR,A8,L	;GET FIRST OBJECT IN BOSS STRUCT
	MOVI	DMAWNZ|M_PIXSCAN,A4
	MOVE	*A8(OXVAL),A0,L
	ADDI	[8H,0],A0
	MOVE	*A8(OYVAL),A1,L
	ADDI	[29H,0],A1
	MOVK	3,A9
	LOCKUP
	JAUC	DOIT
*
*BURNER
*
BURNPRC
	MOVE	@RTARMFLG,A0,W	;NE=RT ARM BLOWN OUT
	MOVE	@LFTARMFLG,A1,W	;NE=LFT ARM BLOWN OUT
	AND	A0,A1
	JREQ	BURNSLP

	MOVI	100,A0 		;CHECK OCCASIONALLY
	CALLA	RANDPER
;	JRNC	BURNSLP

*CHECK PLAYER 1 BOX CHECK
	MOVE	@PLYROBJS,A8,L
	JREQ	BURN2
	MOVE	@PLYRPRCS,A0,L
	MOVE	*A0(DELYDET),A0,W
	JRNE	BURN2
	CALLR	BURNCHEK
	JRC	BURNEM
*CHECK PLAYER 2 BOX CHECK
BURN2
	MOVE	@PLYROBJS+32,A8,L
	JREQ	BURNSLP
	MOVE	@PLYRPRCS+32,A0,L
	MOVE	*A0(DELYDET),A0,W
	JRNE	BURNSLP
	CALLR	BURNCHEK
	JRC	BURNEM
	JRUC	BURNSLP
BURNEM
	CREATE	TYPFACE,FLAME4
	CREATE	TYPFACE,FLAME8
BURNSLP0
	SLEEP	240
BURNSLP
	SLEEP	10
	JRUC	BURNPRC
*
*CHECK FLAME PROXIMITY
*
BURNCHEK
	CALLA	GETANIXY
	MOVE	A2,A1
	MOVE	A3,A0
	MOVE	@FACSTOR,A8,L
	CALLA	GETANIXY
	SUB	A3,A0	
	SUB	A2,A1
	SRA	16,A0
	SRA	16,A1
	ABS	A0
	CMPI	>62,A1		;CHECK Y COORDS
	JRLS	BURNX
	CMPI	>82,A1
	JRHS	BURNX
	CMPI	>14,A0
	JRLS	BURNX
	CMPI	>40,A0
	JRHS	BURNX
	SETC
	RETS
BURNX	
	CMPI	>78,A1		;CHECK FURTHER OUT BOX
	JRLS	BURNXX
	CMPI	>98,A1
	JRHS	BURNXX
	CMPI	>34,A0
	JRLS	BURNXX
	CMPI	>60,A0
	JRHS	BURNXX
	SETC
	RETS
BURNXX
	CLRC
	RETS


;	MOVI	100,A0
;	CALLA	RANDPER
;	JRNC	BURNSLP
;
;	MOVK	3,A0
;	CALLA	RANDU
;	DEC	A0
;	JRNE	BURNP1
;
;	CREATE	TYPFACE,FLAME4
;	JRUC	BURNSLP0
;BURNP1
;	DEC	A0
;	JRNE	BURNP2
;	CREATE	TYPFACE,FLAME8
;	JRUC	BURNSLP0
;BURNP2
;	CREATE	TYPFACE,FLAME8
;	CREATE	TYPFACE,FLAME4
;	JRUC	BURNSLP0

*
*CREATE A FLAMER AT 4 O'CLOCK
*
FLAME4
	MOVE	@FACSTOR,A8,L	;GET FIRST OBJECT IN BOSS STRUCT
	MOVI	DMAWNZ|M_PIXSCAN|M_FLIPH,A4
	MOVE	*A8(OXVAL),A0,L
	ADDI	[-8H,0],A0
	MOVE	*A8(OYVAL),A1,L
	ADDI	[29H,0],A1
	MOVK	4,A9
	JAUC	DOIT
*
*CREATE A FLAMER AT 8 O'CLOCK
*
FLAME8
	MOVE	@FACSTOR,A8,L	;GET FIRST OBJECT IN BOSS STRUCT
	MOVI	DMAWNZ|M_PIXSCAN,A4
	MOVE	*A8(OXVAL),A0,L
	ADDI	[8H,0],A0
	MOVE	*A8(OYVAL),A1,L
	ADDI	[29H,0],A1
	MOVK	5,A9
	JAUC	DOIT
*
*LEFT GUN CONTROLLER
*
LEFTGUN
	MOVE	@LGUNMODE,A0,W
	SLL	29,A0	 	;MULT BY 32, AND MASK ILLEGALS
	SRL	24,A0
	ADDI	LGMDTAB,A0
	MOVE	*A0,A0,L
	JUMP	A0
LGLP
	MOVE	@LSHTRATE,A0
	MOVE	A0,A1
	CALLA	RANDU
	SRL	1,A1
	ADD	A1,A0
	CALLA	PRCSLP
	JRUC	LEFTGUN
*LEFT GUN SHOOT AT RANDOM
LGRAND
	MOVK	6,A0  		;GET RANDOM DIRECTION
	CALLA	RANDU
	DEC	A0
	MOVE	A0,A10		;SEEK IT
LGR1
	JSRP	LGSEEK
	SLEEP	2
	CREATE	TYPFACE,SHOOTBULL
	SLEEP	5		;WAIT FOR FIRE TO FINISH
	JRUC	LGLP

*LEFT GUN SHOOT AT PLAYER
LGPLAYR
	MOVI	FACSTOR,A8 	;GET BOSS POINTER
	CALLA	GETPLYR		;FIND PLAYER TO SEEK
	MOVE	A0,A11
	CALLR	AIMLFT		;GET A10=GUN DIR
	JRUC	LGR1

*LEFT GUN SHOOT DOWN
LGDOWN	
	MOVK	1,A10
	JRUC	LGR1

*LEFT GUN SHOOT CROSS
LGCROSS	
	CLR	A10
	JRUC	LGR1

*LEFT GUN SHOOT SIDE
LGSIDE
	MOVK	5,A10
	JRUC	LGR1

*LEFT GUN SWEEP
LGSWEEP
	MOVE	@LGUNDIR,A10,W
     	MOVE	@LGSWFLG,A0,W	 	;SWEEP DIRECTION FLAG
	JREQ	LGSW1
	INC	A10
	CMPI	5,A10
	JRLS	LGR1
	CLR	A10
	MOVE	A10,@LGSWFLG
	MOVK	5,A10
LGSW1
	DEC	A10
	JRNN	LGR1
	MOVE	A10,@LGSWFLG  		;CHANGE DIRECTION OF SWEEP
	MOVK	1,A10
	JRUC	LGR1

LGMDTAB	.LONG	LGRAND,LGPLAYR,LGDOWN,LGCROSS
	.LONG	LGSIDE,LGSWEEP,LGSWEEP,LGSWEEP	

*
*RIGHT GUN CONTROLLER
*
RIGHTGUN
	MOVE	@RGUNMODE,A0,W
	SLL	29,A0	 	;MULT BY 32, AND MASK ILLEGALS
	SRL	24,A0
	ADDI	RGMDTAB,A0
	MOVE	*A0,A0,L
	JUMP	A0
RGLP
	MOVE	@RSHTRATE,A0
	MOVE	A0,A1
	CALLA	RANDU
	SRL	1,A1
	ADD	A1,A0
	CALLA	PRCSLP
	JRUC	RIGHTGUN

*RT GUN SHOOT AT RANDOM
RGRAND
	MOVK	6,A0  		;GET RANDOM DIRECTION
	CALLA	RANDU
	DEC	A0
	MOVE	A0,A10		;SEEK IT
RGR1
	JSRP	RGSEEK
	SLEEP	2
	ADDK	6,A10		;ADD OFFSET FOR RIGHT GUN
	CREATE	TYPFACE,SHOOTBULL
	SLEEP	5		;WAIT FOR FIRE TO FINISH
	JRUC	RGLP

*RT GUN SHOOT AT PLAYER
RGPLAYR
	MOVI	FACSTOR,A8 	;GET BOSS POINTER
	CALLA	GETPLYR		;FIND PLAYER TO SEEK
	MOVE	A0,A11
	CALLR	AIMRT		;GET A10=GUN DIR
	JRUC	RGR1

*RT GUN SHOOT DOWN
RGDOWN	
	MOVK	1,A10
	JRUC	RGR1

*RT GUN SHOOT CROSS
RGCROSS	
	CLR	A10
	JRUC	RGR1

*RT GUN SHOOT SIDE
RGSIDE
	MOVK	5,A10
	JRUC	RGR1

*RT GUN SWEEP
RGSWEEP
	MOVE	@RGUNDIR,A10,W
     	MOVE	@RGSWFLG,A0,W	 	;SWEEP DIRECTION FLAG
	JREQ	RGSW1
	INC	A10
	CMPI	5,A10
	JRLS	RGR1
	CLR	A10
	MOVE	A10,@RGSWFLG
	MOVK	5,A10
RGSW1
	DEC	A10
	JRNN	RGR1
	MOVE	A10,@RGSWFLG  		;CHANGE DIRECTION OF SWEEP
	MOVK	1,A10
	JRUC	RGR1

RGMDTAB	.LONG	RGRAND,RGPLAYR,RGDOWN,RGCROSS
	.LONG	RGSIDE,RGSWEEP,RGSWEEP,RGSWEEP	
*
*SEEK LEFT GUN DIRECTION
*A10 IS POSTION TO SEEK 0-5
*
LGSEEK
	PUSHP	A10
	MOVK	1,A11
	MOVE	@LGUNDIR,A0  	;COMPARE CURRENT TO WANTED DIRECTION
	SUB	A0,A10		;ALREADY THERE?
	JREQ	LGSKX		;QUIT...
	JRNN	LGS1
	NEG 	A11
LGS1
	ABS	A10
LGSLP
	MOVE	@LGUNDIR,A9,W
	ADD	A11,A9
	CMPI	6,A9
	JRLO	LGS2
	LOCKUP
LGS2
	MOVE	A9,@LGUNDIR,W
	SLL	4,A9
	ADDI	LGSKTAB,A9
	CALLR	ANIBOSS	 	;ANIMATE INTO PLACE
	MOVE	@LSHTRATE,A0
	CALLA	PRCSLP
	DSJ	A10,LGSLP
LGSKX	
	PULLP	A10
	RETP
*
*SEEK RIGHT GUN DIRECTION
*A10 IS POSTION TO SEEK 0-5
*
RGSEEK
	PUSHP	A10
	MOVK	1,A11
	MOVE	@RGUNDIR,A0  	;COMPARE CURRENT TO WANTED DIRECTION
	SUB	A0,A10		;ALREADY THERE?
	JREQ	RGSKX		;QUIT...
	JRNN	RGS1
	NEG 	A11
RGS1
	ABS	A10
RGSLP
	MOVE	@RGUNDIR,A9,W
	ADD	A11,A9
	CMPI	6,A9
	JRLO	RGS2
	LOCKUP
RGS2
	MOVE	A9,@RGUNDIR,W
	SLL	4,A9
	ADDI	RGSKTAB,A9
	CALLR	ANIBOSS	 	;ANIMATE INTO PLACE
	MOVE	@RSHTRATE,A0
	CALLA	PRCSLP
	DSJ	A10,RGSLP
RGSKX	
	PULLP	A10
	RETP
*
*SHOOT BULLET PROCESS
*A10=GUN ANGLE 0-11
*
SHOOTBULL
	MOVE	@HALT,A0,W
	JANE	SUCIDE			;NO SHOOT ON HALT

	MMTM	SP,A10
	SLL	5,A10
	ADDI 	RECOILTB,A10		
	MOVE	*A10,A9,L		;GET ANIMATION
	MOVK	2,A10			;GET TIME
	MOVI	ARMANIFLG,A11,L		;ARM ANIMATION FLAG SET
	CREATE	TYPFACE,ANISEQ

	MMFM	SP,A0
	SLL	6,A0			;ADJUST FOR TABLE SIZE 64 BITS/ENTRY
	ADDI	BULTAB,A0		;GET OFFSET TABLE INDEX
	MOVE	*A0+,A4,W	  	;GET X OFFSET FROM ANIMATION PT.
	MOVE	*A0+,A5,W		;GET Y OFFSET FROM ANIMATION PT.
	MOVE	*A0+,A6,W		;GET X VEL 8.8.
	SLL	7,A6			;ADJUST SHIFT XVEL
	MOVE	*A0+,A7,W		;GET YVEL 8.8
	SLL	7,A7			;ADJUST SHIFT YVEL TO 16.16
	MOVI	FACSTOR,A8
	MOVE	*A8,A8,L		;GET OBJ POINTER TO FIRST PART

	MOVE	*A8(OXVEL),A2,L		;ADD IN FACE VELOCITY
	MOVE	*A8(OYVEL),A3,L
	ADD	A2,A6
	ADD	A3,A7

	CALLA	GETANIXY		;A2=Y, A3=X ANIMATION POINT
	SLL	16,A4
	SLL 	16,A5
	ADD	A4,A3
	ADD	A5,A2
	MOVE	A3,A0			;OXVAL
	MOVE	A2,A1			;OYVAL
	MOVE	A0,A10
	MOVE	A1,A11
	MMTM	SP,A0,A1,A7
	CREATE	TYPFACE,GUNPUFF		;GUN PUFF
	MMFM	SP,A0,A1,A7
	MOVI	GUNBUL,A2		;OIMG STUFF
	MOVI	160,A3			;(OZPOS)
	MOVI	DMAWNZ,A4		;(OFLAGS) NON-ZERO VALUE
	MOVI	CLSENMY|TYPGOO,A5	;(OID)
	JAUC	START_PJ
*
*BULLET TABLE
*XOFF,YOFF,XVEL,YVEL
BULTAB
	.WORD  -35,148,>200,>400		;LFT GUN DIR 6	
	.WORD  -73,155,0,>400			;LFT GUN DIR 1	
	.WORD  -102,143,->200,>400		;LFT GUN DIR 2	
	.WORD  -118,129,->300,>300		;LFT GUN DIR 3	
	.WORD  -130,105,->400,>200		;LFT GUN DIR 4	
	.WORD  -137,74,->400,0			;LFT GUN DIR 5	

	.WORD  34,148,->200,>400		;RT GUN DIR 6	
	.WORD  72,155,0,>400			;RT GUN DIR 1	
	.WORD  101,143,>200,>400		;RT GUN DIR 2	
	.WORD  117,129,>300,>300		;RT GUN DIR 3	
	.WORD  129,105,>400,>200		;RT GUN DIR 4	
	.WORD  136,74,>400,0			;RT GUN DIR 5	
*
* GUN ANIMATION TABLE
*
RECOILTB
	.LONG	LARMF6	;LEFT GUN ANGLE 6
	.LONG	LARMF1	;LEFT GUN ANGLE 1
	.LONG	LARMF2
	.LONG	LARMF3
	.LONG	LARMF4
	.LONG	LARMF5

	.LONG	RARMF6	;RIGHT GUN ANGLE 6
	.LONG	RARMF1	;RIGHT GUN ANGLE 1
	.LONG	RARMF2
	.LONG	RARMF3
	.LONG	RARMF4
	.LONG	RARMF5
*
*MAKE A PUFF
*A10=X COORD, A11=Y COORD
*A8=BOSS PIECE
GUNPUFF
	MOVE	A10,A0
	MOVE	A11,A1
	MOVI	GNFR1,A2
	MOVI	CLSDEAD,A5
	MOVE	*A8(OXVEL),A6,L			;GET BOSS VELOCITY FOR PUFFS
	MOVE	*A8(OYVEL),A7,L
	MOVI	DMAWNZ|M_NOCOLL,A4		;FLAGS
	MOVI	170,A3		;133
	CALLA	BEGINOBJ2
	MOVI	PUFL,A9
PUFFLP
	MOVK	4,A1
	JSRP	FRANIM				;ANIMATE
	JRC	PUFFEND
	SLEEP	2
	MOVE	@FACSTOR,A4,L			;GET BOSS OBJECT PIECE
	MOVE	*A4(OXVEL),A6,L			;GET BOSS VELOCITY FOR PUFFS
	MOVE	*A4(OYVEL),A7,L
	MOVE	A6,*A8(OXVEL),L
	MOVE	A7,*A8(OYVEL),L
	JRUC	PUFFLP
PUFFEND
	MOVE	A8,A0
	CALLA	DELOBJ				;CLEAN UP DUDE
	DIE

PUFL	.LONG	GNFR1
	.WORD	2
	.LONG	GNFR2
	.WORD	2
	.LONG	GNFR3
	.WORD	2
	.LONG	0
*
*CONSTANT FLAMER
*A10=BURST TIME
FLAMPROC
	MOVI	LOFLAMR,A9    	;FLAME IT....
	CALLR	ANIBOSS
	SLEEP	2
	MOVI	HIFLAMR,A9    	;FLAME IT....
	CALLR	ANIBOSS
	SLEEP	2
	MOVI	NOFLAMR,A9    	;FLAME IT....
	CALLR	ANIBOSS
	SLEEP	2
	DSJ	A10,FLAMPROC
	MOVI	FLAMKILA,A9
	CALLR	ANIBOSS	 			;ANIMATE INTO PLACE
	DIE
*RANDOM ANIMATOR
*A1=ANIMATION TABLE
*A2=ANIMATION FLAG
*
RANDANI
	MMTM	SP,A0,A9,A10,A11
	MOVE	A2,A11		;SAVE FLAG
	MOVE	@RAND,A0,W
	ZEXT	A0,W		;GET RID OF SIGN EXTEND
	SRL	12,A0
	SLL	6,A0
	ADD 	A1,A0
	MOVE	*A0+,A9,L
	MOVE	*A0,A10,L
	CREATE	TYPFACE|SUBANI,ANISEQ
	MMFM	SP,A0,A9,A10,A11
	RETS
*
*INITIALIZE ROBOT BOSS
*A0=XPOS,A1=YPOS,A11=DAMAGE LEVEL
*
RBINIT
	MMTM	SP,A2,A3,A12,A13
	MOVI	RBITAB,A12		;INIT ROBOT BOSS TABLE	
RBI0
	MMTM	SP,A0,A1		;SAVE XY COORDS
	CREATE	TYPFACE,STICKP		;STICK TOGETHER HEAD
	MMFM	SP,A0,A1
	MOVI	FACSTOR,A13
RBILP
	MOVE	*A12+,A4,W		;GET (OFLAGS)
	JREQ	RBIDON			;END OF LIST

	BTST	B_FLIPH,A4
	JRZ	RBI1
	MOVE	*A12,A5,W
	ZEXT	A5
	CMPI	CLSENMY|TYPFACE|SUBHD,A5
	JREQ	RBI1
	SUBI	>20000,A0 		;BRING RIGHT SIDE BACK A FEW
RBI1
	MOVE	*A12+,A5,W		;GET (OID)
	MOVE	*A12+,A6,W	    	;GET ANI FRAME #
	MOVB	A6,*A13(AFRAME)		;STORE FRAME POINTER
	DEC	A6
	MOVI	RBANITB1-RBANITB,A7
	MPYU	A6,A7			;ADJUST FOR LENGTH OF ENTRY
	ADDI	RBANITB,A7 		;ADD TABLE BASE

;	MOVE	A11,A3			;GET DAMAGE LEVEL
;	SRL	1,A3
;	SLL	5,A3			;ADJUST FOR LONG WORD
;	ADD	A3,A7

	MOVE	*A7,A2,L		;GET OIMG POINTER
	CLR	A6			;(OXVEL)
	CLR	A7			;(OYVEL)
	MOVI	130,A3			;(OZPOS)
	CALLA	BEGINOBJ2		;STUFF OBJ
	MOVE	A13,*A8(OPLINK),L	;LINK OBJECT TO BLOCK STRUCTURE
	MOVE	A8,*A13,L 		;SAVE POINTER TO GUY
	MOVE	A11,*A13(DAMAGEL),W	;INIT DAMAGE LEVEL
	ADDI	>40,A13			;INCREMENT IT ALONG
	CLR	A7
	MOVE	A7,*A8(OCONST),W

	MOVE	*A12+,A4,W		;GET OZPOS
	MOVE	A4,*A8(OZPOS),W
	JRUC	RBILP  			
RBIDON
	CLR	A14
	MOVE	A14,*A13,L		;ZERO OUT LAST POINTER TO MARK END
	MOVI	FACSTOR,A8
	MMFM	SP,A2,A3,A12,A13
	RETS
*
*GET QUADRANT TABLE ENTRY
*A0=X OFFSET FROM ANI PT.
*A1=Y OFFSET FROM ANI PT.
*A8=BOSS DATA STRUCT
*A9=ANIMATION TABLE
*A11=PLAYER TO FOLLOW
*RET: A9=ANIMATION
*
GETQTB
	CALLR	GETQUAD
	SLL	5,A1
	ADD	A1,A9
	MOVE	*A9,A9,L
	RETS
*
*GET QUADRANT
*A0=X OFFSET FORM ANI POINT
*A1=Y OFFSET FROM ANI PT
*A11=PLAYER TO FOLLOW
*A8=BOSS DATA STRUCT
*RET: A1=0-63 FOR ANGLE
GETQUAD
	PUSH	A8
	MOVE	*A8,A8,L	;GET BOSS COORD
	CALLA	GETANIXY
	MOVE	*SP+,A8,L
	SRL	16,A2
	SRL	16,A3
	ADD	A0,A3	 	;ADD IN OFFSET ADJUSTMENT
	ADD	A1,A2
;	ADDI	80,A2		;ADJUST FOR CENTER
	MOVE	*A11(OXPOS),A0,W
	MOVE	*A11(OYPOS),A1,W
	SUB	A3,A0		;X DELTA
	SUB	A2,A1 		;Y DELTA
	MOVE	A0,A3	
	MOVE	A1,A4
	SRL	31,A3
	SRL	31,A4
	SLL	1,A4
	ADD	A3,A4
	SLL	4,A4
	ADDI	QQTAB,A4
	MOVB	*A4,A5		;QUADRANT #
	MOVB	*A4(8),A4	;NEGATE INFO
	ABS	A0
	ABS	A1
	MOVE	A0,A3
	SLL	16,A3		;ADJUST FOR FRACTION
	DIVU	A1,A3
	CMPI	>40000,A3
	JRLO	GETQ3
	MOVI	>3FFFF,A3
GETQ3
	SRL	14,A3
	MOVE	A4,A4
	JRZ	GETQ4
	NEG	A3
	ADDK	16,A3
GETQ4
	SLL	4,A5
	ADD	A5,A3
	MOVE	A3,A1
	ANDI	>0000003F,A1
	RETS
*
QQTAB
	.BYTE	3,1
	.BYTE	0,0
	.BYTE	2,0
	.BYTE	1,1
*
*EYEBALL TABLE
*
EYEQUAD
	.LONG	EYESCNT		;0
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	 ;8
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	

	.LONG	EYESLFT2	;16	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT2	
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	;24
	.LONG	EYESLFT1	
	.LONG	EYESLFT1	
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT

	.LONG	EYESCNT		;32
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESRT1		;40
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	;48	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT2	
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESRT1	;56
	.LONG	EYESRT1	
	.LONG	EYESRT1	
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
	.LONG	EYESCNT
*
*LIL HEAD TABLE
*
HDQUAD
	.LONG 	HEAD0		;0
	.LONG 	HEAD0
	.LONG 	HEAD0
	.LONG 	HEAD0
	.LONG	HEAD30
	.LONG	HEAD30
	.LONG	HEAD30
	.LONG	HEAD30
	.LONG	HEAD30		;8
	.LONG	HEAD60
	.LONG	HEAD60
	.LONG	HEAD60
	.LONG	HEAD60
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD90

	.LONG	HEAD90	   	;16
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD90
	.LONG	HEAD135
	.LONG	HEAD135	       ;24
	.LONG	HEAD135
	.LONG	HEAD135
	.LONG	HEAD135
	.LONG	HEAD135
	.LONG	HEAD135
	.LONG	HEAD135
	.LONG	HEAD135		;31

	.LONG	HEAD225		;32
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225
	.LONG	HEAD225		;40
	.LONG	HEAD225
	.LONG	HEAD270
	.LONG	HEAD270
	.LONG	HEAD270
	.LONG	HEAD270
	.LONG	HEAD270
	.LONG	HEAD270


	.LONG	HEAD270	 	;48
	.LONG	HEAD270
	.LONG	HEAD270
	.LONG	HEAD300
	.LONG	HEAD300
	.LONG	HEAD300
	.LONG	HEAD300
	.LONG	HEAD300
	.LONG	HEAD330
	.LONG	HEAD330
	.LONG	HEAD330
	.LONG	HEAD330
	.LONG	HEAD330
	.LONG	HEAD0
	.LONG	HEAD0
	.LONG	HEAD0		;63
*
*FOLLOW PLAYER WITH EYES
*A11=PLAYER TO FOLLOW
*A8=BOSS DATA STRUCT
*
FOLOEYE
	MOVI	EYEQUAD,A9
	CLR	A0 		;X OFFSET
	MOVI	80,A1		;Y OFFSET
	CALLR	GETQTB
	CALLR	ANIBOSS
	RETS
*
*FOLLOW PLAYER WITH HEAD
*A11=PLAYER TO FOLLOW
*A8=BOSS DATA STRUCT
*
FOLOHD
	MOVI	HDQUAD,A9
	CLR	A0		 ;X OFFSET
	MOVI	80,A1		 ;Y OFFSET
	CALLR	GETQTB
	CALLR	ANIBOSS
	RETS
*
*AIM LEFT GUN
*A11=PLAYER TO FOLLOW
*A8=BOSS DATA STRUCT
*RET A10 = GUN DIRECTION 0-5
AIMLFT
	MOVI	-70,A0 		;X OFFSET
	MOVI	82,A1		;Y OFFSET
	CALLR	GETQUAD		;RETURNS ANGLE 0-63	IN A1
	SRL	1,A1
	SLL	3,A1
	ADDI	AIMLTAB,A1
	MOVB	*A1,A10
	RETS
	
*LEFT AIMING TABLE	
*FOR ANGLES 0-31
AIMLTAB
	.BYTE	1,2,2,3,3,4,4,5		
	.BYTE	5,5,5,5,5,5,5,5
	.BYTE	5,5,5,5,5,0,0,0
	.BYTE	0,0,0,0,0,0,0,1
*
*AIM RT GUN
*A11=PLAYER TO FOLLOW
*A8=BOSS DATA STRUCT
*RET A10 = GUN DIRECTION 0-5
AIMRT
	MOVI	70,A0 		;X OFFSET
	MOVI	82,A1		;Y OFFSET
	CALLR	GETQUAD		;RETURNS ANGLE 0-63	IN A1
	SRL	1,A1
	SLL	3,A1
	ADDI	AIMRTAB,A1
	MOVB	*A1,A10
	RETS
	
*RIGHT AIMING TABLE	
*FOR ANGLES 0-31
AIMRTAB
	.BYTE	1,0,0,0,0,0,0,0
	.BYTE	0,0,0,0,0,0,0,0
	.BYTE	5,5,5,5,5,5,5,5
	.BYTE	5,4,4,3,3,2,2,1
*
*COUNT UP CUMULATIVE DAMAGE TO HEAD
*RETURNS DAMAGE TOTAL IN A0
*
GETDMGE
	MMTM	SP,A1,A8
	CLR	A0
	MOVI	FACSTOR,A8	
GETDML
	MOVE	*A8,A1,L
	JREQ	GETDMX
	MOVE	*A8(DAMAGEL),A1,W
	ADD	A1,A0	
	ADDI	>40,A8
	JRUC	GETDML
GETDMX	
	MMFM	SP,A1,A8
	RETS
*
*STICK TOGETHER PROCESS
*
STICKP
	MOVI	FACSTOR,A8
	CALLR	STICKER
	SLOOP	6,STICKP
*
*HOLD BIG GUY TOGETHER
*A8=BIG GUY DATA BLOCK
*FOLLOW FIRST PIECE
STICKER
	MMTM	SP,A12,A13
	MOVE	A8,A9
	MOVE	*A8,A10,L		;FIRST PIECE INDEX
	MOVE	*A10(OIMG),A1,L
	MOVE	*A10(OSIZE),A2,L
	MOVE	*A10(OFLAGS),A4,W
	CALLA	GANIOF			;GET X Y ANI OFFSET
	MOVE	A6,A12			;SAVE X ANIOFF 
	MOVE	A7,A13			;SAVE Y ANIOFF
	JRUC	STICK2
STICKL
	MOVE	*A8(OIMG),A1,L
	MOVE	*A8(OSIZE),A2,L
	MOVE	*A8(OFLAGS),A4,W
	CALLA	GANIOF			;GET X Y ANI OFFSET

	MOVE	*A8(OID),A0,W		;GET OID
	ZEXT	A0,W

	BTST	B_FLIPH,A4   		;FLIP KLUDGE ?
	JREQ	STICK1			;NO...
	ADDI	>20000,A6		;ADJUST FLIP KLUDGE

	CMPI	CLSENMY|TYPFACE|SUBHD,A0
	JRNE	STICK1			;DONT FUCK WITH LITTLE HEAD
	SUBI	>10000,A6
STICK1
	CMPI	CLSNEUT|SUBSHAD,A0	;ADJUST SHADOW OFFSET
	JRNE	STICK10
	MOVE	@FACEZ,A0,L
	ADD	A0,A7
STICK10
	MOVE	*A10(OXVAL),A0,L
	ADD	A12,A0	
	SUB	A6,A0
	MOVE	A0,*A8(OXVAL),L
	MOVE	*A10(OYVAL),A1,L
	ADD	A13,A1
	SUB	A7,A1
	MOVE	A1,*A8(OYVAL),L
STICK2
	ADDI	>40,A9
	MOVE	*A9,A8,L		;GET NEXT INDEX
	JRNE	STICKL			;DONE STICKING
	MMFM	SP,A12,A13
	RETS
*
*STUFF NEW VELOCITY INTO BOSS OBJECT
*A0=XVEL		
*A1=YVEL
*A8=POINTER TO OBJECT POINTER BLOCK
STFVEL
	MMTM	SP,A2,A8
STFVELP
	MOVE	*A8,A2,L
	JREQ	STFVELX		;ALL DONE, NULL POINTER
	MOVE	A0,*A2(OXVEL),L
	MOVE	A1,*A2(OYVEL),L
	ADDI	>40,A8
	JRUC	STFVELP
STFVELX
	MMFM	SP,A2,A8
	RETS
*
*ADD ZVEL INTO BOSS OBJECT
*A0=Z DELTA
*A8=POINTER TO OBJECT POINTER BLOCK
STFZVEL
	MMTM	SP,A2,A8
STFZVELP
	MOVE	*A8,A2,L
	JREQ	STFZVELX		;ALL DONE, NULL POINTER
	MOVE	*A2(OID),A1,W
	CMPI	CLSNEUT|SUBSHAD,A1
	JREQ	STFZVLP
	MOVE	*A2(OYVAL),A1,L
	ADD	A0,A1
	MOVE	A1,*A2(OYVAL),L
STFZVLP
	ADDI	>40,A8
	JRUC	STFZVELP
STFZVELX
	MMFM	SP,A2,A8
	RETS
*	
*STUFF NEW POSITION IN BOSS OBJECT
*
*A0=XPOS
*A1=YPOS
*A8=POINTER TO OBJECT POINTER BLOCK
*
STFPOS
	MMTM	SP,A2,A8
STFPOSP
	MOVE	*A8,A2,L
	JREQ	STFPOSX		;ALL DONE, NULL POINTER
	MOVE	A0,*A2(OXPOS),L
	MOVE	A1,*A2(OYPOS),L
	ADDI	>40,A8
	JRUC	STFPOSP
STFPOSX
	MMFM	SP,A2,A8
	RETS
*
*ANISEQ
*A9=ANI SEQ TABLE ADDR
*A10=SLEEP TIME
*A11=FLAG
ANISEQ
	MOVE	A13,*A11,L      ;SET FLAG
ANISEQL
	MOVE	A10,A0
	JSRP	ANIBSEQ
	JRNC	ANISEQL
	CLR	A0
	MOVE	A0,*A11,L	;CLEAR FLAG
	DIE
*RANDOM ANIMATOR
*A1=ANIMATION TABLE
*A2=ANIMATION FLAG
*
RANDSEQ
	MMTM	SP,A0,A8,A9,A10,A11
	MOVE	A2,A11		;SAVE FLAG
	MOVE	@RAND,A0,W
	ZEXT	A0,W		;GET RID OF SIGN EXTEND
	SRL	12,A0
	SLL	5,A0
	ADD 	A1,A0
	MOVE	*A0+,A8,L
	CREATE	TYPFACE|SUBANI,ANISEQQ
	MOVE	A0,*A11,L	;SET FLAG FOR PROCESS NOW
	MMFM	SP,A0,A8,A9,A10,A11
	RETS
*
*ANISEQQ
*A8=SCRIPT INDEX
*A11=FLAG
*RETURNS
ANISEQQ
	MOVE	A13,*A11,L      ;SET FLAG
ANISEQQL0
	MOVE	*A8+,A9,L
	JREQ	ANISEQQX
	MOVE	*A8+,A10,L
ANISEQQL
	MOVE	A10,A0
	JSRP	ANIBSEQ
	JRNC	ANISEQQL
	JRUC	ANISEQQL0	
ANISEQQX
	CLR	A0
	MOVE	A0,*A11,L	;CLEAR FLAG
	DIE
;	RETP
;*ANILP
;*A9=ANI SEQ TABLE ADDR
;*A10=SLEEP TIME
;*A11=LOOP COUNT
;ANILP
;	MMTM	A12,A9
;ANILPL
;	MOVE	A10,A0
;	JSRP	ANIBSEQ
;	JRNC	ANILPL
;	MMFM	A12,A9
;	DEC	A11
;	JRNE	ANILP
;	RETP
*
*ANIMATE BOSS MONSTER FRAME
*A0=SLEEP TIME, 0= NO SLEEP
*A8=POINTER TO OBJECT POINTER BLOCK
*A9=ANIMATION SEQUENCE ADDR
*RET CS IF SEQ ENDED
ANIBSEQ
	MOVE	*A9,A1,W  	;NULL FRAME?
	JREQ	ANIBSQX		;YES, ITS ALL OVER

	CALLR	ANIBOSS
	CALLA	PRCSLP
	CLRC
	RETP
ANIBSQX
	SETC
	RETP
*
*ANIMATE BOSS MONSTER
*A9=ANIMATION TABLE ADDR
*RETS A9 POINTING TO NEXT FRAME
ANIBOSS
	MMTM	SP,A0,A1,A2,A3,A4,A7,A8,A10,A11
	MOVI	FACSTOR,A8		;GET OBJECT BLOCK
	MOVE	A8,A10
ANIBSL
	MOVB	*A9,A7			;GET PART NUMBER
	ADDK	8,A9			;INCREMENT POINTER
	DEC	A7
	SLL	6,A7
	ADD	A10,A7
	MOVE	*A7,A8,L		;GET OBJECT POINTER
	MOVB	*A9,A1			;GET NEW FRAME NUMBER
	ABS	A1
	MOVB	A1,*A7(AFRAME)

	DEC	A1			;ELIMINATE 0 CASE
	MOVI	RBANITB1-RBANITB,A2
	MPYU	A2,A1			;ADJUST FOR LENGTH OF ENTRY
	ADDI	RBANITB,A1    		;ADD TABLE BASE
	MOVE	*A7(DAMAGEL),A3,W	;GET DAMAGE LEVEL
	CMPI	47,A3
	JRLS	ANIBSL1
	MOVI	47,A3
ANIBSL1
	SRL	4,A3
	SLL	5,A3			;ADJUST FOR LONG WORD
	ADD	A3,A1
	MOVE	*A1,A1,L		;GET OIMG
***********PALETTE CHECK STUFF
	MOVE	*A8(OIMG),A4,L
	MOVE	*A4(>60),A4,L	 	;GET PALETTE
	MOVE	*A1(>60),A0,L		;PALETTE CHANGE?
	CMP	A0,A4
	JREQ	ANIBSL2
	CALLA	GETFPAL
	MOVE	A0,*A8(OPAL),W		;STORE NEW PALETTE
ANIBSL2
	MOVE	*A8(OFLAGS),A4,W	;GET FLAGS
	CALLA	ANI			;ANIMATE IT
	ADDK	8,A9			;INCREMENT POINTER
	MOVB	*A9(-8),A1		;WAS LAST ENTRY NEG?
	JRNN	ANIBSL			;NOPE, STILL GOING
ANIBDON
	MMFM	SP,A0,A1,A2,A3,A4,A7,A8,A10,A11
	RETS
*
*GET A RANDOM PLAYER 1 OR 2
*RETURNS A0 WITH RANDOM PLAYER INDEX
GETPLYR
	CALLA	RANDOM
	JRN	GETPLYR2
	MOVE	@PLYROBJS,A0,L
	JRNE	GETPLYRX
	MOVE	@PLYROBJS+32,A0,L
GETPLYRX
	RETS
GETPLYR2	
	MOVE	@PLYROBJS+32,A0,L
	JRNE	GETPLYRX
	MOVE	@PLYROBJS,A0,L
	RETS
*
*EYE COLOR CYCLER
*
EYECOL
	MOVI	>3B0001,A8     ;A8=  [COLOR # TO START AT,# TO CYCLE]
	MOVI	ORCP1,A9       ;A9=  PAL NAME TO CYCLE
	MOVI	EYECOLTB,A10   ;A10= TABLE TO CYCLE IT WITH
	MOVI	5,A11	       ;A11= RATE OF CYCLE IN TICKS
	JAUC	CYCLE_TABLE
EYECOLTB
	.WORD	>7C00,>7FE0,>1F,>03E0,>8000
*
*ANIMATION SCRIPTS
*
*ANIMATION NUMBERS
MOUTHCL	.SET	1	;MOUTH CLOSED
MOUTHOP1	.SET	2	;MOUTH OPENING
MOUTHOP2	.SET	3	
MOUTHOP3	.SET	4
EYEBLD	.SET	5
EYECNT	.SET	6      	;EYES CENTER
EYECL1	.SET	7	;EYES CLOSING
EYECL2	.SET	8
EYEBUG	.SET	9	;BUG EYES
EYERT1	.SET	10	;EYES RIGHT
EYERT2	.SET	11
EYELFT1	.SET	12 	;EYES LEFT
EYELFT2	.SET	13
SIDE	.SET	14
SHOULDER	.SET	15
ARMDN	.SET	16	;ARM DOWN
ARMDN1	.SET	17	;ARM DOWN RECOIL
ARMDN2	.SET	18
ARML1	.SET	19	;ARM ROTATING TO LEFT
ARML2	.SET	20
ARML3	.SET	21
ARML4	.SET	22
ARMR1	.SET	23	;ARM ROTATING TO RIGHT
HDST	.SET	24	;LITTLE HEAD STRAIGHT
HDFROWN	.SET	25
HDROAR	.SET	26
HDOOOH	.SET	27
HDGRIN	.SET	28
HDL1NT	.SET	29	;LIL HEAD SLIGHT LEFT W/TEETH
HDL1T	.SET	30
HDL2NT	.SET	31
HDL2T	.SET	32
HDL3	.SET	33
HDL4	.SET	34
HDL5	.SET	35
;SHD1	.SET	36
;SHD2	.SET	37
NUSHD	.SET	36
NULLOBJ	.SET	38
TNG1	.SET	39
TNG2	.SET	40
TNG3	.SET	41
TNG4	.SET	42
TNG5	.SET	43
TNGL	.SET	44
TNGR	.SET	45
NULLOBJ1	.SET	46
ARMDNPT	.SET	47
ARML1PT	.SET	48
ARML2PT	.SET	49
ARML3PT	.SET	50
ARML4PT	.SET	51
ARMR1PT	.SET	52
FLMM1	.SET	53
FLMM2	.SET	54
HDRIPL	.SET	55
TOPRIPL	.SET	56
NULLFLM	.SET	57
BASERIPA	.SET	58
LSTANI	.SET	58
*
*PART NUMBERS
*
LFTMTH	.SET	1
RTMTH	.SET	2
LFTSID	.SET	3
RTSID	.SET	4
LFTEYE 	.SET	5
RTEYE	.SET	6
LSHLD	.SET	7
RSHLD	.SET    8
LILHD	.SET	9 	;LIL HEAD
LFTARM	.SET	10
RTARM	.SET	11
LILHDF	.SET	14	;FLIPPED LIL HEAD
TONGUE	.SET	15
LFLAME	.SET	16
RFLAME	.SET	17
*
*ANIANITB
*SEQ(32),TIME(32)
*
HDSEQTB
	.LONG	SHAKITUP,SHAKITUP,SHAKITUP,SHAKITUP
	.LONG	GRINNER,GRINNER,GRINNER,GRINNER
	.LONG	FROWNER,FROWNER,FROWNER,FROWNER
	.LONG	OOOHER,OOOHER,OOOHER,OOOHER
HDDAMTB
	.LONG	FROWNER,FROWNER,FROWNER,FROWNER
	.LONG	OOOHER,OOOHER,OOOHER,OOOHER
	.LONG	GRIMMR,GRIMMR,GRIMMR,GRIMMR
	.LONG	OOOHER,OOOHER,OOOHER,OOOHER
IDAMTB
	.LONG	BUGGER,BUGGER,BUGGER,BUGGER
	.LONG	BUGGER,BUGGER,BUGGER,BUGGER
	.LONG	BLINKER,BLINKER,BLINKER,BLINKER
	.LONG	BLINKER,BLINKER,BLINKER,BLINKER
SHAKITUP
	.LONG	HDSHAKA,4
	.LONG	HDSHAKA,4
	.LONG	HDSHAKA,4
	.LONG	HDSHAKA,4,0
GRINNER
	.LONG	HDGRINA,15
	.LONG	HDGRINA,15
	.LONG	HDGRINA,15,0
FROWNER
	.LONG	HDFRWNA,10
	.LONG	HDFRWNA,10
	.LONG	HDFRWNA,10,0
OOOHER	
	.LONG	HDOOOHA,30
	.LONG	HDOOOHA,20,0
GRIMMR
	.LONG	HDGRIM,1
	.LONG	HDGRIM,1
	.LONG	HDGRIM,1
	.LONG	HDGRIM,1,0
BUGGER
	.LONG	EYESBLNK,1
	.LONG	EYESBUG,15
	.LONG	EYESBLNK,1
	.LONG	EYESBUG,15,0
BLINKER
	.LONG	EYESBLNK,2
	.LONG	EYESBLNK,2
	.LONG	EYESBLNK,2
	.LONG	EYESBLNK,2
	.LONG	EYESBLNK,2
	.LONG	EYESBLNK,2,0
HDANITB
	.LONG	HDSHAKA,8,HDGRINA,15,HDOOOHA,10,HDFRWNA,30
	.LONG	HDSHAKA,8,HDGRINA,15,HDOOOHA,10,HDFRWNA,30
	.LONG	HDSHAKA,5,HDSHAKA,5,HDSHAKA,3,HDSHAKA,8
	.LONG	HDSHAKA,10,HDROTA,2,HDROTA,10,HDROTA,8
MANITB
	.LONG	TNGSTIKA,7,BITE,10,CHOMP3,2,CHOMP2,3
	.LONG	TNGSTIKA,7,BITE,10,CHOMP3,5,CHOMP2,1
	.LONG	TNGSTIKA,7,BITE,10,CHOMP3,5,CHOMP2,3
	.LONG	TNGSTIKA,7,BITE,10,TNGSTIKA,7,BITE,10
IANITB
	.LONG	EYESCNT,10,EYESLT3,30,EYESBLNK,4,EYESRT1,30
	.LONG	EYESCNT,10,EYESLT3,30,EYESBLNK,4,EYESRT1,30
	.LONG	EYESCNT,10,EYESLT3,30,EYESBLNK,4,EYESRT1,30
	.LONG	EYESCNT,10,EYESLT3,30,EYESBLNK,4,EYESRT1,30

;	.LONG	HDSHAKA,28,HDSHAKA,28,HDSHAKA,28,HDSHAKA,28
	.LONG	BITE,8,HDROTA,15,EYESCNT,10,EYESBUG,30
	.LONG	ARMROTA,10,TNGSTIKA,7,BITE,10,EYESBUG,10
	.LONG	HDSHAKA,28,HDGRINA,15,HDOOOHA,10,HDFRWNA,30
*
*ANIMATION TABLE
*PART #, ANI FRAME
*NEG=END OF FRAME
*
*FLAME ANIMATION
*
LOFLAMR
	.BYTE	LFLAME,FLMM1,RFLAME,-FLMM1
HIFLAMR
	.BYTE	LFLAME,FLMM2,RFLAME,-FLMM2
NOFLAMR	
	.BYTE	LFLAME,NULLFLM,RFLAME,-NULLFLM
*
*OPEN MOUTH
*
BITE
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP3,RTMTH,-MOUTHOP3
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
BITECL
	.BYTE	LFTMTH,MOUTHCL,RTMTH,-MOUTHCL
	.WORD	0
CHOMP3
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP3,RTMTH,-MOUTHOP3
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHCL,RTMTH,-MOUTHCL
CHOMP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP3,RTMTH,-MOUTHOP3
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHCL,RTMTH,-MOUTHCL
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP3,RTMTH,-MOUTHOP3
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHCL,RTMTH,-MOUTHCL
	.WORD	0
*
*EYE ANIMATIONS
*
EYESBLNK
	.BYTE	LFTEYE,EYECL1,RTEYE,-EYECL1	;EYES HALF CLOSED
	.BYTE	LFTEYE,EYECL2,RTEYE,-EYECL2	;EYES CLOSED
	.BYTE	LFTEYE,EYECL2,RTEYE,-EYECL2	;EYES CLOSED
	.BYTE	LFTEYE,EYECL1,RTEYE,-EYECL1	;EYES HALF CLOSED
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
	.WORD	0
EYESCNT
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
EYESLFT1
	.BYTE	LFTEYE,EYELFT1,RTEYE,-EYERT1	;EYES LEFT
EYESLFT2
	.BYTE	LFTEYE,EYELFT2,RTEYE,-EYERT2	;EYES LEFT EXTREME
	.BYTE	LFTEYE,EYELFT1,RTEYE,-EYERT1	;EYES LEFT
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
EYESRT1
	.BYTE	LFTEYE,EYERT1,RTEYE,-EYELFT1	;EYES RIGHT
EYESRT2
	.BYTE	LFTEYE,EYERT2,RTEYE,-EYELFT2	;EYES RIGHT EXTREME
	.BYTE	LFTEYE,EYERT1,RTEYE,-EYELFT1	;EYES RIGHT
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
	.WORD	0
EYESLT3
	.BYTE	LFTEYE,EYELFT1,RTEYE,-EYERT1	;EYES LEFT
	.BYTE	LFTEYE,EYELFT2,RTEYE,-EYERT2	;EYES LEFT EXTREME
	.BYTE	LFTEYE,EYELFT1,RTEYE,-EYERT1	;EYES LEFT
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
	.WORD	0



*BUGEYES
EYESBUG
	.BYTE	LFTEYE,EYEBUG,RTEYE,-EYEBUG	;EYES BUGGED
	.BYTE	LFTEYE,EYECNT,RTEYE,-EYECNT	;EYES CENTERED
	.WORD	0
*LITTLE HEAD BLOW
HDBLOA
	.BYTE	LILHD,HDRIPL,LILHDF,-NULLOBJ
*SHOULDERS BLOW
TOPBLOA
	.BYTE	LILHD,NULLOBJ,LILHDF,NULLOBJ
	.BYTE	LSHLD,TOPRIPL,RSHLD,-TOPRIPL

*TOTAL BLOW
TOTBLOA
	.BYTE	LILHD,NULLOBJ,LILHDF,NULLOBJ
	.BYTE	LSHLD,NULLOBJ,RSHLD,NULLOBJ
	.BYTE	LFTARM,NULLOBJ,RTARM,NULLOBJ
	.BYTE	LFTEYE,NULLOBJ,RTEYE,NULLOBJ
	.BYTE	LFTSID,NULLOBJ,RTSID,NULLOBJ
	.BYTE	TONGUE,NULLOBJ
	.BYTE	RFLAME,NULLOBJ,LFLAME,NULLOBJ
	.BYTE	LFTMTH,BASERIPA,RTMTH,-BASERIPA
*KILL FLAMES
FLAMKILA
	.BYTE	RFLAME,NULLOBJ,LFLAME,-NULLOBJ

*LITTLE HEAD ROTATE
HDROTA
HEAD30
	.BYTE	LILHD,HDL1NT,LILHDF,-NULLOBJ
HEAD60
	.BYTE	LILHD,HDL2NT,LILHDF,-NULLOBJ
HEAD90
	.BYTE	LILHD,HDL3,LILHDF,-NULLOBJ
HEAD135
	.BYTE	LILHD,HDL4,LILHDF,-NULLOBJ
HEAD225
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL4
HEAD270
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL3
HEAD300
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL2NT
HEAD330
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL1NT
HEAD0
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
*HEAD SHAKE
HDSHAKA
	.BYTE	LILHD,HDL1T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL2T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL3,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL3,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL3,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL2T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL1T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL1NT
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL2NT
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL3
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL3
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL3
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL2NT
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL1NT
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
HDGRIM
	.BYTE	LILHD,HDL1T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL2T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL3,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL2T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDL1T,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL1T
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL2T
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL3
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL2T
	.BYTE	LILHD,NULLOBJ,LILHDF,-HDL1T
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
*HEAD GRIN	
HDGRINA
	.BYTE	LILHD,HDGRIN,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
*HEAD OOOH
HDOOOHA
	.BYTE	LILHD,HDOOOH,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
*HEAD FROWN
HDFRWNA
	.BYTE	LILHD,HDFROWN,LILHDF,-NULLOBJ
	.BYTE	LILHD,HDST,LILHDF,-NULLOBJ
	.WORD	0
*ARM ROTATE
ARMROTA
	.BYTE	LFTARM,ARMDN1,RTARM,-ARMDN1
	.BYTE	LFTARM,ARMDN2,RTARM,-ARMDN2
	.BYTE	LFTARM,ARMDN1,RTARM,-ARMDN1
	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
;ROTAB
;	.BYTE	LFTARM,ARMR1,RTARM,-ARMR1
;	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
;	.BYTE	LFTARM,ARML1,RTARM,-ARML1
;	.BYTE	LFTARM,ARML2,RTARM,-ARML2
;	.BYTE	LFTARM,ARML3,RTARM,-ARML3
;	.BYTE	LFTARM,ARML4,RTARM,-ARML4
;	.BYTE	LFTARM,ARML3,RTARM,-ARML3
;	.BYTE	LFTARM,ARML2,RTARM,-ARML2
;	.BYTE	LFTARM,ARML1,RTARM,-ARML1
;	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
;	.BYTE	LFTARM,ARMDN1,RTARM,-ARMDN1
;	.BYTE	LFTARM,ARMDN2,RTARM,-ARMDN2
;	.BYTE	LFTARM,ARMDN1,RTARM,-ARMDN1
;	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
;	.WORD	0
*LEFT GUN POSTION SEEK TABLE
LGSKTAB
	.BYTE	LFTARM,-ARMR1
	.BYTE	LFTARM,-ARMDN
	.BYTE	LFTARM,-ARML1
	.BYTE	LFTARM,-ARML2
	.BYTE	LFTARM,-ARML3
	.BYTE	LFTARM,-ARML4
*RIGHT GUN POSTION SEEK TABLE
RGSKTAB
	.BYTE	RTARM,-ARMR1
	.BYTE	RTARM,-ARMDN
	.BYTE	RTARM,-ARML1
	.BYTE	RTARM,-ARML2
	.BYTE	RTARM,-ARML3
	.BYTE	RTARM,-ARML4
*
*LEFT ARM FIRE POS. 1
*
LARMF1
	.BYTE	LFTARM,-ARMDN1
	.BYTE	LFTARM,-ARMDN
	.WORD	0
*
*LEFT ARM FIRE POS. 2
*
LARMF2
	.BYTE	LFTARM,-ARML1PT
	.BYTE	LFTARM,-ARML1
	.WORD	0

*
*LEFT ARM FIRE POS. 3
*
LARMF3
	.BYTE	LFTARM,-ARML2PT
	.BYTE	LFTARM,-ARML2
	.WORD	0
*
*LEFT ARM FIRE POS. 4
*
LARMF4
	.BYTE	LFTARM,-ARML3PT
	.BYTE	LFTARM,-ARML3
	.WORD	0
*
*LEFT ARM FIRE POS. 5
*
LARMF5
	.BYTE	LFTARM,-ARML4PT
	.BYTE	LFTARM,-ARML4
	.WORD	0
*
*LEFT ARM FIRE POS. 6
*
LARMF6
	.BYTE	LFTARM,-ARMR1PT
	.BYTE	LFTARM,-ARMR1
	.WORD	0
*
*RT ARM FIRE POS. 1
*
RARMF1
	.BYTE	RTARM,-ARMDN1
	.BYTE	RTARM,-ARMDN
	.WORD	0
*
*RT ARM FIRE POS. 2
*
RARMF2
	.BYTE	RTARM,-ARML1PT
	.BYTE	RTARM,-ARML1
	.WORD	0
*
*RT ARM FIRE POS. 3
*
RARMF3
	.BYTE	RTARM,-ARML2PT
	.BYTE	RTARM,-ARML2
	.WORD	0
*
*RT ARM FIRE POS. 4
*
RARMF4
	.BYTE	RTARM,-ARML3PT
	.BYTE	RTARM,-ARML3
	.WORD	0
*
*RT ARM FIRE POS. 5
*
RARMF5
	.BYTE	RTARM,-ARML4PT
	.BYTE	RTARM,-ARML4
	.WORD	0
*
*RT ARM FIRE POS. 6
*
RARMF6
	.BYTE	RTARM,-ARMR1PT
	.BYTE	RTARM,-ARMR1
	.WORD	0
*
*ARM FIRE SEQUENCE
*
ARMFIRE
	.BYTE	LFTARM,ARMR1,RTARM,-ARMR1
	.BYTE	LFTARM,ARMR1PT,RTARM,-ARMR1PT
	.BYTE	LFTARM,ARMR1,RTARM,-ARMR1
	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
	.BYTE	LFTARM,ARMDNPT,RTARM,-ARMDNPT
	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
	.BYTE	LFTARM,ARML1,RTARM,-ARML1
	.BYTE	LFTARM,ARML1PT,RTARM,-ARML1PT
	.BYTE	LFTARM,ARML1,RTARM,-ARML1
	.BYTE	LFTARM,ARML2,RTARM,-ARML2
	.BYTE	LFTARM,ARML2PT,RTARM,-ARML2PT
	.BYTE	LFTARM,ARML2,RTARM,-ARML2
	.BYTE	LFTARM,ARML3,RTARM,-ARML3
	.BYTE	LFTARM,ARML3PT,RTARM,-ARML3PT
	.BYTE	LFTARM,ARML3,RTARM,-ARML3
	.BYTE	LFTARM,ARML4,RTARM,-ARML4
	.BYTE	LFTARM,ARML4PT,RTARM,-ARML4PT
	.BYTE	LFTARM,ARML4,RTARM,-ARML4
	.BYTE	LFTARM,ARML3,RTARM,-ARML3
	.BYTE	LFTARM,ARML2,RTARM,-ARML2
	.BYTE	LFTARM,ARML1,RTARM,-ARML1
	.BYTE	LFTARM,ARMDN,RTARM,-ARMDN
	.WORD	0
*TONGUE STICK OUT
TNGSTIKA
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP3,RTMTH,-MOUTHOP3
	.BYTE	TONGUE,-TNG1
	.BYTE	TONGUE,-TNG2
	.BYTE	TONGUE,-TNG3
	.BYTE	TONGUE,-TNG4
	.BYTE	TONGUE,-TNG5
	.BYTE	TONGUE,-TNGL
	.BYTE	TONGUE,-TNGR
	.BYTE	TONGUE,-TNGL
	.BYTE	TONGUE,-TNGR
	.BYTE	TONGUE,-TNG5
	.BYTE	TONGUE,-TNG4
	.BYTE	TONGUE,-TNG3
	.BYTE	TONGUE,-TNG2
	.BYTE	TONGUE,-TNG1
	.BYTE	TONGUE,-NULLOBJ1
	.BYTE	LFTMTH,MOUTHOP2,RTMTH,-MOUTHOP2
	.BYTE	LFTMTH,MOUTHOP1,RTMTH,-MOUTHOP1
	.BYTE	LFTMTH,MOUTHCL,RTMTH,-MOUTHCL
	.WORD	0
*
*TABLE OF FROGFACE DAMAGE
*0-255; 0=NULL
*FLAGS(16), OIMG(32) DAMAGE LEVEL 1-3
*
RBANITB
* 1 MOUTH CLOSED
	.LONG	OMTH1,OMTH1A,OMTH1B
RBANITB1
* 2 MOUTH SLIGHTLY OPEN
	.LONG	OMTH2,OMTH2A,OMTH2B
* 3 MOUTH MORE OPEN
	.LONG	OMTH3,OMTH3A,OMTH3B
* 4 MOUTH MORE OPEN
	.LONG	OMTH4,OMTH4A,OMTH4B
* 5 BLOODY EYE
	.LONG	OEYES1C,OEYES1C,OEYES1C
* 6 EYE CENTERED
	.LONG	OEYES1,OEYES1A,OEYES1C
* 7 EYE HALF CLOSED
	.LONG	OEYES1A,OEYES1A,OEYES1C
* 8 EYE CLOSED
	.LONG	OEYES1B,OEYES1A,OEYES1C
* 9 EYE BUGGED OPEN CENTERED
	.LONG	OEYES2,OEYES1A,OEYES1C
* 10 EYE HALF RIGHT
	.LONG	OEYES3,OEYES1A,OEYES1C
* 11 EYE RIGHT
	.LONG	OEYES4,OEYES1A,OEYES1C
* 12 EYE HALF LEFT
	.LONG	OEYES3A,OEYES1A,OEYES1C
* 13 EYE LEFT
	.LONG	OEYES4A,OEYES1A,OEYES1C
* 14 SIDE OF CHEEK
	.LONG	SIDEPC,SIDEPC,SIDEPC
* 15 SHOULDER STRAP
	.LONG	SHLDR,SHLDR,SHLDR
* 16 ARM DOWN
	.LONG	OARM1,OARM1,ARMRIP
* 17 ARM DOWN PARTIAL RECOIL
	.LONG	OARM1A,OARM1A,ARMRIP
* 18 ARM DOWN FULL RECOIL
	.LONG	OARM1B,OARM1B,ARMRIP
* 19 ARM SLIGHT ANGLE LEFT	 
	.LONG	OARM2,OARM2,ARMRIP
* 20 ARM MORE ANGLE LEFT	 
	.LONG	OARM3,OARM3,ARMRIP
* 21 ARM EVEN MORE ANGLE LEFT	 
	.LONG	OARM4,OARM4,ARMRIP
* 22 ARM FULL LEFT HORIZONTAL	 
	.LONG	OARM5,OARM5,ARMRIP
* 23 ARM SLIGHT ANGLE RIGHT	 
	.LONG	OARM6,OARM6,ARMRIP
* 24 LITTLE HEAD STRAIGHT FACE
	.LONG	ORCHD1,ORCHD1,ORCHD1
* 25 LITTLE HEAD FROWN FACE
	.LONG	ORCHD1A,ORCHD1A,ORCHD1A
* 26 LITTLE HEAD ROAR FACE
	.LONG	ORCHD1B,ORCHD1B,ORCHD1B
* 27 LITTLE HEAD OOOOHHH FACE
	.LONG	ORCHD1C,ORCHD1C,ORCHD1C
* 28 LITTLE HEAD TOOTHY GRIN FACE
	.LONG	ORCHD1D,ORCHD1D,ORCHD1D
* 29 LITTLE HEAD SLIGHTLY LEFT FACE (NO TEETH)
	.LONG	ORCHD2,ORCHD2,ORCHD2
* 30 LITTLE HEAD SLIGHTLY LEFT FACE (TEETH)
	.LONG	ORCHD2A,ORCHD2A,ORCHD2A
* 31 LITTLE HEAD 45 LEFT FACE (NO TEETH)
	.LONG	ORCHD3,ORCHD3,ORCHD3
* 32 LITTLE HEAD 45 LEFT FACE (TEETH)
	.LONG	ORCHD3A,ORCHD3A,ORCHD3A
* 33 LIL HEAD 60
	.LONG	ORCHD4,ORCHD4,ORCHD4
* 34 LIL HEAD 90
	.LONG	ORCHD5,ORCHD5,ORCHD5
* 35 LIL HEAD 135
	.LONG	ORCHD6,ORCHD6,ORCHD6
* 36 SHADOW
	.LONG	NUSHAD,NUSHAD,NUSHAD
* 37 SIDE SHADOW
	.LONG	NULO,NULO,NULO		;OSHAD2,OSHAD2,OSHAD2
* 38 NULL OBJECT
	.LONG	NULO,NULO,NULO
* 39 TONGUE SMALLEST
	.LONG	TUNG1D,TUNG1D,TUNG1D
* 40 TONGUE NEXT SMALLEST
	.LONG	TUNG1C,TUNG1C,TUNG1C
* 41 TONGUE NEXT SMALLEST
	.LONG	TUNG1B,TUNG1B,TUNG1B
* 42 TONGUE NEXT SMALLEST
	.LONG	TUNG1A,TUNG1A,TUNG1A
* 43 TONGUE FULL SIZE
	.LONG	TUNG1,TUNG1,TUNG1
* 44 TONGUE FULL SIZE CURVE TO LEFT
	.LONG	TUNG2,TUNG2,TUNG2
* 45 TONGUE FULL SIZE CURVE TO RIGHT
	.LONG	TUNG3,TUNG3,TUNG3
* 46 TONGUE NULL
	.LONG	NULO1,NULO1,NULO1
* 47 ARM1 FIRE ANI
	.LONG	OARM1PT,OARM1PT,ARMRIP
* 48 ARM2 FIRE ANI
	.LONG	OARM2PT,OARM2PT,ARMRIP
* 49 ARM3 FIRE ANI
	.LONG	OARM3PT,OARM3PT,ARMRIP
* 50 ARM4 FIRE ANI
	.LONG	OARM4PT,OARM4PT,ARMRIP
* 51 ARM5 FIRE ANI
	.LONG	OARM5PT,OARM5PT,ARMRIP
* 52 ARM6 FIRE ANI
	.LONG	OARM6PT,OARM6PT,ARMRIP
* 53 FLAME 1
	.LONG	ORCFLM1,ORCFLM1,ORCFLM1
* 54 FLAME 2
	.LONG	ORCFLM2,ORCFLM2,ORCFLM2
* 55 HEAD RIPPED LEFT
	.LONG	HDRIP,HDRIP,HDRIP
* 56 TOP (SHOULDERS) RIPPED OFF
	.LONG	TOPRIP,TOPRIP,TOPRIP
* 57 NULL FLAME
	.LONG	NULFLM,NULFLM,NULFLM
* 58 BASE RIP
	.LONG	BASERIP,BASERIP,BASERIP
*
*INITIALIZE ROBOT BOSS TABLE
*
RBITAB:
*PART 1 LEFT MOUTH
	.WORD	DMAWNZ+M_PIXSCAN	  	;FLAGS
	.WORD	CLSENMY|TYPFACE|SUBMTHL 	;TYPE
	.WORD	MOUTHCL				;ANIMATION #
	.WORD	158				;OZPOS
*PART 2 RIGHT MOUTH
	.WORD	DMAWNZ+M_PIXSCAN+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBMTHR
	.WORD	MOUTHCL
	.WORD	158
*PART 3 LEFT SIDE PIECE
	.WORD	DMAWNZ+M_PIXSCAN
	.WORD	CLSENMY|TYPFACE|SUBSIDEL
	.WORD	SIDE
	.WORD	158
*PART 4 RT SIDE PIECE
	.WORD	DMAWNZ+M_PIXSCAN+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBSIDER
	.WORD	SIDE
	.WORD	158
*PART 5 LEFT EYE
	.WORD	DMAWNZ
	.WORD	CLSENMY|TYPFACE|SUBEL
	.WORD	EYECNT
	.WORD	159
*PART 6 RIGHT EYE
	.WORD	DMAWNZ+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBER
	.WORD	EYECNT
	.WORD	159
*PART 7 LEFT SHOULDER
	.WORD	DMAWNZ
	.WORD	CLSENMY|TYPFACE|SUBSHLDL
	.WORD	SHOULDER
	.WORD	161
*PART 8 RT SHOULDER
	.WORD	DMAWNZ+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBSHLDR
	.WORD	SHOULDER
	.WORD	161
*PART 9 LIL HEAD
	.WORD	DMAWNZ
	.WORD	CLSENMY|TYPFACE|SUBHD
	.WORD	HDST
	.WORD	161
*PART 10 LEFT ARM
	.WORD	DMAWNZ+M_PIXSCAN
	.WORD	CLSENMY|TYPFACE|SUBARML
	.WORD	ARMDN
	.WORD	160
*PART 11 RIGHT ARM
	.WORD	DMAWNZ+M_PIXSCAN+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBARMR
	.WORD	ARMDN
	.WORD	160
*PART 12 LEFT SHADOW
	.WORD	DMACNZ
	.WORD	CLSNEUT|SUBSHAD
	.WORD	NUSHD				;ANIMATION #
	.WORD	157				;OZPOS
*PART 13 RIGHT SHADOW
	.WORD	DMACNZ+M_FLIPH
	.WORD	CLSNEUT|SUBSHAD
	.WORD	NUSHD
	.WORD	157
;*PART 12 BOTTOM SHADOW
;	.WORD	DMAWNZ
;	.WORD	CLSNEUT
;	.WORD	SHD1
;	.WORD	157
;*PART 13 SIDE SHADOW
;	.WORD	DMAWNZ
;	.WORD	CLSNEUT
;	.WORD	SHD2
;	.WORD	157
*PART 14 LIL HEAD FLIPPED
	.WORD	DMAWNZ+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBHD
	.WORD	NULLOBJ				;INITIALLY NULL
	.WORD	160
*PART 15 TONGUE
	.WORD	DMAWNZ
	.WORD	CLSENMY|TYPFACE|SUBTUNG
	.WORD	NULLOBJ1				;INITIALLY NULL
	.WORD	160
*PART 16 LEFT FLAME
	.WORD	DMAWNZ
	.WORD	CLSENMY|TYPFACE|SUBFLAM
	.WORD	NULLFLM
	.WORD	158
*PART 17 RT FLAME
	.WORD	DMAWNZ+M_FLIPH
	.WORD	CLSENMY|TYPFACE|SUBFLAM
	.WORD	NULLFLM
	.WORD	158
*THIS IS THE END, MY ONLY FRIEND, THE END
	.WORD	0

*NULL OBJECT DEFINITION
*LIL HEAD NULL
NULO:
	.word	2,2,22,-8
	.long	>324A840
	.long	ORCP1
*TUNG NULL
NULO1:
	.word	2,2,11,-118
	.long	>324A840
	.long	RIPAL
*TUNG NULL
NULFLM:
	.word	2,2,11,-118
	.long	>324A840
	.long	BLUBOOM

	.END




