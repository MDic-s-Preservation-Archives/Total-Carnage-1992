 	.FILE	'LAYER.ASM'
	.TITLE	'TOTAL CARNAGE GAME PROGRAM'
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

;
; INITIATED:		 MARCH 28,1991
; MODIFIED:		 !
; SOFTWARE:		 MARK TURMELL
;
; COPYRIGHT (C) 1991 WILLIAMS ELECTRONICS GAMES, INC.
;
;
; GET THE SYSTEM STUFF

	.INCLUDE	"MPROC.EQU"		;MPROC EQUATES
	.INCLUDE	"DISP.EQU"		;DISPLAY PROC. EQUATES
	.INCLUDE	"\VIDEO\SYS\SYS.INC"	;Z UNIT SYSTEM EQUATES
	.INCLUDE	"\VIDEO\SYS\MACROS.HDR"	;MACROS DEFINITIONS
	.INCLUDE	"IMGTBL.GLO"
	.INCLUDE	"GAME.EQU"

;
;SOUNDS EXTERNAL
;
	.REF	ALTEXP4,MECH1,ALTXP1A,AGLSEXP,GLSEXP,MTING

;SYMBOLS EXTERNALLY DEFINED
;
	.REF	DO_DIFF2,RANDOM,INTO12,RANDPER,RANGRAND,SCRTSTG,FRANIM
	.REF	GET_WVADDR,HALT,ENEMY_RECT,PCNT,PIT2,DO_PUNISH,GPALOBJ
	.REF	SCORE_IT,FAME4,FAME2,FAME3,FLASHME,TBLST,FIREEXP,SHAKER
	.REF	GETFPAL,SCRADD2,FRANIM_DIE,P1DATA,P2DATA,WAVE
;
;SYMBOLS DEFINED IN THIS FILE
;
	.DEF	SPAWN_LYR,MAXLYR,LYR_CNT,KILL_LY,YKIL_RNG,SENDGRN,SENDGRN2
	.DEF	FLAME_LAY,YKIL_LAY,LAY_EXP
	.DEF	XVL,YVL,STRT_ALAY,BIGBLU
;
;UNINITIALIZED RAM DEFINITIONS
;
	.BSS	LYR_CNT,16		;TOTAL TANKS ON SCREEN  
	.BSS	TNK_DN,16
	.BSS	MAXLYR,16		;MAX NUMBER OF TANKS ALLOWED ON SCRN
	.BSS	PTMP,16
;
;EQUATES FOR THIS FILE
;
;TANK DATA STRUCTURE
;
CNTR	.EQU	PDATA			;DELAY FOR OID SWAPPING
SPDY	.EQU	PDATA+16
DIR	.EQU	PDATA+32		;UHW OBJECT DIRECTION
;MYPLYR		.EQU	PDATA+48	;UHW	PLAYER 1 OR 2 FIRED ME
SK_DIR	.EQU	PDATA+64		;SEEK DIR FOR SPIN
LEVEL	.EQU	PDATA+80		;DIFFICULTY LEVEL FOR SPEEDS ETC.
HSPD	.EQU	PDATA+96
H2SPD	.EQU	PDATA+128
VSPD	.EQU	PDATA+160
V2SPD	.EQU	PDATA+192
TOTMN	.EQU	PDATA+224		;UHW
WAY01	.EQU	PDATA+240		;UHW
ABSRB		.EQU	PDATA+256	;UHW
;ABSRB IS DEFINED IN FIEND.ASM
CFLAGS	.EQU	PDATA+272		;UHW	CONTROL FLAGS FOR OBJECT
MYPATRN	.EQU	PDATA+288		;UHL	PATTERN LIST ADDRESS
KPANTOBJ .EQU	PDATA+320		;UHL ANTENNA IMG PNTR
LAYTMR	.EQU	PDATA+352		;UHW
MRAM	.EQU	PDATA+368		;UHL 32*POINTER TO RAM LIST
KPMRAM	.EQU	PDATA+400		;UHL CALLA FREEOBJ WITH THIS LATER
DIS	.EQU	PDATA+432		;UHW	OBJECT DISTANCE COUNT
MYANT	.EQU	PDATA+448		;UHL	ANTENNA PROC POINTER

;
;
;ANTENNA DATA STRUCTURE
;

;
;EQUATES
;
HSPEED	.EQU	07000H			;INITIAL SPEED FOR MINE LAYER
HSPEED2	.EQU	HSPEED*2		;INITIAL SPEED FOR MINE LAYER
HITLAY	.EQU	20*30

	.TEXT


KILL_LY
;A8=MINE LAYER IMAGE TO SMART BOMB
;A9=P1DATA OR P2DATA FOR SCORE UPDATE
;SMART BOMB ENTRY
;ENTER HERE WITH SMART BOMB
	CREATE	0,HSMRT
	MOVI	CLSDEAD,A0
	MOVE	A0,*A8(OID)
	MOVE	*A8(OPLINK),A0,L
	MOVI	NBLOWME2,A7
	CALLA	XFERPROC
	CLR	A0
	MOVE	A0,*A8(OXVEL),L
	MOVE	A0,*A8(OYVEL),L
	RETS
HSMRT
	MOVE	A9,A2
;A2=P1DATA OR P2DATA
	MOVI	HLKPT,A1		;AMOUNT OF SCORE FOR MINE LAYER!
	CALLA	SCRADD2			;DO IT!
	MOVE	*A8(OYPOS),A2
	ADDK	20,A2			;A2=Y OFFSET
	MOVE	A2,*A8(OYPOS)
	MOVI	300,A0			;200
	MOVE	A0,*A8(OZPOS)
	MOVI	XBOOM2,A9		;BOOM3 CHANGES PALETTE TO EXPLOSION!
	JAUC	FRANIM_DIE
XBOOM2:
	.LONG	XPLD1
	.WORD	NEWPALET|4
	.LONG	GRNBOOM
	.LONG	XPLD2
	.WORD	4
	.LONG	XPLD3
	.WORD	4
	.LONG	XPLD4
	.WORD	4
	.LONG	XPLD5
	.WORD	4
	.LONG	XPLD6
	.WORD	4
	.LONG	XPLD7
	.WORD	6
	.LONG	XPLD8
	.WORD	6
	.LONG	XPLD9
	.WORD	6
	.LONG	XPLD10
	.WORD	6
	.LONG	0


FLAME_LAY
;MINE LAYER HIT BY BULLET
	MMTM	SP,A1,A2,A3,A7,A9,A10
	PUSH	A0
	MOVI	HITLAY,A3
	CALLA	DO_PUNISH
	PULL	A0
	JRLT	PFT
;KILL MINE LAYER!
;TURN OFF COLLISIONS FOR THIS MINE LAYER
;XFERPROC THIS MINE LAYER TO CODE WHICH TURNS ON SOME FLAMES
;THAT CODE WILL LET IT FLAME FOR AWHILE THEN PUT A FEW EXPLOSIONS
;ON TOP OF IT AND KILL EVERYTHING
;THAT CODE WILL ALSO EXPLODE ALL LAND MINES THIS MINE LAYER HAS LAYED DOWN
;A8=MINE LAYER
;
	MOVE	*A0(OPLINK),A0,L	;PLAYER PROCESS
	MOVI	LAYPT,A1
	CALLA	SCORE_IT		;SCORES SAME AS FIEND
	MOVE	*A8(OFLAGS),A4
	ORI	M_NOCOLL,A4		;NO COLLISIONS
	MOVE	A4,*A8(OFLAGS)
	MOVE	*A8(OPLINK),A0,L	
	MOVI	LAY_EXP,A7
	CALLA	XFERPROC
	MMFM	SP,A1,A2,A3,A7,A9,A10
	RETS
PFT
;FLASH THIS MINE LAYER
	MOVI	03F3F0000H,A9
	CREATE	0,FLASHME
	MMFM	SP,A1,A2,A3,A7,A9,A10
	RETS

YKIL_RNG
;A8=MINE LAYER IMG PNTR
	MMTM	SP,A1,A2,A7
	MOVE	*A0(OPLINK),A0,L
	MOVI	P1DATA,A2
	MOVE	*A0(PNUM),A0
	CMPI	1,A0
	JREQ	J5
	MOVI	P2DATA,A2
;A2=P1DATA OR P2DATA
J5	MOVI	LAYPT,A1			;AMOUNT OF SCORE
	CALLA	SCRADD2
	JRUC	CONT

YKIL_LAY
;KILL MINE LAYER BECAUSE OF COLLISION WITH RING OR TIME BOMB
;EXTER HERE FROM COLLISION ROUTINE - RINGS KILL MINE LAYER
;A8=MINE LAYER IMG PNTR
	MMTM	SP,A1,A2,A7
	MOVE	*A0(OPLINK),A0,L
	MOVI	LAYPT,A1
	CALLA	SCORE_IT
CONT
	MOVE	*A8(OFLAGS),A0
	ORI	M_NOCOLL,A0
	MOVE	A0,*A8(OFLAGS)
	MOVE	*A8(OPLINK),A0,L
	MOVI	LAY_EXP,A7		;END OF MINE LAYER DEATH - NO FLAMES
	CALLA	XFERPROC
	MMFM	SP,A1,A2,A7
	RETS

;
SPAWN_LYR:
;SPAWN TANK IS CALLED FROM 'WAVE OVERLORD' CODE WHICH DISPERSES
;BAD GUYS THROUGHOUT A WAVE
	MOVE	@HALT,A0
	JRNZ	TANK_OUT
	MOVE	@LYR_CNT,A2		;MOVE BYTE (# TANKS ON SCRN) TO A2
	MOVE	@MAXLYR,A3
	CMP	A3,A2 	 		;TANKS MAXED OUT?
	JRGE	TANK_OUT    		;
 	CREATE	LAYPID,ATNK 		;START ONE MINE LAYER
TANK_OUT:
	RETS

LOCK	LOCKUP
CLRTNK
	MOVE	A0,*A13(MRAM),L		;CALL FREEOBJ LATER
	MOVE	A0,*A13(KPMRAM),L
	CLR	A0
	MOVE	A0,*A13(MYPLYR)		;FOR WHEN LAYER KILLS GRUNTS!
	MOVE	A0,*A13(SPDY)
	MOVE	A0,*A13(TOTMN)
	MOVE	A0,*A13(ABSRB)
	MOVE	A0,*A13(CFLAGS)
	MOVE	A0,*A13(SK_DIR)
	MOVK	25,A0
	MOVE	A0,*A13(CNTR)
	MOVE	A0,*A13(LAYTMR)
	RETS
STRT_ALAY	;A8=*MINE LAYER
	MOVI	CLSDEAD,A0
	MOVE	A0,*A8(OID)
;	movi	LAYPID,a0
;	move	a0,*a13(PROCID)
	move	a13,*a8(OPLINK),L
	MOVI	2*60,B0		;3
	MOVI	18*60,B1	;12
	CALLA	RANGRAND
	CALLA	PRCSLP
	CALLA	GETOBJ
	JRZ	LOCK			;NO FREE OBJECT SPACE
	CALLR	CLRTNK
;A9=[Y,X] OF SPOT TO START FROM
;A10=DIRECTION
;8	1	2
;7		3
;6	5	4
	MOVE	*A8(OXPOS),A9
	SUBK	15,A9
	MOVE	*A8(OYVAL),A1,L
	MOVY	A1,A9


	MOVE	*A8(OIMG),A0,L
	MOVE	*A0(32),A0,L		;DATA ADDR
	MOVI	MTNK6,A1
	MOVE	*A1(64),A1,L		;DATA ADDR
	CMP	A0,A1
	JRZ	SG1
	MOVI	MTNK9,A1
	JRUC	SG2
SG1
;LEFT/RGT GUN PIT
;TURN ON GUNNER DUDE 
	MOVI	MTNK6,A1
SG2	MOVE	A1,*A8(OIMG),L


	MOVK	5,A10
	MOVE	*A8(OIMG),A0,L
	CMPI	MTNK9,A0
	JRNZ	JIN
	MOVK	7,A10
	MOVE	*A8(OFLAGS),A0
	BTST	B_FLIPH,A0
	JRZ	JIN
	MOVK	3,A10
JIN  	MOVK	2,A1
	MOVE	A1,*A13(LEVEL),W
	MOVE	A8,A0
	CALLA	DELOBJ
	CALLR	JINHR			;TURN ON IMG, SET LOCATION, DIRECTION
	MOVE	@LYR_CNT,A0
	INC	A0
	MOVE	A0,@LYR_CNT
	JRUC	ATNK2
ATNK:
;YES A NEW MINE LAYER WILL APPEAR
;UPDATE WAVE_INFO RAM TABLE TO REFLECT THIS NEW ENTRY!
;THIS TANK WAS SPAWNED FROM 'WAVE OVERLORD' CODE
	CALLA	GETOBJ
	JRZ	LOCK			;NO FREE OBJECT SPACE
	CALLR	CLRTNK
	CALLR	INIT_TNK		;TURN ON IMG, SET LOCATION, DIRECTION
	CALLR	SETUP_TNK		;INC CNT, SET DIR, SET DEATH FLAG, ETC
ATNK2	MOVI	500,A0
	CALLA	RANDPER
	JRNC	NORED
;RED MINE LAYER
	MOVK	4,A0
	MOVE	A0,*A13(LAYTMR)
	MOVI	MTNKP2,A0		;GRNTB,A0 ;GRNTP ;ALWAYS SOLDIER
	CALLA	GETFPAL			;GET A COLOR MAP ASSIGNMENT
	MOVE	A0,*A8(OPAL),W		;STORE THE NEW PALETTE
	MOVI	HSPEED2,A1		;TANK SPEED
	MOVE	A0,*A13(SPDY)
	JRUC	ARED

NORED	MOVI	HSPEED,A1		;TANK SPEED
ARED	CALLA	DO_DIFF2

     	CLR	A0
	move	A0,*a8(OCONST)
	MOVE	*A13(DIR),A0
	CALLA	INTO12
	CALLR	GET_RUN			;GET FIRST FRANIM PNTR FOR
					;THIS TANKS DIRECTION

;SELECT A RANDOM PATTERN FOR MINE LAYER ENTERING FROM THIS DIRECTION
	MOVE	*A13(DIR),A0
	SLL	5,A0
	ADDI	PATLST,A0
	MOVE	*A0,A0,L
	MOVE	@PTMP,A1
	INC	A1
	MOVE	A1,@PTMP
	ANDI	03H,A1

	SLL	5,A1
	ADD	A1,A0
	MOVE	*A0,A0,L
	MOVE	*A0+,A1,W		;GET FIRST DISTANCE CNT
	MOVE	*A13(SPDY),A3
	JRZ	NOSPD0
;SPEEDY MINE LAYER
	SRL	1,A1
NOSPD0
	MOVE	A0,*A13(MYPATRN),L
	MOVE	A1,*A13(DIS)
;
; LOOP TOP FOR TANKS
;
	MOVE	A13,A10
	CREATE	0,ANTENNA
	MOVE	A0,*A13(MYANT),L	;KEEP FOR WHEN MINE LAYER DIES

;	MOVI	MECH1,A0		;MECHANICAL ARRIVAL SND
;	CALLA	ONESND
;BEEP BEEP HORN SND

LUP_TP:
;TOP OF TANK LOGIC
	MOVE	@HALT,A0
	JRZ	TMV
	SLEEPK	1
   	JRUC	LUP_TP

TMV
	MOVE	*A13(CNTR),A3
	ANDI	07H,A3
	DEC	A3
	JRNZ	TMV3
;SWAP THIS MINE LAYER OID BETWEEN PLAYER/HELPER AND MINE LAYER
	MOVK	1,A3
	MOVI	CLSPLYR|TYPHLPR|SUBLAY,A1
	MOVE	*A8(OID),A0
	ANDI	0FFFFH,A0
	CMPI	CLSENMY|TYPLAYR,A0
	JRZ	TMV2
	MOVK	3,A3
	MOVI	CLSENMY|TYPLAYR,A1
TMV2	MOVE	A1,*A8(OID)
TMV3
	MOVE	A3,*A13(CNTR)
	MOVE	*A13(CFLAGS),A0
	BTST	0,A0
 	JRZ	NOSPN
;THIS TANK IS SPINNING, DO SPIN
	MOVE	*A13(SK_DIR),A1
	MOVE	*A13(DIR),A0,W
	CALLR	WAY
	JRC	DIT			;INC
;DEC=CLRC
	CLR	A1			;MOVI	0,A1
	MOVE	A1,*A13(WAY01)
	JRUC	DIT0
DIT	MOVK	1,A1
	MOVE	A1,*A13(WAY01)
DIT0
	MOVE	A0,*A13(DIR),W
	CALLR	GET_STAND		;DOES ANI OF CORRECT VIEW
	MOVE	*A13(SK_DIR),A1
	MOVE	*A13(DIR),A0,W
	CMP	A0,A1
	JREQ	GOODNEWS
;ANI IN NEW STAND/SPIN DIR
	SLEEPK	4
	JRUC	LUP_TP

GOODNEWS:
	SLEEPK	20
	CALLR	GET_RUN			;ZEROS STAND FLAG ALSO
	MOVE	*A13(DIR),A0
	CALLA	INTO12			;GET PROPER VELOCITY FOR THIS DIR
	SLEEPK	1
	JRUC	LUP_TP

NOSPN:	MOVE	*A13(DIS),A0		;UPDATE DISTANCE COUNT
	DEC	A0
	MOVE	A0,*A13(DIS)		;STUFF NEW COUNT
	JRNZ	DOTNK			;BR=CONTINUE CURRENT DIRECTION
;TIME TO GET NEW DISTANCE AND NEW DIRECTION
	MOVE	*A13(MYPATRN),A10,L
	MOVE	*A10+,A11,W		;GET NEW DIRECTION
	JRZ	PATDN			;BR=PATTERN FINISHED
	CLR	A0
	MOVE	A0,*A8(OXVEL),L
	MOVE	A0,*A8(OYVEL),L
	SLEEPK	20
	MOVE	*A10+,A2,W		;GET NEW DIS
	MOVE	*A13(SPDY),A3
	JRZ	NOSPD
;SPEEDY MINE LAYER
	SRL	1,A2
NOSPD	MOVE	A2,*A13(DIS)		;STUFF NEW COUNT
	MOVE	A10,*A13(MYPATRN),L
	MOVE	A11,*A13(SK_DIR)
;TANK WILL SEEK TO A 45 DEGREE ANGLE (1,4,7,10)
	MOVK	1,A0			;TANK WILL SPIN TO SK_DIR
	MOVE	A0,*A13(CFLAGS)		;I WILL SPIN!
MOR	SLEEPK	1
	JRUC	LUP_TP

PATDN
;PATTERN FINISHED
;DELETE ANTENNA, MINE LAYER
;DIE
	CALLA	SCRTST
	JRNZ	NBLOWME
;I AM STILL ON SCRN! CONTINUE IN THIS DIRECTION
	MOVK	20,A0
	MOVE	A0,*A13(DIS)
	JRUC	MOR
NBLOWME
;I AM OFF SCRN
	MOVE	A8,A0
	CALLA	DELOBJ

NBLOWME2	;ENTRY FOR SMART BOMB
	MOVE	*A13(MYANT),A0,L
	CALLA	KILL
	MOVE	*A13(KPANTOBJ),A0,L
	CALLA	DELOBJ

	MOVE	@LYR_CNT,A0
	DEC	A0
	MOVE	A0,@LYR_CNT
	MOVE	*A13(KPMRAM),A10,L
	MOVE	*A13(TOTMN),A0			;FLAG FOR I HAVE ALREADY
	JRNN	EXPEM				;KILLED MY LAND MINES
	DIE
EXPEM
	MOVE	A10,A9
ND0	MOVE	*A9+,A0,L
	JRZ	NDN
	CALLA	ISOBJ
	JRZ	ND0
	MOVE	*A0(OIMG),A1,L
	CMPI	M1,A1				;LAND MINE
	JRNZ	ND0
	MOVI	DMAWNZ|M_NOCOLL,A1		;LAND MINE NO COLLIDE ON
	MOVE	A1,*A0(OFLAGS)
	MOVE	A0,A8
	MOVI	MTING,A0			;LAND MINE EXPLOSION SND
	CALLA	ONESND
	CREATE	0,KMINE
	SLEEPK	6
	JRUC	ND0
NDN	MOVE	A10,A0				;MOVE	*A13(KPMRAM),A0,L
	CALLA	FREEOBJ
	DIE
KMINE
	MOVE	A8,A10
	CREATE	0,KM2
	CREATE	0,KM2
	CREATE	0,KM2
	SLEEPK	4 				;KILL ORIGINAL LAND MINE
	MOVE	A10,A0
	CALLA	DELOBJ
	DIE
KM2
	MOVI	-08000H,B0
	MOVI	08000H,B1
	CALLA	RANGRAND
	MOVE	A0,A6
	MOVI	-08000H,B0
	MOVI	08000H,B1
	CALLA	RANGRAND
	MOVE	A0,A7

	MOVI	FIREEXP,A9
	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	ADDI	[5,0],A0
	ADDI	[5,0],A1
	MOVI	292,A3				;241	;282
	MOVI	DMAWNZ|M_NOCOLL,A4		;NON-ZERO VALUE
	MOVI	CLSNEUT|TYPNEUT,A5
  	MOVI	CLD1,A2

	CALLA	BEGINOBJ2
;CREATE EXPLOSION, AND THEN DIE
	MOVK	1,A1
	JSRP	FRANIM
	MOVE	A8,A0
	CALLA	DELOBJ
	DIE

DOTNK:
;MINE LAYER JUST CRUISING ALONG!
;CHECK FOR WALL BORDERS!

	MOVE	@WAVE,A0
	CMPI	22,A0
	JRNZ	DT2
	MOVE	*A13(DIR),A0
	CMPI	1,A0
	JRNZ	DT2
	MOVE	*A8(OYPOS),A0
	CMPI	10CH,A0
	JRNC	DT2
;TURN ME AROUND
	CLR	A0
	MOVE	A0,*A8(OYVEL),L
	MOVK	7,A11
	MOVE	A11,*A13(SK_DIR)
;TANK WILL SEEK TO A 45 DEGREE ANGLE (1,4,7,10)
	MOVK	1,A0			;TANK WILL SPIN TO SK_DIR
	MOVE	A0,*A13(CFLAGS)		;I WILL SPIN!
	MOVK	30,A0
	MOVE	A0,*A13(DIS)
DT2


	MOVE	*A13(LAYTMR),A0
	DEC	A0
	MOVE	A0,*A13(LAYTMR)
	JRNZ	KS
	MOVE	*A13(TOTMN),A0
	JRN	KS
	CMPI	11,A0
	JRNC	KS2
;LAY DOWN A LAND MINE
	INC	A0
	MOVE	A0,*A13(TOTMN)
	MOVK	7,A0
	MOVE	A0,*A13(LAYTMR)
	MOVE	*A13(DIS),A0
	CMPI	5,A0			;5
	JRC	KS
	CALLR	LAYIT
KS
	CLR	A1
	JSRP	FRANIM
	JRNC	LUP_TP			;BR=NOT AT END OF SCRIPT YET
	CALLR	GET_RUN
	JRUC	LUP_TP
KS2	MOVI	0FFFFH,A0		;FLAG FOR MINE LAYER TO KNOW
	MOVE	A0,*A13(TOTMN)		;TO NOT KILL HIS LAND MINES
	MOVE	*A13(KPMRAM),A10,L	;AT DEATH
	CREATE	0,EXPEM
	JRUC	KS


BIGBLU
	.LONG	XPLD1
	.WORD	4
	.LONG	XPLD2
	.WORD	4
	.LONG	XPLD3
	.WORD	4
	.LONG	XPLD4
	.WORD	4
	.LONG	XPLD5
	.WORD	4
	.LONG	XPLD6
	.WORD	4
	.LONG	XPLD7
	.WORD	4
	.LONG	XPLD8
	.WORD	4
	.LONG	XPLD9
	.WORD	4
	.LONG	XPLD10
	.WORD	4
	.LONG	0
;BIGGRN
;	.LONG	XPLD1
;	.WORD	4
;	.LONG	XPLD2
;	.WORD	4
;	.LONG	XPLD3
;	.WORD	4
;	.LONG	XPLD4
;	.WORD	4
;	.LONG	XPLD5
;	.WORD	4
;	.LONG	XPLD6
;	.WORD	4
;	.LONG	XPLD7
;	.WORD	4
;	.LONG	XPLD8
;	.WORD	4
;	.LONG	XPLD9
;	.WORD	4
;	.LONG	XPLD10
;	.WORD	4
;	.LONG	0

SENDGRN
;SEND GREEN EXPLOSIONS FROM JEEP
;A8=JEEP
;	MOVI	ALTEXP4,A0
;	CALLA	ONESND
	MOVK	8,A11
	MOVE	A8,A10
LE2
	CREATE	0,KM2B
	DSJS	A11,LE2
	DIE
BGLSEXP	.WORD	>FDF8,20,>80DB,0		;ALT CHAN GLASS SHATTER
SENDGRN2
;SEND GREEN EXPLOSIONS FROM WARP DISC LOCATION
;A8=WARP DISC
	MOVI	BGLSEXP,A0
	CALLA	ONESND
	MOVK	8,A11
	MOVE	A8,A10
BLE2
	CREATE	0,KM2C
	DSJS	A11,BLE2
	DIE

ZKBM2
	.LONG	0,0,X1BLU
	.WORD	293,DMAWNZ+M_NOCOLL,CLSDEAD
	.LONG	0H,0H
ZKBM3
	.LONG	0,0,X1GRN
	.WORD	293,DMAWNZ+M_NOCOLL,CLSDEAD
	.LONG	0H,0H

LAY_EXP
;A8=MINE LAYER IMG
;COVER TIME
	MOVI	AGLSEXP,A0
	CALLA	ONESND
	MOVK	8,A11
	MOVE	A8,A10
LE1
	CREATE	0,KM2A
	DSJS	A11,LE1
	SLEEPK	6
	MOVI	GLSEXP,A0
	CALLA	ONESND
	MOVE	A10,A8
	JRUC	NBLOWME
KBM	;ARM RGT
	.LONG	0,0,T72BLAST1	;FIRE1
	.WORD	293,DMAWNZ+M_FLIPH+M_NOCOLL,CLSDEAD
	.LONG	0H,0H
SAVE1
	CALLA	GPALOBJ			;ALLOCATE A COLOR PALETTE 
	CALLA	STFOBJ			;STUFF OBJECT DATA 
	CALLA	INSOBJ			;INSERT OBJECT INTO LIST
	MOVE	A0,A9			;A8
	MOVE	*A9(OPAL),A0,L
	ANDI	0FFFFH,A0
	MOVE	A0,*A9(OPAL),L
	MOVE	A10,A8
	CALLA	GETANIXY
	MOVE	A9,A0
	MOVE	*A0(OFLAGS),A4,W	;SAME FLAGS AS BEFORE
	RETS
KM2B
;TURN ON BURST EXP
;SEND IT OUT AT CORRECT ANGLE
;KILL OFF
;A10=MINE LAYER IMG
;A11=BURST #
	MOVI	ZKBM2,A14		;DEATH FOR JEEP
	CALLR	SAVE1
	ADDI	0500000H,A2		;Y
	CALLA	GANISAG
	MOVE	A9,A8
	MOVI	BIGBLU,A9
	JRUC	CONTS
KM2C
;TURN ON BURST EXP
;SEND IT OUT AT CORRECT ANGLE
;KILL OFF
;A10=WARP DISC
;A11=BURST #
	MOVI	ZKBM3,A14		;INTRO FOR WARP DISC
	CALLR	SAVE1
	ADDI	0200000H,A2		;Y
	ADDI	0A0000H,A3		;X
	CALLA	GANISAG
	MOVE	A9,A8
	MOVI	BIGBLU,A9	;GRN,A9
	JRUC	CONTS

KM2A
;TURN ON BURST EXP
;SEND IT OUT AT CORRECT ANGLE
;KILL OFF
;A10=MINE LAYER IMG
;A11=BURST #
	MOVI	KBM,A14			;BLOOD
	CALLR	SAVE1
	SUBI	0F0000H,A2		;1C
	CALLA	GANISAG
	MOVE	A9,A8
	MOVI	TBLST,A9

CONTS	SLL	5,A11
	MOVI	XVL,A0
	ADD	A11,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A8(OXVEL),L

	MOVI	YVL,A0
	ADD	A11,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A8(OYVEL),L

;FROM MINE LAYER DEATH
	JAUC	FRANIM_DIE
XVL	.LONG	0,0,14000H,18000H,14000H,0,-14000H,-18000H,-14000H
YVL	.LONG	0,-16000H,-14000H,0,14000H,16000H,14000H,0,-14000H
;812
;7 3
;654
LAYIT
;A8=MINE LAYER
	MOVE	*A13(DIR),A10
	MOVE	*A8(OXVAL),A0,L
	MOVE	*A8(OYVAL),A1,L
	SLL	5,A10
	ADDI	MYX,A10
	MOVE	*A10,A10,L
	ADD	A10,A1
	SLL	16,A10
	ADD	A10,A0
;A0 & A1 ARE SET UP
	MOVI	M1,A2		;DOES NOT MATTER
	MOVI	69,A3
	MOVI	DMAWNZ,A4	;NON-ZERO VALUE
	MOVI	CLSNEUT|TYPMINE,A5
	CLR	A6
	CLR	A7
	PUSH	A8
	CALLA	BEGINOBJ2
	CLR	A0
	MOVE	A0,*A8(OPLINK),L
;PUT THIS IMG PNTR INTO A RAM LIST FOR THIS MINE LAYER
	MOVE	*A13(MRAM),A0,L
	MOVE	A8,*A0+,L
	CLR	A1
	MOVE	A1,*A0,L		;ZERO NEXT ENTRY
	MOVE	A0,*A13(MRAM),L
	PULL	A8
	RETS

MYX	.LONG	0,[6,10H],0,0,[12H,18H],0,0,[10H,0FH],0,0,[10H,18H],0,0
;	  1
;      12   2
;    11	      3
;   10	        4		;MINE LAYER 12 ANGLES
;     9	      5
;       8   6
;         7

SETUP_TNK:
;UPDATE WAVE RAM CNT FOR TANKS ON THIS WAVE
;SET LEVEL FOR THIS TANK
;
; UPDATE TNK COUNT
;
	MOVE	@LYR_CNT,A0
	INC	A0
	MOVE	A0,@LYR_CNT

	MOVI	TANK,A2
	CALLA	GET_WVADDR

	MOVE	*A0(32),A1,W		;GET DIFFICULTY LEVEL
	MOVE	A1,*A13(LEVEL),W

	MOVE	*A0(16),A1,W		;DEC WAVE RAM CNT FOR THIS TANK
	DEC	A1
   	MOVE	A1,*A0(16),W
	JRNZ	BZ
;END OF THIS WAVES TANK CNT
	MOVK	1,A1
	MOVE	A1,@TNK_DN
BZ
	RETS
ANTENNA
;A8=MINE LAYER UNDER ANTENNA
;A10=MINE LAYER PROCESS UNDER ME
;TURN ON AN ANTENNA IMAGE OVER MINE LAYER
;SIT ON TOP OF TANK
;ADJUST FOR SPINNING MINE LAYING TANK!
	MOVE	A8,*A13(PDATA),L	;TANK OBJECT PNTR
	CALLA	GETANIXY
	CLR	A6
	CLR	A7
	MOVE	A2,A1
	MOVE	A3,A0
	MOVI	160,A3			;133
	MOVI	DMAWNZ|M_NOCOLL,A4
	MOVI	CLSNEUT,A5
	MOVI	ANT,A2			;ANTENNA IMG
	CALLA	BEGINOBJ2
	MOVE	A8,*A10(KPANTOBJ),L	;STORE IN MINE LAYER PROC FOR KILLING

	MOVE	*A8(OPAL),A0,L
	ANDI	0FFFFH,A0
	MOVE	A0,*A8(OPAL),L
ANTTOP	SLEEPK	1
	CALLR	SIT
	JRUC	ANTTOP

;	  1
;      12   2
;    11	      3
;   10	        4		;MINE LAYER 12 ANGLES
;     9	      5
;       8   6
;         7
SIT:
	MOVE	A8,A0
	MOVE	*A13(PDATA),A8,L	;MINE LAYER IMG PNTR
	CALLA	GETANIXY
;A2=Y,A3=X
	MOVE	*A10(DIR),A4		;MINE LAYER DIR
	SLL	5,A4
	ADDI	ADLST,A4
	MOVE	*A4,A4,L
	ADD	A4,A2
	SLL	16,A4
	ADD	A4,A3
	MOVE	*A0(OFLAGS),A4,W
	CALLA	GANISAG		;ADJUSTS TORSO
	MOVE	A0,A8
     	RETS
;Y,X ADD IN FOR ANTENNA AT DIFFERENT ANGLES
ADLST	.LONG	0,[-26,2],[-27,-8],[-29,-8],[-31,-2],[-30,-2],[-30,0]
	.LONG	[-28,-6],[-30,-4],[-30,-2],[-32,-2],[-29,4],[-29,-2]


WAY:
;SPIN LEFT OR RIGHT
;A1=SEEK DIR
;A0=DIR IMAGE IS FACING NOW
;	  1
;      12   2
;    11	      3
;   10	        4		;MINE LAYER 12 ANGLES
;     9	      5
;       8   6
;         7
;812
;7 3				;NORMAL GRUNT
;654
;        01
;      16  02
;     15    03
;    14	     04
;   13	      05		;16 ANGLE TANK, ETC
;    12	     06
;     11    07
;      10  08
;        09
	SUB	A0,A1
	MOVE	A1,A2
	ABS	A1
	CMPI	7,A1	;9;5
	JRLT	N0
	NEG	A2
N0:	BTST	31,A2
	JRZ	IC
INHERE:	DEC	A0
	JRP	TDEC
	MOVK	12,A0	;16;8
TDEC	CLRC				;MEANS DEC
	RETS
IC:	INC	A0  			;ROTATE TOWARD PLAYER
	CMPI	13,A0	;17;9
	JRNE	T1
	MOVK	1,A0			
T1:	SETC				;MEANS INC
	RETS

GET_RUN:
;GET FRANIM BASE ADDRESS FOR THIS TANKS DIRECTION
;	  1
;      12   2
;    11	      3
;   10	        4
;     9	      5
;       8   6
;         7
	MOVE	*A13(DIR),A4
	DEC	A4
	SLL	5,A4			;*32 FOR LONG WORD LOOKUP TABLE 
	ADDI	WALK_LIST,A4		;CALCULATE OFFSET IN TABLE
	MOVE	*A4,A9,L		;MOVE TABLE VALUE INTO A9
					;NEW ANIMATION SCRIPT
	MOVE	*A13(CFLAGS),A0
	ANDI	0FFFEH,A0		;
	MOVE	A0,*A13(CFLAGS)		;ZERO STANDING/SPIN FLAG
	RETS

;	  1
;      12   2
;    11	      3
;   10	        4
;     9	      5
;       8   6
;         7
SPINFRMS:
	.LONG	MTNK12,MTNK11,MTNK10,MTNK9,MTNK8,MTNK7,MTNK6
	.LONG	MTNK7,MTNK8,MTNK9,MTNK10,MTNK11
TK_SPINFLGS:
	.WORD	DMAWNZ,DMAWNZ+M_FLIPH,DMAWNZ+M_FLIPH,DMAWNZ+M_FLIPH
	.WORD	DMAWNZ+M_FLIPH,DMAWNZ+M_FLIPH,DMAWNZ
	.WORD	DMAWNZ
	.WORD	DMAWNZ,DMAWNZ,DMAWNZ
	.WORD	DMAWNZ

GET_STAND:
;ANI ONTO SCREEN THIS TANKS STANDING POSITION
	MOVE	*A13(DIR),A0		;CURRENT DIR TANK IS FACING
	DEC	A0
	ANDI	0FH,A0
	MOVE	A0,A2
	SLL	5,A0
	ADDI	SPINFRMS,A0
	MOVE	*A0,A1,L		;NEW OIMG
	SLL	4,A2
	ADDI	TK_SPINFLGS,A2
	MOVE	*A2,A4,W		;NEW OFLAGS
	CALLA	ANI
	RETS

INTOL	.LONG	0,60H,0C0H,120H,180H,1E0H,240H,2A0H
INIT_TNK:
;TURN ON TANK AT ONE OF THE 8 LOCATIONS HULKS CAN GENERATE FROM
;SET HIS DIR ACCORDINGLY
	CALLA	RANDOM
	ANDI	07H,A0

;	MOVK	2,A0			;0=UP,2=RGT,4=LFT,6=DWN

	SLL	5,A0
	ADDI	INTOL,A0
	MOVE	*A0,A0,L
	MOVE	@ENEMY_RECT,A8,L
	ADD	A0,A8

	ADDK	16,A8	 		;SKIP TYPE OF RELEASE RECTANGLE

	MOVE	*A8+,A10,W		;DIRECTION
	MOVE	*A8+,A0,W
	MOVE	A0,B0
	MOVE	*A8+,A2
	MOVE	*A8+,A0
	MOVE	A0,B1
	CALLA	RANGRAND
	MOVE	A0,A9
	MOVE	A2,B0
	MOVE	*A8,A0
	MOVE	A0,B1
	CALLA	RANGRAND
	SLL	16,A0
	MOVY	A0,A9

JINHR
;A8=CHOSEN RECTANGLE INFO
;A9=[Y,X] OF SPOT TO START FROM
;A10=DIRECTION
;8	1	2
;7		3
;6	5	4
;NEED
;	  1
;      12   2
;    11	      3
;   10	        4
;     9	      5
;       8   6
;         7
	
	SLL	5,A10
	MOVI	XYOFST,A0
	ADD	A10,A0
	MOVE	*A0,A0,L
	ADD	A0,A9
	MOVI	NEWD,A0
	ADD	A10,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A13(DIR)
	MOVI	TIMG,A0
	ADD	A10,A0
	MOVE	*A0,A2,L		;IMG TO START WITH
	MOVI	TFLP,A0
	ADD	A10,A0
	MOVE	*A0,A4,L		;IMG TO START WITH
	MOVI	159,A3			;158
	MOVI	CLSENMY|TYPLAYR,A5
	CLR	A6	
	CLR	A7
	CLR	A1
	MOVY	A9,A1
	SLL	16,A9
	MOVE	A9,A0
	CALLA	BEGINOBJ2
	RETS

XYOFST	.LONG	0,[0,25],0,[15,0],0,[0,25],0,[15,0],0

NEWD	.LONG	0,1,1,4,4,7,7,10,10,10,10
TIMG	.LONG	0,MTNK12,MTNK12,MTNK9,MTNK9,MTNK6,MTNK6,MTNK9,MTNK9,MTNK9
TFLP	.LONG	0,DMAWNZ,DMAWNZ,DMAWNZ|M_FLIPH,DMAWNZ|M_FLIPH,DMAWNZ
	.LONG	DMAWNZ,DMAWNZ,DMAWNZ,DMAWNZ

;	  1
;      12   2
;    11	      3
;   10	        4
;     9	      5
;       8   6
;         7
WALK_LIST:
	.LONG	TNK01,0,0,TNK04,0,0,TNK07
	.LONG	0,0,TNK10,0,0
;
;TANK ANIMATION TABLES
;
TNK01:		;GO UP
	.LONG	MTNK12
	.WORD	FLIPBITS|05,0
	.LONG	MTNK12B
	.WORD	05
	.LONG	MTNK12
	.WORD	05
	.LONG	MTNK12B
	.WORD	05
	.LONG	MTNK12
	.WORD	05
	.LONG	MTNK12B
	.WORD	05
	.LONG	MTNK12
	.WORD	05
	.LONG	MTNK12B
	.WORD	05
	.LONG	MTNK12
	.WORD	05
	.LONG	MTNK12B
	.WORD	05
	.LONG	MTNK12
	.WORD	05
	.LONG	MTNK12B
	.WORD	05
	.LONG	0
TNK04:		;GO RIGHT
	.LONG	MTNK9
	.WORD	FLIPBITS|05,(M_FLIPH)
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	0
TNK07:		;GO DOWN
	.LONG	MTNK6
	.WORD	FLIPBITS|05,0
	.LONG	MTNK6B
	.WORD	05
	.LONG	MTNK6
	.WORD	05
	.LONG	MTNK6B
	.WORD	05
	.LONG	MTNK6
	.WORD	05
	.LONG	MTNK6B
	.WORD	05
	.LONG	MTNK6
	.WORD	05
	.LONG	MTNK6B
	.WORD	05
	.LONG	MTNK6
	.WORD	05
	.LONG	MTNK6B
	.WORD	05
	.LONG	MTNK6
	.WORD	05
	.LONG	MTNK6B
	.WORD	05
	.LONG	0
TNK10:		;GO LEFT
	.LONG	MTNK9
	.WORD	FLIPBITS|05,0
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	MTNK9
	.WORD	05
	.LONG	MTNK9B
	.WORD	05
	.LONG	0

PATLST
;	  1
;      12   2
;    11	      3
;   10	        4		;MINE LAYER 12 ANGLES
;     9	      5
;       8   6
;         7
;
	.LONG	0,UPLST,0,0,RGTLST,0,0,DWNLST,0,0,LFTLST,0,0
;
UPLST	.LONG	UPL1,UPL2,UPL3,UPL4
RGTLST	.LONG	RGTL1,RGTL2,RGTL3,RGTL4
DWNLST	.LONG	DWNL1,DWNL2,DWNL3,DWNL4
LFTLST	.LONG	LFTL1,LFTL2,LFTL3,LFTL4

;INTO MYPATRN PDATA AREA VARIABLE
;DISTANCE,NEW DIR,DISTANCE,NEW DIR
;NEW DIR=0=TANK HAS FINISHED PATTERN (IS OFF SCRN), DIE OFF
UPL1	.WORD	60,4,30,7,12H,10,32H,1,30H,0,0,0
UPL2	.WORD	40,10,30,1,16H,4,60H,0,0,0
UPL3	.WORD	40,4,10,1,38H,0,0,0
UPL4	.WORD	30,10,1AH,1,30,4,30H,1,20H,0,0,0
;
RGTL1	.WORD	84H,0,0,0			;GO RGT 100, DIE
RGTL2	.WORD	55H,7,38H,0,0,0
RGTL3	.WORD	30,1,12H,4,30H,7,12H,10,48H,0,0,0
RGTL4	.WORD	50H,1,30H,0,0,0
;
DWNL1	.WORD	03CH,4,1AH,10,40,7,10H,1,50H,0,0,0
DWNL2	.WORD	68H,0,0,0			;GO DWN 100, DIE
DWNL3	.WORD	50,10,60,0,0,0
DWNL4	.WORD	38,4,45,7,30,10,40,7,10,1,40,10,40H,0,0,0
;
LFTL1	.WORD	84H,0,0,0			;GO LFT 100, DIE
LFTL2	.WORD	60H,4,68H,0,0,0
LFTL3	.WORD	44H,1,2CH,0,0,0
LFTL4	.WORD	20H,7,20,10,40,1,48H,0,0,0
;
	.END



